ctjsVersion: 4.0.2
notes: >
  /*


  https://www.zapsplat.com/sound-effect-category/steampunk/page/3/


  https://pixabay.com/sound-effects/search/steampunk/


  https://pixabay.com/music/search/genre/video%20games/



  https://www.freepik.com/free-vector/cartoon-element-animation-frames_13818844.htm#query=sprite%20sheet%20smoke&position=21&from_view=keyword&track=ais&uuid=e9e5dd31-79c2-47b2-8a23-bb0734f64130

  <a
  href="https://www.freepik.com/free-vector/set-explosion-effect-cartoon-comic-style_11053545.htm#query=sprite%20sheet%20smoke&position=31&from_view=keyword&track=ais&uuid=e9e5dd31-79c2-47b2-8a23-bb0734f64130">Image
  by macrovector</a> on Freepik


  https://opengameart.org/content/particle-pack-80-sprites

  */
libs:
  tween: {}
  pointer:
    preventdefault: false
    startlocked: false
  keyboard: {}
  akatemplate:
    toptop: ' <!-- top -->'
    botbot: '  <!-- bottom -->'
    csscss: /* CSS */
  random: {}
  transition: {}
  storage: {}
  vkeys: {}
  place:
    undefined: ''
    gridX: 512
    gridY: 512
    debugMode: false
    debugText: 16
  sprite:
    spritedef: |-
      sprite(
                'snake-spit', 'snake-spitting', [0, 1, 1, 2, 2, 1, 1, 0]
            );
      sprite(
                'snake-3', 'snake-slither', [0, 1]
            );
      sprite(
                'snake-3', 'snake-slither-die', [2]
            );
actions:
  - name: Press
    methods:
      - code: pointer.Any
  - name: MoveLeftRight
    methods:
      - code: keyboard.KeyA
        multiplier: -1
      - code: keyboard.ArrowLeft
        multiplier: -1
      - code: keyboard.ArrowRight
      - code: keyboard.KeyD
  - name: Up
    methods:
      - code: keyboard.KeyW
      - code: keyboard.ArrowUp
  - name: Down
    methods:
      - code: keyboard.KeyS
      - code: keyboard.ArrowDown
  - name: Fire
    methods:
      - code: keyboard.Space
  - name: Esc
    methods:
      - code: keyboard.Escape
  - name: VJoyX
    methods:
      - code: vkeys.Vjoy1X
  - name: VJoyY
    methods:
      - code: vkeys.Vjoy1Y
  - name: Space
    methods:
      - code: keyboard.Space
scripts:
  - name: utils
    code: "\ndebugger; // does nothing\n\nlet seed = Math.floor(Math.random()*1000);\n\nconst randomizer = random.createSeededRandomizer(seed);\n\nfunction getRandomChoice(p) {\n    return randomizer() > p;\n}\nfunction getRandomMember(set) {\n    let i = Math.floor(randomizer()*set.length);\n    // console.log(\"random\",i,set.length,set);\n    return set[i];\n}\n\n/**\n * for consuming Esc keypresses\n */\nlet lastEsc = 0;\n\n/** collect UI widgets from elsewhere \n * modal (room)\n*/\nUI = {};\n\nfunction check(a, ...msg) {\n    if (a) return;\n    console.error(...msg);\n}\n\nlet logged1 = [];\nfunction log1(...msgs) {\n    let msg = msgs.join(\", \");\n    if (contains(msg, logged1)) {\n        return;\n    }\n    logged1.push(msg);\n    console.log(msg);\n}\n\n\nasync function pause(msecs) {\n    let p = timer.add(msecs);\n    await p;\n}\n\n/**\n * @param {Room} room\n * @param {string} templateName\n */\nfunction getTemplates(room, templateName) {\n    return templates.list[templateName].filter(tmp => tmp.getRoom() === room);\n}\n\n/**\n * Like addText but idempotent. Sets pBlock.pText\n */\nfunction setText(pBlock, text, x, y, options) {\n    // if ( ! pBlock.dwid) pBlock.dwid = \"p\"+Math.floor(Math.random()*1000);\n    // console.log(\"setText\", text, pBlock);\n    check( ! text || typeof(text)===\"string\",text);\n    if (pBlock.pText) {\n        if (pBlock.pText.text === text) {\n            // console.log(\"no-op\", text);\n            return; // no-op\n        }\n        // console.log(\"destroy\", this.dwid, \"old\", this.pText.text, \"new text\", text, this.pText);\n        pBlock.pText.destroy();\n        pBlock.pText = null;\n    }\n    if (text) {\n        pBlock.pText = addText(pBlock, text, x, y, options);\n        check(pBlock.pText.text === text, text+\" vs \"+pBlock.pText.text);\n        // console.log(\"set-add\", this.dwid, \"old\", this.pText.text, \"new text\", text, this.pText);\n    }\n}\n\nfunction showMessage(text, options={}) {\n    console.log(\"showMessage\", text);\n    let pTextBlock = templates.copy(\"TextBlock\", 100, 500);\n    pTextBlock.x = rooms.current.width / 3;\n    pTextBlock.width = rooms.current.width / 4;\n    pTextBlock.height = 80;\n    setText(pTextBlock, text, 10, 10);\n    // remove\n    timer.addUi(2000)\n    .then(() => {\n        pTextBlock.kill = true;\n    });\n}\n\nfunction showTooltip(pBlock, text) {\n    if (this.pTooltip) {\n        if (this.pTooltip.text === text) {\n            return; // no-op\n        }\n        hideTooltip(pBlock);\n    }\n    this.pTooltip = addText(pBlock, text, 0, -20, {style:\"Style_Tooltip\"});\n}\nfunction hideTooltip(pBlock) {\n    if ( ! this.pTooltip) return;\n    try {        \n        this.pTooltip.destroy();\n        this.pTooltip = null;        \n    } catch(err) {  // swallow any error\n        console.warn(err);\n    }\n}\n\nconst ADDTEXT_DEFAULT_OPTIONS = {style:\"Style_BodyText\"};\n\n/**\n * @returns {PIXI.Text} pText\n */\nfunction addText(pBlock, text, x, y, options=ADDTEXT_DEFAULT_OPTIONS) {\n    check(typeof(text)===\"string\", text);\n    options = Object.assign({}, ADDTEXT_DEFAULT_OPTIONS, options); // merge options\n    let style = styles.get(options.style);\n    if (options.wordWrap) {\n        let www = options.wordWrapWidth;\n        if ( ! www) {\n            www = Math.min(pBlock.width, 450); // x offset??\n        }\n        style.wordWrap = true;        \n        style.wordWrapWidth = www;\n        console.log(\"wordWrapWidth\", www, \"options\",options, \"style\",style, \"pw\",pBlock.width);\n    }\n    let ptext = new PIXI.Text(text, style);\n    if (x) ptext.x = x;\n    if (y) ptext.y = y;\n    // reverse scale\n    let preScaleWidth = ptext.width;\n    let preScaleHeight = ptext.height;\n    // console.log(text,\"prescale width\",ptext.width, \"h\",ptext.height);\n    if (pBlock.scale?.x) {\n        ptext.scale.x = 1 / pBlock.scale.x;\n    }\n    if (pBlock.scale?.y) {\n        ptext.scale.y = 1 / pBlock.scale.y;\n    }\n    // console.log(\"BUG\",text,\"post-scale width\",ptext.width, \"scale-x\", ptext.scale.x, \"block-width\",pBlock.width);\n    if (options.center) {\n        let sx = (pBlock.width - preScaleWidth) / 2;\n        ptext.x = sx * ptext.scale.x;\n    }\n    if (options.verticalCenter) {\n        let th = preScaleHeight; //ptext.height;\n        let sy = (pBlock.height - th) / 2;\n        // console.log(\"vcenter\", \"b-h\", pBlock.height, \"t-h\", ptext.height, \"sy\", sy, \"scale.y\", ptext.scale.y);\n        ptext.y = sy * ptext.scale.y;\n    }\n    pBlock.addChild(ptext);\n\n    // const mask = new PIXI.Graphics()\n    // mask.beginFill(0xff0000)\n    // mask.drawCircle(ptext.x, ptext.y, 3);\n    // pBlock.addChild(mask);\n\n    check(ptext.text === text, ptext.text, text);\n    // console.log(\"addText\", text, \"x\", ptext.x, \"y\", ptext.y, style, options, ptext);\n    return ptext;\n}\n\nlet msecs = 2300;\n\n\n/**\n * @param {PIXI.Sprite} pSprite\n * @param {Chat|string} chat\n */\nfunction doTalk(pSprite, chat) {\n    if (typeof(chat)===\"string\") {\n        chat = new Chat(chat); // convert\n    }\n    if (pSprite.pTalkToMe) {\n        pSprite.pTalkToMe.kill = true;\n        pSprite.pTalkToMe = null;\n    }\n    // cat sound?\n    if (chat.sound && ! chat.soundPlayed) {\n        chat.soundPlayed = true;\n        sounds.play(chat.sound, {volume:0.5});\n    }\n\n    // chain async calls to step through the text\n    const control = {};\n    let p = null;\n    chat.lines.forEach(line => {\n        if (p) {\n            p = p.then(() => doTalk2(pSprite, line, control));\n            p.control = control;\n        } else {\n            p = doTalk2(pSprite, line, control);\n            p.control = control;\n        }\n    });\n    // talking promise\n    p = p.then(() => { \n        pSprite.talking = null; \n        console.log(\"null talking\",pSprite.pSpeechBubble);\n    });\n    check(p);\n    pSprite.talking = p;\n    // follow on action - like move room?\n    if (chat.then) {\n        p = p.then(chat.then);\n    }\n    return p;\n}\n\nasync function doTalk2(pSprite, chatLine, control) {\n    const text = chatLine.text;\n    check(text, chatLine);\n    if (control.stop) {\n        console.log(\"stop talking\", chatLine);\n        if (pSprite.pSpeechBubble) {\n            pSprite.pSpeechBubble.kill = true;\n        }\n        pSprite.pSpeechBubble = null;\n    }\n    if (pSprite.pSpeechBubble) {\n        // console.warn(\"speech bubble already?\", text, \"already:\"+pSprite.pSpeechBubble.ptext?.text);\n        return;\n    }    \n    let sx = pSprite.x-20;\n    let sy = pSprite.y - pSprite.height;\n    if (sy < 200) {\n        console.log(\"shift left\");\n        sy = 220;\n        sx -= 50;\n    }    \n    pSprite.pSpeechBubble = templates.copyIntoRoom(\"speech-bubble\", sx, sy, rooms.current);\n    let scale = Math.min(Math.max(1, text.length * 2.0 / 40), 2);\n    pSprite.pSpeechBubble.scale.x = scale;\n    pSprite.pSpeechBubble.scale.y = scale;\n    let wordWrapWidth = pSprite.pSpeechBubble.width - 60;\n\n    let ptext = addText(pSprite.pSpeechBubble, text, -130, -100, {wordWrap:true, wordWrapWidth}); //verticalCenter:true\n    pSprite.pSpeechBubble.ptext = ptext;\n    ptext.scale.x = 1/scale;\n    ptext.scale.y = 1/scale;\n    // console.log(\"pSprite.pSpeechBubble\", pSprite.pSpeechBubble, sx, sy);\n\n    var ttimer = timer.add(msecs,'talk');\n    let promise = ttimer.then(() => {\n        chatLine.done = true;\n        // console.log(\"done \"+text, chatLine);\n        if (pSprite.pSpeechBubble) {\n            pSprite.pSpeechBubble.kill = true;\n        }\n        pSprite.pSpeechBubble = null;\n    });\n    await promise;\n}\n\nfunction offerTalk(pSprite) {\n    if (pSprite.pTalkToMe || pSprite.pSpeechBubble) return;\n    if (this.chat && this.chat.lines.find(line => ! line.done)) {\n        if ( ! this.pTalkToMe) {\n            this.pTalkToMe = templates.copy(\"speech-bubble\", -5, -this.height -5);\n            this.addChild(this.pTalkToMe);\n            this.pTalkToMe.scale.x = 0.25;\n            this.pTalkToMe.scale.y = 0.25;            \n        }\n        this.pTalkToMe.visible = true;\n        this.pTalkToMe.alpha = 0.75;\n    }    \n}\n\nlet lastMove = new Date().getTime() - 2000;\nlet moving = false;\n\n/**\n  HACK: set playerx, playery for the room you are _leaving_\n * @param {!string} roomName * no-op if already in the room AND options arent modified\n * @param {?Object} options update state for roomName\n * @param {?Object} moveOptions {transition:none|??}\n */\nfunction moveRoom(roomName, options, moveOptions) {\n    console.log(\"moveRoom\",roomName, options,moveOptions); // for debug\n    if (moving) return; // no overlaps\n    // avoid flickering\n    if (new Date().getTime() - lastMove < 1000) {\n        console.log(\"moveRoom - skip - anti-flicker\");\n        return;\n    }\n    if (rooms.current.name === roomName) { // paranoia\n        rooms.current.alpha = 1.0; // ensure fully on\n        // change options?\n        let ro = roomOptions[roomName] || {};\n        let mod = options && Object.entries(options).find(([k,v]) => ro[k] !== v);\n        if ( ! mod) {\n            moving = false;\n            console.log(\"moveRoom no-op\", roomName);    \n            return;\n        }\n        console.log(\"moveRoom\",roomName, \"mod\",mod);\n    }\n    // anti-flicker\n    lastMove = new Date().getTime();\n    console.log(\"moveRoom\", roomName, options, moveOptions);\n    // stash player x/y on the leaving room\n    // NB: If we move from Room_PLatformer X to Room_PLatformer Y -- the later updateRoomState can set x or y\n    let player = getPlayer();\n    if (player) {\n        let leaveState = {playerx: player.x, playery: player.y};\n        updateRoomState(rooms.current.name, leaveState);\n    }\n    const moveRoom2 = () => {\n        moving = false;\n        // // close modal?\n        // if (UI.modal) {\n        //     rooms.remove(UI.modal);\n        //     UI.modal = null;\n        // }\n        // switch\n        rooms.switch(roomName);\n        // pass on options\n        if (options) {\n            updateRoomState(roomName, options);\n        }\n        // ensure fully on\n        setTimeout(() => {rooms.current.alpha = 1.0;}, 1);\n    };\n    if (moveOptions?.transition === \"none\") {\n        moveRoom2();\n        return;\n    }\n    moving = true;\n    transition.slideOut()\n        .then(moveRoom2);\n}\n\nfunction getPlayer() {\n    let chimp = getTemplates(rooms.current, \"chimp\")[0];\n    if (chimp) return chimp;\n};\n\nfunction doKillMonster(pSnake) {\n    if (pSnake.dying) return;\n    pSnake.depth = 100;\n    pSnake.dying = true;\n    pSnake.dx = 0;\n    if (pSnake.dieTex) pSnake.tex = pSnake.dieTex;\n    pSnake.play(); \n    let smaller = pSnake.scale.y * 0.8;\n    tween.add({\n        obj:pSnake.scale,\n        duration:300,\n        fields: {\n            y: smaller,\n            x: smaller\n        }\n    }).then(() => pSnake.kill = true);\n}\n\nfunction remove(array, item) {\n    check(Array.isArray(array), \"Not an array\"+array);\n    let i = array.indexOf(item);\n    if (i===-1) return array; \n    array.splice(i,1);\n    return array;\n}\n\nfunction getCompassCorner(pSprite) {\n    let ns = pSprite.y < 300? \"N\" : \"S\";\n    let ew = pSprite.x < 300? \"W\" : \"E\";\n    return ns+ew;\n}\n\n/**\n Object at xy or null\n */\nfunction getGridEntry(grid, xy) {\n    check(grid && xy);\n    const row = grid[xy[1]];\n    if ( ! row) return null;\n    return row[xy[0]];\n}\n\nfunction isMobile() {\n\tconst userAgent = navigator?.userAgent || navigator?.vendor || window.opera;\n\tlet _isMobile = userAgent.match('/mobile|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i');\n\treturn !!_isMobile;\n};\n\n/**\n * Fix bug (dec 2023) where scale is ignored\n */\nfunction getBounds(pSprite) {\n    if ( ! pSprite.shape) {\n        console.log(\"no shape\",pSprite);\n        return pSprite.getBounds();\n    }\n\tlet h = pSprite.height;\n\tlet w = pSprite.width;\n\tlet {left,right,top,bottom, type, r} = pSprite.shape;\n\t// scale\n\tif (pSprite.scale.y) {\n\t\ttop *= pSprite.scale.y;\n\t\tbottom *= pSprite.scale.y;\n\t\tr *= pSprite.scale.y;\n\t}\n\tif (pSprite.scale.x) {\n\t\tleft *= pSprite.scale.x;\n\t\tright *= pSprite.scale.x;\n\t}\n\tlet b1;\n\tif (type===\"circle\") {\n\t\tb1 = {\n\t\t\tx: pSprite.x - r, \n\t\t\ty: pSprite.y - r,\n\t\t\twidth: 2*r, \n\t\t\theight: 2*r\n\t\t};\n\t} else {\n\t\tb1 = {\n\t\t\tx: pSprite.x - left, \n\t\t\ty: pSprite.y - top,\n\t\t\twidth: right - left, //;left - right, \n\t\t\theight: top - bottom\n\t\t};\n\t}\n\tcheck(b1.height >= -0.1, b1); // allow maths precision\n\tcheck(b1.width >= -0.1, b1);\n    // console.log(\"boundsshape\",pSprite);\n    return b1;\n}\n\n\nlet pg1, pg2;\n/**\n * @returns {boolean} box collision test\n */\nfunction testBoxCollision(bounds1, bounds2)\n{\n    console.log(\"testBoxCollision\",bounds1, bounds2);\n    let hit = bounds1.x < bounds2.x + bounds2.width\n        && bounds1.x + bounds1.width > bounds2.x\n        && bounds1.y < bounds2.y + bounds2.height\n        && bounds1.y + bounds1.height > bounds2.y;\n        // debug\n    // if ( ! this.pg1) {\n    //     let pg1 = new PIXI.Graphics();\n    //     this.pg1 = pg1;\n    //     rooms.current.addChild(this.pg1);            \n    //     let pg2 = new PIXI.Graphics();\n    //     this.pg2 = pg2;\n    //     rooms.current.addChild(this.pg2);            \n    // }\n    // this.pg1.clear();\n    // this.pg1.beginFill(hit? 0xFFCCCC : 0xCCFFCC, 0.5);\n    // this.pg1.drawRect(bounds1.x,bounds1.y,bounds1.width,bounds1.height);\n    // this.pg1.beginFill(0xCCFFCC,1);\n    // this.pg1.drawCircle(bounds1.x, bounds1.y, 3);\n\n    // this.pg2.clear();\n    // this.pg2.beginFill(hit? 0xFFFFCC : 0xCCCCFF, 0.5);\n    // this.pg2.drawRect(bounds2.x,bounds2.y,bounds2.width,bounds2.height);\n    // this.pg2.beginFill(0xCCCCFF,1);\n    // this.pg2.drawCircle(bounds2.x, bounds2.y, 3);\n\n    return hit;\n}\n\n// override to put in on/off control\nconst _spawn = sounds.play;\nsounds.play = function soundSpawn(name, options, callback) {\n    if (callback) {\n        options.complete = callback; // upgrade to ctjs v4\n        console.warn(\"old sounds code use complete\");\n    }\n    if (getOption(\"sound\")) {\n        try {\n            _spawn(name, options);\n        } catch (err) {\n            console.error(err); // swallow\n        }\n    } else if (options?.complete) {\n        // better do the callback anyway, after a short pause\n        timer.add(400).then(options.complete);\n    }\n}\nlet MUSIC_VOLUME = 0.5;\nfunction musicSpawn(name, options={}) {\n    musicOff();\n    if (getOption(\"music\")) {\n        if ( ! options.volume) options.volume = MUSIC_VOLUME;\n        let musicAudio = sounds.play(name, options);\n        console.log(\"musicAudio\",musicAudio);\n    }\n}\nfunction musicOff() {\n    try {\n        sounds.stop();\n        // Object.values(res.sounds).forEach(snd => snd.stop());\n    } catch(paranoia) {\n        console.error(paranoia);\n    }\n}\n\n\nasync function pulse(pSprite, tint=0x9999ff, pChimp) {\n    if (pSprite._pulse) return;    \n    // pSprite._pulse = new Date().getTime(); // tween??\n    try {\n        pSprite.tint = tint;\n        await pause(200);\n        while(pChimp && place.collide(pChimp, pSprite)) {\n            await pause(100);\n        }\n        pSprite.tint = 0xffffff;\n        pSprite._pulse = null;\n    } catch(ohwell) {\n        // console.log(\"(skip) pulse error\",ohwell); // harmless\n    }\n};\n\n// HACK fix bug Jan 2024\nconst _onDestroy = templates.onDestroy;\nfunction od2(args) {    \n    // console.warn(\"onDestroy this\", this, args);\n    try {\n        _onDestroy.apply(this, args);\n    } catch(wtf) {\n        console.error(\"onDestroy\", wtf, this);\n    }\n};\ntemplates.onDestroy = od2;\n\n\n// // HACK fix merge / tilemap cache bug Feb 2024 https://github.com/ct-js/ct-js/issues/501\n// const _tmc = Tilemap.cache;\n// Tilemap.cache = function tmc2(args) {    \n//     try {\n//         _tmc.apply(this, args);\n//     } catch(wtf) {\n//         console.error(\"Tilemap cache (swallow)\", wtf, this);\n//     }\n// };\n// const _tm_p = Tilemap.__proto__;  Class constructor wd cannot be invoked without 'new'\n// Tilemap.__proto__ = function tm_p2(args) {\n//     let tm = _tm_p.apply(this, args);\n//     tm.cache = Tilemap.cache;\n//     return tm;\n// }\n"
  - name: element-info
    code: |-

      const periodicTable = [
          ["H", "", "", "", "", "","","","","","","","","","","","","","He"],
          ["Li","Be","","","","","","","","","","","","B","C","N","O","F","Ne"],
          ["Na","Mg","","","","","","","","","","","","Al","Si","P","S","Sl","Ar"],
          "K Ca - Sc Ti V Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr".split(" "),
          "Rb Sr - Y Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te I Xe".split(" "),
          "Cs Ba Lanthanides Lu Hf Ta W Re Os Ir Pt Au Hg Tl Pb Bi Po At Rn".split(" "),
          "Fr RA Actinides Lr Rf Db Sg Bh Hs Mt Ds Rg Cn Nh Fl Mc Lv Ts Og".split(" "),
          ];
      let Lanthanides = "La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb".split(" ");
      let Actinides = "Ac Th Pa U Np Pu Am Cm Bk Cf Es Fm Md No".split(" ");

      function getNextElementSymbol(symbolName, dx, dy) {
          let xy = getSymbolXY(symbolName);
          let xy2 = [xy[0] + dx, xy[1] + dy];
          let row = periodicTable[xy2[1]];
          if ( ! row) return null;
          let cell = row[xy2[0]];
          if ( ! cell) return null;
          return cell;
      }
      /**
       * @returns [column, row]
       */
      function getSymbolXY(symbolName) {
          if ( ! symbolName) return null;
          for(let r=0; r<periodicTable.length; r++) {
              for(let c=0; c<periodicTable[r].length; c++) {
                  if (periodicTable[r][c] === symbolName) {
                      return [c,r];
                  }
              }
          }
          console.warn("no symbol", symbolName);
      }
      const info4symbol = {
          "H": {
              "name": "Hydrogen",
              "symbol": "H",
              "standard_conditions_state": "gas",
              "appearance": "colorless gas",
              "atomic_number": 1,
              "atomic_weight": 1.008,
              "block": "s-block",
              "group": "group 1: hydrogen and alkali metals",
              "electron_configuration": "1s^1",
              "interesting_fact": "Hydrogen is the main fuel used by the Sun and other stars. They don't burn hydrogen - they use nuclear fusion turning it into helium and releasing great energy.",
              "historical_story": "Being the lightest element, Hydrogen was used for airships, until the Hindenberg trans-atlantic airship exploded."
          },
          "He": {
              "name": "Helium",
              "symbol": "He",
              "standard_conditions_state": "gas",
              "appearance": "colorless gas",
              "atomic_number": 2,
              "atomic_weight": 4.0026,
              "block": "s-block",
              "group": "group 18: noble gases",
              "electron_configuration": "1s^2",
              "interesting_fact": "Helium is the second lightest and second most abundant element in the observable universe.",
              "historical_story": "Helium was first discovered in the solar spectrum by Jules Janssen during a solar eclipse in 1868."
          },
          "Li": {
              "name": "Lithium",
              "symbol": "Li",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white metal",
              "atomic_number": 3,
              "atomic_weight": 6.94,
              "block": "s-block",
              "group": "group 1: hydrogen and alkali metals",
              "electron_configuration": "1s^2 2s^1",
              "interesting_fact": "Lithium is the lightest metal and the least dense solid element under standard conditions.",
              "historical_story": "Lithium was discovered by Johan August Arfwedson in 1817 during an analysis of petalite ore."
          },
          "Be": {
              "name": "Beryllium",
              "symbol": "Be",
              "standard_conditions_state": "solid",
              "appearance": "steel gray, strong, lightweight metal",
              "atomic_number": 4,
              "atomic_weight": 9.0122,
              "block": "s-block",
              "group": "group 2: alkaline earth metals",
              "electron_configuration": "1s^2 2s^2",
              "interesting_fact": "Beryllium is transparent to X-rays and is therefore used in windows for X-ray tubes.",
              "historical_story": "Beryllium was discovered as an oxide in beryl and emeralds by Louis-Nicolas Vauquelin in 1798. Metallic beryllium was isolated in 1828 by Friedrich Wöhler and independently by Antoine Bussy."
          },
          "B": {
              "name": "Boron",
              "symbol": "B",
              "standard_conditions_state": "solid",
              "appearance": "black-brown solid",
              "atomic_number": 5,
              "atomic_weight": 10.81,
              "block": "p-block",
              "group": "group 13",
              "electron_configuration": "1s^2 2s^2 2p^1",
              "interesting_fact": "Boron is used in borax, boric acid, and other compounds for a variety of uses including glass and ceramics manufacturing, and as a mild antiseptic.",
              "historical_story": "Boron was first identified by Joseph Louis Gay-Lussac and Louis Jacques Thénard in 1808, and it was first isolated in a pure form by Sir Humphry Davy, also in 1808."
          },
          "C": {
              "name": "Carbon",
              "symbol": "C",
              "standard_conditions_state": "solid",
              "appearance": "varies (e.g., graphite is black, diamond is transparent)",
              "atomic_number": 6,
              "atomic_weight": 12.011,
              "block": "p-block",
              "group": "group 14",
              "electron_configuration": "1s^2 2s^2 2p^2",
              "interesting_fact": "Carbon is the basis of life on Earth, and forms more compounds than any other element.",
              "historical_story": "Known since ancient times, the earliest known production of carbon was in China around 3750 BCE for ink."
          },
          "N": {
              "name": "Nitrogen",
              "symbol": "N",
              "standard_conditions_state": "gas",
              "appearance": "colorless gas",
              "atomic_number": 7,
              "atomic_weight": 14.007,
              "block": "p-block",
              "group": "group 15",
              "electron_configuration": "1s^2 2s^2 2p^3",
              "interesting_fact": "Nitrogen makes up about 78% of the Earth's atmosphere and is a constituent of all living tissues.",
              "historical_story": "Nitrogen was discovered by Scottish physician Daniel Rutherford in 1772."
          },
          "O": {
              "name": "Oxygen",
              "symbol": "O",
              "standard_conditions_state": "gas",
              "appearance": "colorless gas",
              "atomic_number": 8,
              "atomic_weight": 15.999,
              "block": "p-block",
              "group": "group 16",
              "electron_configuration": "1s^2 2s^2 2p^4",
              "interesting_fact": "Oxygen is essential for respiration in most living organisms and is used in various industrial chemical reactions.",
              "historical_story": "Oxygen was discovered independently by Carl Wilhelm Scheele in 1773 and Joseph Priestley in 1774, but Priestley is often given priority."
          },
          "F": {
              "name": "Fluorine",
              "symbol": "F",
              "standard_conditions_state": "gas",
              "appearance": "pale yellow gas",
              "atomic_number": 9,
              "atomic_weight": 18.998,
              "block": "p-block",
              "group": "group 17: halogens",
              "electron_configuration": "1s^2 2s^2 2p^5",
              "interesting_fact": "Fluorine is the most reactive of all elements, desperate to fill the missing 10th electron in it's electron shell, and capable of forming compounds with almost all other elements.",
              "historical_story": "Fluorine is difficult and dangerous to handle, and several early chemists were injured or killed studying it."
          },
          "Ne": {
              "name": "Neon",
              "symbol": "Ne",
              "standard_conditions_state": "gas",
              "appearance": "colorless, inert, noble gas",
              "atomic_number": 10,
              "atomic_weight": 20.180,
              "block": "p-block",
              "group": "group 18: noble gases",
              "electron_configuration": "1s^2 2s^2 2p^6",
              "interesting_fact": 'Only red neon signs use neon gas. Other colors of "neon" sign were discovered later and use different gases.',
              "historical_story": "Neon was discovered in 1898 by Sir William Ramsay and Morris Travers in London during their experiments with liquid air."
          },
          "Na": {
              "name": "Sodium",
              "symbol": "Na",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white metallic",
              "atomic_number": 11,
              "atomic_weight": 22.990,
              "block": "s-block",
              "group": "group 1: alkali metals",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^1",
              "interesting_fact": "Sodium is a highly reactive metal, commonly found in the Earth's crust in compounds such as table salt (sodium chloride).",
              "historical_story": "Sodium was first isolated by Sir Humphry Davy in 1807 through the electrolysis of caustic soda (sodium hydroxide)."
          },
          "Mg": {
              "name": "Magnesium",
              "symbol": "Mg",
              "standard_conditions_state": "solid",
              "appearance": "shiny gray solid",
              "atomic_number": 12,
              "atomic_weight": 24.305,
              "block": "s-block",
              "group": "group 2: alkaline earth metals",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2",
              "interesting_fact": "Magnesium is the eighth most abundant element in the Earth's crust and is essential for all cells and over 300 enzymatic processes.",
              "historical_story": "Magnesium was first recognized as an element by Joseph Black in 1755, and first isolated by Sir Humphry Davy in 1808."
          },
          "Al": {
              "name": "Aluminum",
              "symbol": "Al",
              "standard_conditions_state": "solid",
              "appearance": "silvery-gray metallic",
              "atomic_number": 13,
              "atomic_weight": 26.982,
              "block": "p-block",
              "group": "group 13",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^1",
              "interesting_fact": "Aluminum is the most abundant metal in the Earth's crust and is used extensively in aerospace, transportation, and packaging.",
              "historical_story": "Aluminum was first isolated by Hans Christian Ørsted in 1825, though it was only in the late 19th century that an efficient method for its extraction was developed by Charles Martin Hall and Paul Héroult."
          },
          "Si": {
              "name": "Silicon",
              "symbol": "Si",
              "standard_conditions_state": "solid",
              "appearance": "crystalline, reflective with bluish-tinged faces",
              "atomic_number": 14,
              "atomic_weight": 28.085,
              "block": "p-block",
              "group": "group 14",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^2",
              "interesting_fact": "Silicon is the second most abundant element in the Earth's crust, and is the primary component of most semiconductor devices.",
              "historical_story": "Silicon was first identified by Antoine Lavoisier in 1787 and was later given its current name by Thomas Thomson in 1831."
          },
          "P": {
              "name": "Phosphorus",
              "symbol": "P",
              "standard_conditions_state": "solid",
              "appearance": "colorless, waxy white, yellow, scarlet, red, violet, black",
              "atomic_number": 15,
              "atomic_weight": 30.974,
              "block": "p-block",
              "group": "group 15",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^3",
              "interesting_fact": "Phosphorus is essential for life, as it is a key component of DNA, RNA, and ATP, the molecule used by cells for energy transfer.",
              "historical_story": "Phosphorus was first isolated in 1669 by German alchemist Hennig Brand when he evaporated urine and heated the residue until it was red hot."
          },
          "S": {
              "name": "Sulfur",
              "symbol": "S",
              "standard_conditions_state": "solid",
              "appearance": "bright yellow crystalline solid",
              "atomic_number": 16,
              "atomic_weight": 32.06,
              "block": "p-block",
              "group": "group 16",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^4",
              "interesting_fact": "Sulfur is used in the vulcanization of rubber, in black gunpowder, and as a fungicide and insecticide in agriculture.",
              "historical_story": "Known since ancient times, sulfur's true nature as an element was recognized in 1777 by Antoine Lavoisier."
          },
          "Cl": {
              "name": "Chlorine",
              "symbol": "Cl",
              "standard_conditions_state": "gas",
              "appearance": "pale yellow-green gas",
              "atomic_number": 17,
              "atomic_weight": 35.45,
              "block": "p-block",
              "group": "group 17",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^5",
              "interesting_fact": "Chlorine is used extensively for purifying water, especially in swimming pools and drinking water, to kill harmful bacteria.",
              "historical_story": "Chlorine was first isolated in 1774 by Carl Wilhelm Scheele, who mistakenly thought it contained oxygen."
          },
          "Ar": {
              "name": "Argon",
              "symbol": "Ar",
              "standard_conditions_state": "gas",
              "appearance": "colorless, odorless, tasteless, inert gas",
              "atomic_number": 18,
              "atomic_weight": 39.948,
              "block": "p-block",
              "group": "group 18",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6",
              "interesting_fact": "Argon makes up about 0.93% of the Earth's atmosphere and is used in fluorescent light bulbs and in welding.",
              "historical_story": "Argon was first discovered in 1894 by Lord Rayleigh and Sir William Ramsay by comparing a sample of clean air to chemically purified nitrogen."
          },
          "K": {
              "name": "Potassium",
              "symbol": "K",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white metal",
              "atomic_number": 19,
              "atomic_weight": 39.098,
              "block": "s-block",
              "group": "group 1",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 4s^1",
              "interesting_fact": "Potassium is vital for living organisms, playing a key role in heart, muscle, and nerve function.",
              "historical_story": "Potassium was first isolated in 1807 by Sir Humphry Davy using electrolysis of caustic potash (potassium hydroxide)."
          },
          "Ca": {
              "name": "Calcium",
              "symbol": "Ca",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white metal",
              "atomic_number": 20,
              "atomic_weight": 40.078,
              "block": "s-block",
              "group": "group 2: alkaline earth metals",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 4s^2",
              "interesting_fact": "Calcium is essential for living organisms, particularly in cell physiology and bone formation.",
              "historical_story": "Calcium was first isolated in 1808 by Sir Humphry Davy by electrolyzing a mixture of lime and mercuric oxide."
          },
          "Sc": {
              "name": "Scandium",
              "symbol": "Sc",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white metallic",
              "atomic_number": 21,
              "atomic_weight": 44.956,
              "block": "d-block",
              "group": "group 3",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^1 4s^2",
              "interesting_fact": "Scandium is used in aerospace components and sports equipment like bicycle frames and baseball bats.",
              "historical_story": "Scandium was discovered in 1879 by Lars Fredrik Nilson, who named it after Scandinavia."
          },
          "Ti": {
              "name": "Titanium",
              "symbol": "Ti",
              "standard_conditions_state": "solid",
              "appearance": "silvery grey-white metallic",
              "atomic_number": 22,
              "atomic_weight": 47.867,
              "block": "d-block",
              "group": "group 4",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^2 4s^2",
              "interesting_fact": "Titanium has the highest strength-to-density ratio of any metallic element, and it's as strong as steel but much less dense.",
              "historical_story": "Titanium was discovered in 1791 by William Gregor and was named by Martin Heinrich Klaproth after the Titans of Greek mythology."
          },
          "V": {
              "name": "Vanadium",
              "symbol": "V",
              "standard_conditions_state": "solid",
              "appearance": "blue-silver-grey metal",
              "atomic_number": 23,
              "atomic_weight": 50.942,
              "block": "d-block",
              "group": "group 5",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^3 4s^2",
              "interesting_fact": "Vanadium is used to make very strong and stable alloys for tools, construction elements, and jet engines.",
              "historical_story": "Vanadium was first discovered by Andrés Manuel del Río, a Spanish-born Mexican mineralogist, in 1801. It was rediscovered in 1830 by Nils Gabriel Sefström, who named it after the Norse goddess Vanadis."
          },
          "Cr": {
              "name": "Chromium",
              "symbol": "Cr",
              "standard_conditions_state": "solid",
              "appearance": "silvery, lustrous, hard, and brittle metal",
              "atomic_number": 24,
              "atomic_weight": 51.996,
              "block": "d-block",
              "group": "group 6",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^5 4s^1",
              "interesting_fact": "Chromium is widely used in stainless steel to prevent corrosion and in chrome plating for its shiny appearance and corrosion resistance.",
              "historical_story": "Chromium was discovered in 1797 by French chemist Louis Nicolas Vauquelin, who was able to isolate the metal by heating the mineral crocoite (lead chromate)."
          },
          "Mn": {
              "name": "Manganese",
              "symbol": "Mn",
              "standard_conditions_state": "solid",
              "appearance": "silvery-grayish metal",
              "atomic_number": 25,
              "atomic_weight": 54.938,
              "block": "d-block",
              "group": "group 7",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^5 4s^2",
              "interesting_fact": "Manganese is essential for human health, as it's a cofactor in many enzyme reactions, particularly in the processing of cholesterol, carbohydrates, and protein.",
              "historical_story": "Manganese was recognized as an element by several scientists in the 1770s, but credit often goes to Johan Gottlieb Gahn who isolated it in 1774."
          },
          "Fe": {
              "name": "Iron",
              "symbol": "Fe",
              "standard_conditions_state": "solid",
              "appearance": "lustrous, metallic, with a grayish tinge",
              "atomic_number": 26,
              "atomic_weight": 55.845,
              "block": "d-block",
              "group": "group 8",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^6 4s^2",
              "interesting_fact": "Iron is the most commonly used metal on Earth, forming much of Earth's outer and inner core, and it's vital for blood oxygen transport in animals.",
              "historical_story": "Iron use dates back to ancient times, and it played a key role in the societal transition to the Iron Age. The first iron used by humans is likely to have been sourced from meteorites."
          },
          "Co": {
              "name": "Cobalt",
              "symbol": "Co",
              "standard_conditions_state": "solid",
              "appearance": "hard, lustrous, silver-gray metal",
              "atomic_number": 27,
              "atomic_weight": 58.933,
              "block": "d-block",
              "group": "group 9",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^7 4s^2",
              "interesting_fact": "Cobalt is used in superalloys for aircraft engines, magnets, and in the medical field for implants and prosthetics due to its wear resistance and biocompatibility.",
              "historical_story": "Cobalt was first isolated by Swedish chemist Georg Brandt in 1735, though its compounds had been used for centuries to create deep blue glass and ceramics."
          },
          "Ni": {
              "name": "Nickel",
              "symbol": "Ni",
              "standard_conditions_state": "solid",
              "appearance": "lustrous, metallic, and silver with a gold tinge",
              "atomic_number": 28,
              "atomic_weight": 58.693,
              "block": "d-block",
              "group": "group 10",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^8 4s^2",
              "interesting_fact": "Nickel is used in stainless steel, coins, rechargeable batteries, and as a catalyst for hydrogenation.",
              "historical_story": "Nickel was first isolated and classified as a chemical element by Axel Fredrik Cronstedt in 1751."
          },
          "Cu": {
              "name": "Copper",
              "symbol": "Cu",
              "standard_conditions_state": "solid",
              "appearance": "red-orange metallic luster",
              "atomic_number": 29,
              "atomic_weight": 63.546,
              "block": "d-block",
              "group": "group 11",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^1",
              "interesting_fact": "Copper is one of the few metals that can occur in nature in a directly usable metallic form (native metals).",
              "historical_story": "Copper has been used since ancient times, with evidence of copper smelting dating back to around 5000 BC."
          },
          "Zn": {
              "name": "Zinc",
              "symbol": "Zn",
              "standard_conditions_state": "solid",
              "appearance": "blue-silver, malleable metal",
              "atomic_number": 30,
              "atomic_weight": 65.38,
              "block": "d-block",
              "group": "group 12",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2",
              "interesting_fact": "Zinc is the 24th most abundant element in Earth's crust and is used for galvanizing to protect iron and steel from corrosion.",
              "historical_story": "Zinc has been used since the time of the ancient Greeks and Romans, but it was first recognized as a unique element by Andreas Sigismund Marggraf in 1746."
          },
          "Ga": {
              "name": "Gallium",
              "symbol": "Ga",
              "standard_conditions_state": "solid",
              "appearance": "silver-white solid/liquid",
              "atomic_number": 31,
              "atomic_weight": 69.723,
              "block": "p-block",
              "group": "group 13",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^1",
              "interesting_fact": "Gallium can melt in your hand, as it has a melting point of just above room temperature (29.76°C, 85.57°F).",
              "historical_story": "Gallium was discovered using spectroscopy by French chemist Paul Émile Lecoq de Boisbaudran in 1875."
          },
          "Ge": {
              "name": "Germanium",
              "symbol": "Ge",
              "standard_conditions_state": "solid",
              "appearance": "grayish-white, lustrous, hard and brittle",
              "atomic_number": 32,
              "atomic_weight": 72.630,
              "block": "p-block",
              "group": "group 14",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^2",
              "interesting_fact": "Germanium is a semiconductor, commonly used in fiber optics, infrared optics, and in solar cell applications.",
              "historical_story": "Germanium was predicted by Dmitri Mendeleev in 1871 and discovered by Clemens Winkler in 1886."
          },
          "As": {
              "name": "Arsenic",
              "symbol": "As",
              "standard_conditions_state": "solid",
              "appearance": "metallic grey",
              "atomic_number": 33,
              "atomic_weight": 74.922,
              "block": "p-block",
              "group": "group 15",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^3",
              "interesting_fact": "Arsenic has a notorious history as a poison, but it also has various applications, including in semiconductors and lead arsenate in pesticides.",
              "historical_story": "Known since ancient times, arsenic's discovery as an element is attributed to Albertus Magnus, a German philosopher and alchemist, around 1250."
          },
          "Se": {
              "name": "Selenium",
              "symbol": "Se",
              "standard_conditions_state": "solid",
              "appearance": "black, red, and gray allotropes",
              "atomic_number": 34,
              "atomic_weight": 78.971,
              "block": "p-block",
              "group": "group 16",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^4",
              "interesting_fact": "Selenium is used in photocells and solar cells, as well as in glassmaking to decolorize glass and to counteract the color due to iron impurities.",
              "historical_story": "Selenium was discovered in 1817 by Jöns Jacob Berzelius and Johann Gottlieb Gahn who noted the similarity of the new element to the previously known tellurium (named for the Earth)."
          },
          "Br": {
              "name": "Bromine",
              "symbol": "Br",
              "standard_conditions_state": "liquid",
              "appearance": "red-brown liquid",
              "atomic_number": 35,
              "atomic_weight": 79.904,
              "block": "p-block",
              "group": "group 17",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^5",
              "interesting_fact": "Bromine is the only nonmetallic element that is liquid at room temperature.",
              "historical_story": "Bromine was discovered independently by two chemists, Carl Jacob Löwig and Antoine Jerome Balard, in 1825 and 1826, respectively."
          },
          "Kr": {
              "name": "Krypton",
              "symbol": "Kr",
              "standard_conditions_state": "gas",
              "appearance": "colorless, odorless, tasteless noble gas",
              "atomic_number": 36,
              "atomic_weight": 83.798,
              "block": "p-block",
              "group": "group 18",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^6",
              "interesting_fact": "Krypton is used in certain photographic flashes for high-speed photography and in fluorescent lamps.",
              "historical_story": "Krypton was discovered in 1898 by Sir William Ramsay and Morris Travers in residue left from evaporating nearly all components of liquid air."
          },
          "Rb": {
              "name": "Rubidium",
              "symbol": "Rb",
              "standard_conditions_state": "solid",
              "appearance": "soft, silvery-white metallic",
              "atomic_number": 37,
              "atomic_weight": 85.468,
              "block": "s-block",
              "group": "group 1",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^6 5s^1",
              "interesting_fact": "Rubidium is highly reactive and ignites spontaneously in air, and reacts violently with water.",
              "historical_story": "Rubidium was discovered in 1861 by Robert Bunsen and Gustav Kirchhoff, who detected it spectroscopically in the mineral lepidolite."
          },
          "Sr": {
              "name": "Strontium",
              "symbol": "Sr",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white, soft metal",
              "atomic_number": 38,
              "atomic_weight": 87.62,
              "block": "s-block",
              "group": "group 2",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^6 5s^2",
              "interesting_fact": "Strontium is used in fireworks for its bright red color and is a key component in producing glass for color television cathode ray tubes.",
              "historical_story": "Strontium was discovered in 1790 by Adair Crawford and William Cruickshank and was named after Strontian, a village in Scotland."
          },
          "Y": {
              "name": "Yttrium",
              "symbol": "Y",
              "standard_conditions_state": "solid",
              "appearance": "silvery metallic",
              "atomic_number": 39,
              "atomic_weight": 88.906,
              "block": "d-block",
              "group": "group 3",
              "electron_configuration": "1s^2 2s^2 2p^6 3s^2 3p^6 3d^10 4s^2 4p^6 5s^2 4d^1",
              "interesting_fact": "Yttrium is used in the production of phosphors, which are important for making the red color in television tubes and LED screens.",
              "historical_story": "Yttrium was discovered in 1794 by Johan Gadolin, who detected it in the mineral ytterbite (later renamed gadolinite) from Ytterby, Sweden."
          },
          "Zr": {
              "name": "Zirconium",
              "symbol": "Zr",
              "standard_conditions_state": "solid",
              "appearance": "silvery white",
              "atomic_number": 40,
              "atomic_weight": 91.224,
              "block": "d-block",
              "group": "group 4",
              "electron_configuration": "[Kr] 4d^2 5s^2",
              "interesting_fact": "Zirconium is widely used in nuclear reactors due to its low neutron-capture cross-section.",
              "historical_story": "Zirconium was discovered in 1789 by Martin Heinrich Klaproth, who found it in a sample of zircon."
          },
          "Nb": {
              "name": "Niobium",
              "symbol": "Nb",
              "standard_conditions_state": "solid",
              "appearance": "gray metallic",
              "atomic_number": 41,
              "atomic_weight": 92.90637,
              "block": "d-block",
              "group": "group 5",
              "electron_configuration": "[Kr] 4d^4 5s^1",
              "interesting_fact": "Niobium is used in superconducting magnets and alloys, such as those used in medical imaging.",
              "historical_story": "Niobium was discovered in 1801 by Charles Hatchett in a mineral called columbite."
          },
          "Mo": {
              "name": "Molybdenum",
              "symbol": "Mo",
              "standard_conditions_state": "solid",
              "appearance": "gray metallic",
              "atomic_number": 42,
              "atomic_weight": 95.95,
              "block": "d-block",
              "group": "group 6",
              "electron_configuration": "[Kr] 4d^5 5s^1",
              "interesting_fact": "Molybdenum is essential for life, being found in several enzymes in organisms.",
              "historical_story": "Molybdenum was discovered in 1778 by Carl Wilhelm Scheele, who thought it was a new element, but it was later isolated by Peter Jacob Hjelm in 1781."
          },
          "Tc": {
              "name": "Technetium",
              "symbol": "Tc",
              "standard_conditions_state": "solid",
              "appearance": "silvery gray metallic",
              "atomic_number": 43,
              "atomic_weight": [98],
              "block": "d-block",
              "group": "group 7",
              "electron_configuration": "[Kr] 4d^5 5s^2",
              "interesting_fact": "Technetium was the first element to be artificially produced, and all its isotopes are radioactive.",
              "historical_story": "Technetium was artificially created in 1937 by Carlo Perrier and Emilio Segrè by bombarding molybdenum atoms with deuterons."
          },
          "Ru": {
              "name": "Ruthenium",
              "symbol": "Ru",
              "standard_conditions_state": "solid",
              "appearance": "silvery white metallic",
              "atomic_number": 44,
              "atomic_weight": 101.07,
              "block": "d-block",
              "group": "group 8",
              "electron_configuration": "[Kr] 4d^7 5s^1",
              "interesting_fact": "Ruthenium is often used in wear-resistant electrical contacts and thick-film resistors.",
              "historical_story": "Ruthenium was discovered in 1844 by Karl Ernst Claus at Kazan State University, Russia, while examining platinum ore."
          },
          "Rh": {
              "name": "Rhodium",
              "symbol": "Rh",
              "standard_conditions_state": "solid",
              "appearance": "silvery white metallic",
              "atomic_number": 45,
              "atomic_weight": 102.90550,
              "block": "d-block",
              "group": "group 9",
              "electron_configuration": "[Kr] 4d^8 5s^1",
              "interesting_fact": "Rhodium is one of the rarest and most valuable precious metals.",
              "historical_story": "Rhodium was discovered in 1803 by William Hyde Wollaston in England, shortly after his discovery of palladium."
          },
          "Pd": {
              "name": "Palladium",
              "symbol": "Pd",
              "standard_conditions_state": "solid",
              "appearance": "silvery white metallic",
              "atomic_number": 46,
              "atomic_weight": 106.42,
              "block": "d-block",
              "group": "group 10",
              "electron_configuration": "[Kr] 4d^10",
              "interesting_fact": "Palladium is a key component in fuel cells, which react hydrogen with oxygen to produce electricity, water, and heat.",
              "historical_story": "Palladium was discovered in 1803 by William Hyde Wollaston, who named it after the asteroid Pallas."
          },
          "Ag": {
              "name": "Silver",
              "symbol": "Ag",
              "standard_conditions_state": "solid",
              "appearance": "lustrous white metal",
              "atomic_number": 47,
              "atomic_weight": 107.8682,
              "block": "d-block",
              "group": "group 11",
              "electron_configuration": "[Kr] 4d^10 5s^1",
              "interesting_fact": "Silver has the highest electrical conductivity of any element and the highest thermal conductivity of any metal.",
              "historical_story": "Silver has been known since ancient times, being one of the seven metals of antiquity, and its discovery date is unknown."
          },
          "Cd": {
              "name": "Cadmium",
              "symbol": "Cd",
              "standard_conditions_state": "solid",
              "appearance": "silvery bluish-gray metallic",
              "atomic_number": 48,
              "atomic_weight": 112.414,
              "block": "d-block",
              "group": "group 12",
              "electron_configuration": "[Kr] 4d^10 5s^2",
              "interesting_fact": "Cadmium is used in nickel-cadmium rechargeable batteries and for corrosion resistant plating on steel.",
              "historical_story": "Cadmium was discovered in Germany in 1817 by Friedrich Stromeyer and Karl Samuel Leberecht Hermann, as an impurity in zinc carbonate."
          },
          "In": {
              "name": "Indium",
              "symbol": "In",
              "standard_conditions_state": "solid",
              "appearance": "silvery lustrous gray",
              "atomic_number": 49,
              "atomic_weight": 114.818,
              "block": "p-block",
              "group": "group 13",
              "electron_configuration": "[Kr] 4d^10 5s^2 5p^1",
              "interesting_fact": "Indium is used in the making of touchscreens and flat panel displays, particularly in liquid crystal displays (LCDs).",
              "historical_story": "Indium was discovered in 1863 by Ferdinand Reich and Hieronymous Theodor Richter while they were testing zinc ores for thallium."
          },
          "Sn": {
              "name": "Tin",
              "symbol": "Sn",
              "standard_conditions_state": "solid",
              "appearance": "silvery-white, often with a bluish tinge",
              "atomic_number": 50,
              "atomic_weight": 118.710,
              "block": "p-block",
              "group": "group 14",
              "electron_configuration": "[Kr] 4d^10 5s^2 5p^2",
              "interesting_fact": "Tin has been used since ancient times and was a major component in the alloy bronze, used to advance human technology in the Bronze Age.",
              "historical_story": "Tin has been known since ancient times and was used as early as 3000 BC in the Middle East and the Balkans."
          },
          "Sb": {
              "name": "Antimony",
              "symbol": "Sb",
              "standard_conditions_state": "solid",
              "appearance": "silvery, lustrous gray",
              "atomic_number": 51,
              "atomic_weight": 121.760,
              "block": "p-block",
              "group": "group 15",
              "electron_configuration": "[Kr] 4d^10 5s^2 5p^3",
              "interesting_fact": "Antimony compounds have been used for centuries for cosmetics; the ancient Egyptians used antimony sulfide as mascara.",
              "historical_story": "Antimony was recognized in compounds by the ancients and was known as a metal at the beginning of the 17th century."
          },



          // gap



          "Lv": {
              "name": "Livermorium",
              "symbol": "Lv",
              "standard_conditions_state": "unknown, probably solid",
              "appearance": "unknown, probably metallic",
              "atomic_number": 116,
              "atomic_weight": [293],
              "block": "p-block",
              "group": "group 16",
              "electron_configuration": "predicted: [Rn] 5f^14 6d^10 7s^2 7p^4",
              "interesting_fact": "Livermorium is named after the Lawrence Livermore National Laboratory in the United States.",
              "historical_story": "Livermorium was first synthesized in 2000 by a joint team of Russian and American scientists at the Joint Institute for Nuclear Research in Dubna, Russia."
          },
          "Ts": {
              "name": "Tennessine",
              "symbol": "Ts",
              "standard_conditions_state": "unknown, probably solid",
              "appearance": "unknown",
              "atomic_number": 117,
              "atomic_weight": [294],
              "block": "p-block",
              "group": "group 17",
              "electron_configuration": "predicted: [Rn] 5f^14 6d^10 7s^2 7p^5",
              "interesting_fact": "Tennessine is one of the heaviest elements and is named after the U.S. state of Tennessee.",
              "historical_story": "Tennessine was synthesized for the first time in 2010 by a collaboration involving Russian, American, and other researchers."
          },
          "Og": {
              "name": "Oganesson",
              "symbol": "Og",
              "standard_conditions_state": "unknown, predicted to be gaseous",
              "appearance": "unknown",
              "atomic_number": 118,
              "atomic_weight": [294],
              "block": "p-block",
              "group": "group 18",
              "electron_configuration": "predicted: [Rn] 5f^14 6d^10 7s^2 7p^6",
              "interesting_fact": "Oganesson is the heaviest element in the periodic table and is named after Russian physicist Yuri Oganessian.",
              "historical_story": "Oganesson was first synthesized in 2002 by a joint team of Russian and American scientists at the Joint Institute for Nuclear Research in Dubna, Russia."
          }
      };

      const size4shell = {};

      Object.values(info4symbol).forEach(info => {
          let ec = info.electron_configuration;
          let bits = ec.split(" ");
          bits.forEach(bit => {
              let shell_n = bit.split("^");
              if (shell_n.length !== 2) return;
              let s = shell_n[0];
              let m = new Number(shell_n[1]);
              if (size4shell[s]) m = Math.max(size4shell[s], m);
              size4shell[s] = m;
          });
      });
  - name: state_and_score
    code: >

      // HACK jump to test focus

      let startSymbol = "Ne";

      let startPlatform = 2;

      let startRoom 
          // = "Room_Janitor";
          // = "Room_Platformer";
          = null;
      // setTimeout(() => {

      //     addCanister("He");

      // },100);



      let gameState = {options:{sound:true,music:true}};

      window.gameState = gameState;

      // Load from previously saved string NB: separate from gameState as
      options apply across saved-games

      if (localStorage.options) {
          gameState.options = JSON.parse(localStorage.options);
      }


      function getOption(key) {
          return gameState.options[key];
      }

      function setOption(key, value) {
          gameState.options[key] = value;
          localStorage.options = JSON.stringify(gameState.options);
          if (key==="music") {
              if (value) {
                  musicSpawn("Music-Brass");
              } else {
                  musicOff();
              }
          }
      }


      /**
       * roomName: {symbol, etc}
       */
      const roomOptions = {};

      gameState.roomState = roomOptions;


      /**
       * Set properties of the room state. This merges over existing properties.
       * @returns new state, with a modified flag
       */
      function updateRoomState(roomName, state) {
          let rState = roomOptions[roomName];
          if ( ! rState) {
              roomOptions[roomName] = rState = {};
          }
          if ( ! state) return; // odd
          let mod = false;
          Object.entries(state).forEach(e => {
              // console.log("mod?", e[1], ro[e[0]]);    
              if (e[1] === rState[e[0]]) return; // no-op
              rState[e[0]] = e[1];
              mod = true;
          });
          rState.modified = mod;
          // Object.assign(rState, state);
          return rState;
      }


      function getSymbol() {
          return roomOptions["Room_Platformer"]?.symbol; // HACK
      }


      let layout4symbol = {};

      window.layout4symbol = layout4symbol;


      gameState.counters = {};


      gameState.counters.health = 1;

      gameState.counters.elements = 0;

      gameState.counters.coins = 0;

      gameState.counters.O2 = 100;

      gameState.counters.canisterSlots = 3;


      class Canister {
          symbol;
      }


      /**
       * @typedef{Canister[]}
       */
      let canisters = [];

      window.canisters = canisters;


      let lastAdd = new Date().getTime();


      function addCanister(elementSymbol) {
          // avoid filling everything at once
          if (new Date().getTime() - lastAdd < 2000) {
              return;
          }
          lastAdd = new Date().getTime();
          // find an empty
          let canister = canisters.find(c =>  ! c.symbol);
          if ( ! canister) {
              if (canisters.length >= gameState.counters.canisterSlots) {
                  showMessage("All the canisters are full. Empty a canister first."); 
                  return;
              }
              canister = new Canister();
              canisters.push(canister);
          }
          canister.symbol = elementSymbol;    
          console.log("addCanister", canister, canisters);
      }



      /**
       * e.g. "H" -> true
       */
      let unlocked = {};

      window.unlocked = unlocked;


      /**
       * unlock and increase score
       */
      function doUnlock(symbol1) {
          check(symbol1);
          if (unlocked[symbol1]) return;
          unlocked[symbol1] = true;
          gameState.counters.elements += 1;
      }


      function isUnlocked(symbol1, symbol2) {
          if ( ! symbol2) return unlocked[symbol1];
          // either way round    
          return unlocked[symbol1+"-"+symbol2] || unlocked[symbol2+"-"+symbol1]
      }


      /**
       * Use e.g. "He-Ne": {code:"He"} for use He to open the He-Ne manhole
       */
      let mission4door = {
          "He-Ne": {
              code:"He", 
              msg:"This manhole is locked with code 'HE'. It needs a canister of the 'He' element to open.",
              msg_done:"This manhole is open. You can go down to the Neon room."},
          "Ne-Ar": {
              code: "NeN"
          },
          "F-Cl": {
              code: "FO"
          }
      };

      Object.entries(mission4door).forEach(kv => {
          kv[1].key = kv[0];
      });


      function getMission(symbolA, symbolB) {
          check(symbolA);
          check(symbolA !== symbolB);
          let doorName = symbolA+"-"+symbolB;
          let m = mission4door[doorName];
          if (m) return m;
          doorName = symbolB+"-"+symbolA;
          m = mission4door[doorName];
          if (m) return m;
          m = {code:symbolA, msg:"Locked.", msg_done:"Open",key:doorName};
          mission4door[doorName] = m;
          return m;
      }


      /**
       * @returns {string}
       */
      function getLabel(symbolA, symbolB) {
          let m = getMission(symbolA, symbolB);
          if ( ! m) return null;
          let unlocked = isUnlocked(symbolA, symbolB);
          let msg = unlocked? (m.msg_done || m.msg) : m.msg;
          return msg || JSON.stringify(m);
      }


      let lastLifeLost = new Date().getTime();


      function doLoseLife() {
          if (new Date().getTime() - lastLifeLost < 2000) {
              return; // avoid draining life instantly
          }
          lastLifeLost = new Date().getTime();
          console.log("doLoseLife");
          let chimp = getPlayer();
          pulse(chimp, 0xffaaaa);
          if (gameState.counters.health > 0) {
              gameState.counters.health--;
          }
          if (gameState.counters.health > 0) return;
          console.log("doLoseLife - die");    
          if (chimp.dying) return;
          chimp.dying = true;
          let target = Math.PI / 2;
          chimp.dy = 0;
          chimp.dx = 0;
          tween.add({
              obj: chimp,
              fields: {
                  rotation: target,
              },
              duration: 1000
          }).then(() => {
              chimp.kill = true;
              let uiRoom = rooms.list.Room_UI[0];        
              check(uiRoom);        
              rooms.current.alpha = 0.7;
              let pRestart = templates.copyIntoRoom("button", 0, 0, uiRoom);
              console.log("uiRoom", uiRoom.width, uiRoom.height, uiRoom);
              pRestart.text = "Restart Room?"
              pRestart.x = (uiRoom.width - pRestart.width)/2 - 100; // - to adjust for the infobar
              pRestart.y = (uiRoom.height - pRestart.height)/2;
              pRestart.doClick = () => {
                  restartRoom();
              };
          });
          sounds.play("MonkeyDies",{volume:0.1});
      }


      let restartJson;

      function setRestartPoint() {
          restartJson = JSON.stringify(gameState);
      }

      function restartRoom() {
          let roomName = rooms.current.name;
          let restartState = JSON.parse(restartJson);
          gameState = restartState;
          window.gameState = gameState;

          moveRoom(roomName, {restart:Math.random()});
      }
  - name: Constants
    code: |

      // let sqWidth = 40;

      let colour = {
          white: 0xffffff,
          red: 0xff6666,
          blue: 0x6666ff,
          green: 0x66ff66,
          yellow: 0xffff00,
          brown: 0xcc00ff,
          orange: 0x00ffff,
          pink: 0xff00ff,
          grey: 0xcccccc,
          aqua: 0x00ffaa,
          reddy: 0xffaa33,
      }
  - name: puzzles
    code: "\n\nclass Pipe {\n\tcol;\n\txys = [];\n}\nclass PipeBit {\n    /** start or end */\n    isEnd;\n    col;\n    /**\n     * two of NESW\n     */\n    dirn;\n    /** @type {Copy} */\n    pTile;\n}\n\nfunction eq(a, b) {\n    return a==b || JSON.stringify(a) == JSON.stringify(b);\n}\n/**\n * Like sincludes() but using `eq()`\n */\nfunction contains(x, array) {\n    if ( ! array) return false;\n    for(let i=0; i<array.length; i++) {\n        if (eq(array[i],x)) return true;\n    }\n    return false;\n}\n\n/**\n * @param {int[]} a0 [x,y]\n * @param {int[]} b0 [x,y]\n * @returns {boolean} true if a0 touches b0 (not diagonal)\n */\nfunction isTouching(a0, b0) {\n    return (Math.abs(a0[0] - b0[0])==1 && a0[1]==b0[1])\n            || (Math.abs(a0[1] - b0[1])==1 && a0[0]==b0[0]);\n}\n"
  - name: chats
    code: >-

      class ChatLine {
          /** @types {String} */
          text;

          /** @types {boolean} What has been said to the player? */
          done;

          constructor(text) {
              this.text = text;
          }
      }

      class Chat {
          /** @types {ChatLine[]}  */
          lines;

          constructor(text) {
              let texts = text.split(/\n[ \t]*\n[ \t]*/);
              this.lines = texts.map(line => new ChatLine(line));
          }
      }


      let chat4symbol = {
          He: 
      new Chat(`You should probably find and fix the Oxygen room so we can all
      keep breathing.


      I would help you, but I'm a cat, and it's not in my nature.


      Opening the manhole there will help, if you can figure out how.`),


      Ne: 

      new Chat(`I'm not supposed to be helpful, but I actualy quite like you.


      Oxygen is 2 rooms to the left of neon, where we are now.`),


      F:new Chat(`Beware of flourine! 


      Just one electron less than neon, but what a difference that makes.`),


      O:new Chat(``),


      };


      let platform4symbol = {
          Ne: 6
      };
starting: 0
settings:
  authoring:
    author: Daniel Winterstein
    site: 'https://winterstein.me.uk'
    title: Periodic Spaceship Migration Pain
    version:
      - 0
      - 2
      - 0
    versionPostfix: ''
  rendering:
    usePixiLegacy: false
    maxFPS: 60
    pixelatedrender: false
    highDensity: true
    desktopMode: maximized
    mobileScreenOrientation: landscape
    viewMode: fastScale
  export:
    windows: false
    linux: true
    mac: false
    functionWrap: false
    codeModifier: none
    bundleAssetTree: false
    autocloseDesktop: true
    bundleAssetTypes:
      texture: true
      template: true
      room: true
      behavior: false
      font: false
      sound: false
      style: false
      tandem: false
  branding:
    icon: PDFfhPGNbzdTbw
    accent: '#446adb'
    invertPreloaderScheme: true
    splashScreen: w58k2JQfdRGMWL
    hideLoadingLogo: true
  fps: 30
palette: []
startroom: MfWfD58G3Q514D
contentTypes: []
language: typescript
assets:
  - type: folder
    uid: KPfzktfc9CNdWk
    colorClass: act
    icon: help-circle
    name: rooms
    lastmod: 1708641217992
    entries:
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 10
        gridY: 10
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Space
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: CK4p8WCthKm3Nn
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0.3
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 960
            'y': 448
            opacity: 1
            tint: 16777215
            scale:
              x: 0.4
              'y': 0.4
            rotation: 0
            uid: gc76jrHjcwbGgr
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 370
            'y': 240
            opacity: 1
            tint: 16777215
            scale:
              x: 0.55128206
              'y': 0.54248366
            rotation: 0
            uid: tr94rJqLLFJcNT
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 50
            'y': 20
            opacity: 1
            tint: 16777215
            scale:
              x: 1.78
              'y': 1.78
            rotation: 0
            uid: 593bK8KcjMwQcc
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 405
            'y': 267.20754717
            opacity: 1
            tint: 16777215
            scale:
              x: 2.67857143
              'y': 3.79245283
            rotation: 0
            uid: mwB3HtwTFPpB1h
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 10
            'y': 650
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: MMp43Fr6BgcjrG
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1708678695155
        events:
          - eventKey: OnRoomStart
            code: |-

              musicSpawn("Music-Brass");

              const This = this;
              let pShip = getTemplates(This, "table-ship")[0];
              let pAsteroid = getTemplates(This, "asteroid")[0];
              let pBlackHole = getTemplates(This, "black-hole")[0];
              let pExplosion = getTemplates(This, "explosion")[0];
              pAsteroid.visible = false;
              pBlackHole.visible = false;
              pExplosion.visible = false;
              check(pShip);
              check(pAsteroid);

              pShip.zIndex = 100;
              pAsteroid.zIndex = pShip.zIndex - 1;
              pExplosion.zIndex = pShip.zIndex+1;
              this.sortableChildren = true;
              this.sortChildren();

              async function doAnimate() {
                  // move ship
                  let p = tween.add({
                      duration: 1000,
                      obj: pShip,
                      fields: {
                          x: pShip.x - This.width / 2,
                          y: pShip.y - 200,
                      }
                  });
                  tween.add({
                      duration: 1000,
                      obj: pShip.scale,
                      fields: {
                          x: 0.5,
                          y: 0.5,
                      }
                  });
                  // asteroid!
                  let endx = pAsteroid.x
                  let endy = pAsteroid.y
                  pAsteroid.x = 100;
                  pAsteroid.y = 0;    
                  pAsteroid.rotation = Math.PI;
                  pAsteroid.visible = true;
                  tween.add({
                      duration: 1000,
                      obj: pAsteroid,
                      fields: {
                          x: endx,
                          y: endy,
                          rotation: 0 
                      }
                  });

                  await p;
                  if (this.skipped) return; 
                  pAsteroid.visible = false;
                  pAsteroid.kill;

                  // Explosion
                  pExplosion.visible = true;
                  pExplosion.loop = false;
                  pExplosion.onComplete = () => {
                      pExplosion.kill = true;
                  };
                  pExplosion.play()

                  // Bridge + Captain
                  let rbridge = templates.copy("bridge");
                  rbridge.tint = 0xCCCCCC; // darken
                  // console.log("scale 0",this.height, rbridge.height);
                  let scale = 600 / rbridge.height;
                  // console.log("scale",scale,this.height, rbridge.height,rooms.current.width);
                  rbridge.scale.y = scale;
                  rbridge.scale.x = scale;
                  rbridge.x = rooms.current.width - rbridge.width - 10;
                  rbridge.y = rooms.current.height - rbridge.height;
                  // let slideIn = ct.tween.add({ fails??
                  //     duration: 250,
                  //     obj: rbridge,
                  //     fields: {
                  //         x: rooms.current.width - rbridge.width - 10,
                  //     }
                  // });
                  // await slideIn;

                  let sailor = templates.copy("sailor");
                  sailor.scale.x = -0.5;
                  sailor.scale.y = 0.5;
                  sailor.x = rbridge.x + 450;
                  sailor.y = rbridge.y + 500;

                  let captain = templates.copy("captain");
                  captain.tex = "captain-2";
                  captain.scale.x = -0.5;
                  captain.scale.y = 0.5;
                  captain.x = rbridge.x + 130;
                  captain.y = rbridge.y + 500;
                  await timer.add(500);
                  await doTalk(sailor, "Captain! It's an emergency!");
                  await doTalk(captain, "Nonsense! I've seen worse.");
                 if (this.skipped) return;

                  await doTalk(sailor, "The engines have failed!");
                  if (this.skipped) return;

                  // black hole!
                  endx = pBlackHole.x
                  endy = pBlackHole.y
                  pBlackHole.x = 100;
                  pBlackHole.y = 0;    
                  pBlackHole.visible = true;
                  await tween.add({
                      duration: 1000,
                      obj: pBlackHole,
                      fields: {
                          x: endx,
                          y: endy,
                      }
                  });
                  await doTalk(sailor, "We're heading towards a black hole!");
                  if (this.skipped) return;

                  // aliens!
                  
                  await doTalk(sailor, "Captain! Hostile aliens incoming!");
                  if (this.skipped) return;

                  // let's go
                  await doTalk(captain, "Hm...");
                  await doTalk(captain, "Before I do anything, I need my hot chocolate!");
                  await doTalk(captain, "Call the janitor!");
                  if (this.skipped) return;
                  
                  moveRoom("Room_Janitor");
              }

              doAnimate();
            arguments: {}
            lib: core
        uid: mfHt2TWd3dpDg3
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 5
        gridY: 5
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Platformer1
        backgroundColor: '#2B2B2B'
        follow: -1
        backgrounds: []
        copies:
          - x: 418
            'y': 222
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 274
            'y': 454
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 749
            'y': 426
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 228
            'y': 421
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 937
            'y': 251
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 482
            'y': 222
            opacity: 1
            tint: 16777215
            scale:
              x: 1.1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 896
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.6701570700000001
              'y': 0.91428571
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 699
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.20942408
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 128
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 5
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -80
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.3
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 24
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 192
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 384
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 576
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 768
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1152
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 0.32984293
              'y': 0.42857143
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 24
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1040
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: 0.7
              'y': 0.8
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 747
            'y': 689
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 3BN2zrLb27ftrC
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 181
            'y': 507
            opacity: 1
            tint: 16777215
            scale:
              x: 0.5026178
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 960
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1036
            'y': 613
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -100
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1190
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -100
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 482
            'y': 166
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 546
            'y': 166
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 546
            'y': 102
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 482
            'y': 102
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 610
            'y': 166
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 610
            'y': 102
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 602
            'y': 222
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: hz2P8B2MQzdknz
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -100
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1190
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1190
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1190
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1190
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -100
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -100
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -100
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 144
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 866
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -110
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
            bindings: {}
          - x: -110
            'y': 464
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
            bindings: {}
          - x: 1216
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty3: ''
            bindings: {}
          - x: 1221
            'y': 475
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -110
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2408377
              'y': 0.94285714
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 928
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.52879581
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 96
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1528
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -108
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 849
            'y': 660
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -75
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
            bindings: {}
          - x: -75
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1185
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1185
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 317
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: &ref_0 {}
            customProperties: {}
            bindings: {}
          - x: 507
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: *ref_0
            customProperties: {}
            bindings: {}
          - x: 647
            'y': 457
            opacity: 1
            tint: 16777215
            scale:
              x: 1.1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: *ref_0
            customProperties: {}
            bindings: {}
          - x: 577
            'y': 687
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: hz2P8B2MQzdknz
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 360
            'y': 454
            opacity: 1
            tint: 16777215
            scale:
              x: 0.5026178
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 229
            'y': 476
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: &ref_1 {}
            customProperties: {}
            bindings: {}
          - x: 749
            'y': 366
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: *ref_1
            customProperties: {}
            bindings: {}
        tiles:
          - depth: 1
            tiles: []
            extends: {}
            hidden: false
            cache: true
        extends: {}
        lastmod: 1709247516702
        events: []
        uid: HF5hHmkzPTQNmb
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 5
        gridY: 5
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Platformer2
        backgroundColor: '#2B2B2B'
        follow: -1
        backgrounds: []
        copies:
          - x: 768
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 448
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 384
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 224
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.35164835
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 576
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 608
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: fhddgJcNKrhtmk
            exts: {}
            customProperties: {}
          - x: 704
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 419
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 340
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 256
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 492
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 576
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 640
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 512
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 1.1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 896
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.6701570700000001
              'y': 0.91428571
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 704
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 128
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 5
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: -80
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.3
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 24
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 192
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 384
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 576
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 768
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1152
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 0.32984293
              'y': 0.42857143
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 24
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 1040
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: 0.7
              'y': 0.8
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 272
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 3BN2zrLb27ftrC
            exts: {}
            customProperties: {}
          - x: 176
            'y': 512
            opacity: 1
            tint: 16777215
            scale:
              x: 0.5026178
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 960
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1036
            'y': 613
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: -100
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 704
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 768
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 832
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 704
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 704
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 448
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 512
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 576
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 576
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 512
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 448
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 640
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 640
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 632
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: hz2P8B2MQzdknz
            exts: {}
            customProperties: {}
          - x: -100
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: -100
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 144
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 866
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: -110
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: -110
            'y': 464
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: 1216
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty3: ''
          - x: 1221
            'y': 475
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties: {}
          - x: -110
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2408377
              'y': 0.94285714
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 928
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.52879581
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 96
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 1528
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
          - x: -108
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
          - x: 849
            'y': 660
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: -75
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: -75
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 1185
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 1185
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
        tiles:
          - depth: 1
            tiles: []
            extends: {}
            hidden: false
        extends: {}
        lastmod: 1705524790322
        events: []
        uid: cC87929jh5jjrR
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 5
        gridY: 5
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Platformer3
        backgroundColor: '#2B2B2B'
        follow: -1
        backgrounds: []
        copies:
          - x: 448
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 269
            'y': 454
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 224
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.35164835
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 576
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 608
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: fhddgJcNKrhtmk
            exts: {}
            customProperties: {}
          - x: 704
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 340
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 256
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 492
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 426
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 640
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 512
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 1.1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 896
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.6701570700000001
              'y': 0.91428571
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 704
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 128
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 5
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: -80
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.3
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 24
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 192
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 384
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 576
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 768
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1152
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 0.32984293
              'y': 0.42857143
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 24
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 1040
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: 0.7
              'y': 0.8
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 272
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 3BN2zrLb27ftrC
            exts: {}
            customProperties: {}
          - x: 176
            'y': 512
            opacity: 1
            tint: 16777215
            scale:
              x: 0.5026178
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 960
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1036
            'y': 613
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: -100
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 704
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 704
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 704
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 576
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 640
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 640
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 632
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: hz2P8B2MQzdknz
            exts: {}
            customProperties: {}
          - x: -100
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: -100
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 144
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 866
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: -110
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: -110
            'y': 464
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: 1216
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty3: ''
          - x: 1221
            'y': 475
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties: {}
          - x: -110
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2408377
              'y': 0.94285714
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 928
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.52879581
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 96
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 1528
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
          - x: -108
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
          - x: 849
            'y': 660
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: -75
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: -75
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 1185
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 1185
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 208
            'y': 510
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: fhddgJcNKrhtmk
            exts: {}
            customProperties: {}
        tiles:
          - depth: 1
            tiles: []
            extends: {}
            hidden: false
        extends: {}
        lastmod: 1705524797800
        events: []
        uid: 9cKRrM3gGJRwN5
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 5
        gridY: 5
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: PlatformerNe
        backgroundColor: '#2B2B2B'
        follow: -1
        backgrounds: []
        copies:
          - x: 768
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 448
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 384
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 224
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.35164835
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 576
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 608
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: fhddgJcNKrhtmk
            exts: {}
            customProperties: {}
          - x: 704
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 419
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 340
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 256
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 492
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 576
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 640
            'y': 704
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 512
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 1.1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 896
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.6701570700000001
              'y': 0.91428571
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 704
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 128
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 5
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: -80
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1.3
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 24
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 192
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 384
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 576
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 768
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1152
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 0.32984293
              'y': 0.42857143
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 24
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 1040
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: 0.7
              'y': 0.8
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 272
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 3BN2zrLb27ftrC
            exts: {}
            customProperties: {}
          - x: 176
            'y': 512
            opacity: 1
            tint: 16777215
            scale:
              x: 0.5026178
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 960
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1036
            'y': 613
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: -100
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 1190
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: -100
            'y': 285
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: {}
            customProperties: {}
          - x: 370
            'y': 45
            opacity: 1
            tint: 16777215
            scale:
              x: 0.6
              'y': 0.6
            rotation: 0
            uid: BBmcG1pcrBDgKb
            exts: {}
            customProperties: {}
          - x: 704
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 768
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 832
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 0.8
              'y': 0.8
            rotation: 0
            uid: BgCfnp8knKpm9J
            exts: {}
            customProperties: {}
          - x: 704
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 832
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 768
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 704
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 448
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 512
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 576
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 576
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 512
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 448
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 640
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 640
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CzPkkntW1Thjwh
            exts: {}
            customProperties: {}
          - x: 632
            'y': 312
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: hz2P8B2MQzdknz
            exts: {}
            customProperties: {}
          - x: -100
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: &ref_2 {}
            customProperties: &ref_3 {}
          - x: 1190
            'y': 150
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: *ref_2
            customProperties: *ref_3
          - x: 1190
            'y': 15
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: *ref_2
            customProperties: *ref_3
          - x: 1190
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: &ref_4 {}
            customProperties: &ref_5 {}
          - x: 1190
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: *ref_4
            customProperties: *ref_5
          - x: -100
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: -100
            'y': 420
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: &ref_6 {}
            customProperties: &ref_7 {}
          - x: -100
            'y': 555
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: W135h7PGBzcWLB
            exts: *ref_6
            customProperties: *ref_7
          - x: 144
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 866
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: -110
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: -110
            'y': 464
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: 1216
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty3: ''
          - x: 1221
            'y': 475
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties: {}
          - x: -110
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.2408377
              'y': 0.94285714
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 928
            'y': 690
            opacity: 1
            tint: 16777215
            scale:
              x: 1.52879581
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 96
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 1528
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
          - x: -108
            'y': -55
            opacity: 1
            tint: 16777215
            scale:
              x: -155
              'y': 447.5
            rotation: 0
            uid: 5BPgf2T7gc2956
            exts: {}
            customProperties: {}
          - x: 849
            'y': 660
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: -75
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: -75
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: -1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 1185
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
          - x: 1185
            'y': 340
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: cqqdNgkBk88ckw
            exts: {}
            customProperties: {}
        tiles:
          - depth: 1
            tiles: []
            extends: {}
            hidden: false
        extends: {}
        lastmod: 1705523770691
        events: []
        uid: qpgkg3gT2L92Kr
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 64
        gridY: 64
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Bridge
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: cbG3pR17pMHpmp
            shiftX: 0
            shiftY: -408
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1.4
            scaleY: 1.4
            repeat: no-repeat
        copies:
          - x: 576
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: PkJPtbzttW7h7c
            exts: {}
            customProperties: {}
        tiles: []
        extends: {}
        lastmod: 1702502083123
        events: []
        uid: qrJNKwgLN74QWT
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 64
        gridY: 64
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_CodewordModal
        backgroundColor: '#000000'
        follow: -1
        backgrounds: []
        copies:
          - x: 256
            'y': 128
            opacity: 1
            tint: 16777215
            scale:
              x: 0.68817204
              'y': 0.89243028
            rotation: 0
            uid: KPQQ9RdM3P7bRh
            exts: {}
            customProperties: {}
          - x: 780.43428571
            'y': 140.06857143
            opacity: 1
            tint: 16777215
            scale:
              x: 0.36571429
              'y': 0.36571429
            rotation: 0
            uid: zTf3hWP3nKGMhm
            exts: {}
            customProperties: {}
          - x: 448
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 0.88888889
              'y': 0.52892562
            rotation: 0
            uid: jDj4719rL4Jcjd
            exts: {}
            customProperties: {}
          - x: 320
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1.27635328
              'y': 0.27234043
            rotation: 0
            uid: 5qNm5Jn2njFgMr
            exts: {}
            customProperties: {}
        tiles: []
        extends: {}
        lastmod: 1704573730387
        events:
          - eventKey: OnStep
            code: ''
            arguments: {}
            lib: core
          - eventKey: OnRoomStart
            code: >-

              UI.puzzle = this;


              console.log("room", rooms.current?.name);

              rooms.current.alpha = 0.7;


              let roomState = roomOptions[this.name];


              let a = getSymbol();

              let b =  roomState.nextSymbol; // || "Ne";

              let mission = getMission(a,b);

              console.log("mission",mission,"for",a,b);

              let code = mission.code.toUpperCase();

              this.codeOn = "";

              this.codeOff = code;

              let pCodeBlock = getTemplates(this, "code-blank")[0];

              this.pCodeTextOff = addText(pCodeBlock, code, 0, 0,
              {style:"Style_InfoBar", center:true, verticalCenter:true});

              this.pCodeTextOn = addText(pCodeBlock, "", this.pCodeTextOff.x,
              this.pCodeTextOff.y, {style:"Style_CodeOn"});


              let pTextBlock = getTemplates(this, "TextBlock")[0];

              setText(pTextBlock, "Lock for "+a+"/"+b+". Collect element
              canisters to spell out the
              code.",0,0,{center:true,verticalCenter:true, wordWrap:true,
              wordWrapWidth: pTextBlock.width - 20});


              // console.log("canisters",canisters);

              let x = 10, y = 100;

              for(let i=0; i<canisters.length; i++) {
                  let canister = canisters[i];
                  if ( ! canister?.symbol) continue;
                  console.log("canister",canister);
                  // add button
                  let pButton = templates.copyIntoRoom("element-button", x, y, this);
                  pButton.x = pTextBlock.x + x;
                  pButton.y = pCodeBlock.y + pCodeBlock.height + 50;
                  pButton.scale.x = 0.3;
                  pButton.scale.y = 0.3;
                  pButton.canister = canister;
                  // pButton.width = this.width / 3;
                  addText(pButton, info4symbol[canister.symbol]?.name, 0, 0, {style:"Style_BodyText", center:true, verticalCenter:true}); //100,30
                  if (i % 2 === 0) {
                      x += pButton.width + 20;
                  } else {
                      x = 10;
                      y += pButton.height + 20;
                  }
              };


              this.useCanister = function(canister) {
                  console.log("useCanister",canister.symbol);
                  let letters = canister.symbol.toUpperCase();
                  if ( ! this.codeOff.startsWith(letters)) {
                      showMessage("No - "+canister.symbol+" does not fit "+this.codeOff);
                      sounds.spawn("Sound_Nope",{volume:0.3});
                      return;
                  }
                  this.codeOn += letters;
                  this.codeOff = this.codeOff.substr(letters.length);
                  // redraw text
                  this.pCodeTextOn.text = this.codeOn;
                  this.pCodeTextOff.x = this.pCodeTextOn.x + this.pCodeTextOn.width;
                  this.pCodeTextOff.text = this.codeOff; // = addText(pCodeBlock, code, 20, 10, {style:"Style_InfoBar"});
                  // done?
                  if (this.codeOff.length === 0) {
                      console.log("useCanister WIN",mission);
                      mission.done = true;
                      check(mission.key, mission);
                      unlocked[mission.key] = true;
                      sounds.spawn("Sound_Chug",{volume:0.5});
                      timer.add(1000).then(() => {
                          // remove??
                          rooms.remove(UI.modal);
                          UI.modal = null;
                          // done as a separate action moveRoom("Room_Platformer", null, {transition:"none"});
                      });
                  }
              };
            arguments: {}
            lib: core
          - eventKey: OnRoomEnd
            code: |-

              rooms.current.alpha = 1.0;
              check(UI.puzzle === this);
              UI.puzzle = null;
            arguments: {}
            lib: core
        uid: PrkJ14tzNWt6L8
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 64
        gridY: 64
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Menu
        backgroundColor: '#8C8C8C'
        follow: -1
        backgrounds:
          - depth: 0
            texture: CK4p8WCthKm3Nn
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0.2
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 896
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71
              'y': 0.7
            rotation: 0
            uid: QQcGJDzRwCJz5d
            exts: {}
            customProperties:
              label: Start New Game
          - x: 128
            'y': 128
            opacity: 1
            tint: 16777215
            scale:
              x: 0.7
              'y': 0.7
            rotation: 0
            uid: gc76jrHjcwbGgr
            exts: {}
            customProperties: {}
          - x: 896
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71
              'y': 0.7
            rotation: 0
            uid: QQcGJDzRwCJz5d
            exts: {}
            customProperties:
              label: Options
        tiles: []
        extends: {}
        lastmod: 1704403968021
        events:
          - eventKey: OnRoomStart
            code: |+

              // let pTB = getTemplates(this, "TextBlock")[0];
              // setText(pTB, "ABC",0,0,{center:true, verticalCenter:true});

              if (startRoom) {
                  moveRoom(startRoom);
                  return;
              }


            arguments: {}
            lib: core
          - eventKey: OnDraw
            code: |


              if ( ! this.music && this.goSound) {
                  console.warn("Play Music!");
                  let musicVolume = 0.5;
                  this.music = sounds.spawn("Music-Brass", {volume:musicVolume});
                  console.warn("Play Music...",this.music);
              }
            arguments: {}
            lib: core
        uid: MfWfD58G3Q514D
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 64
        gridY: 64
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_OptionsModal
        backgroundColor: '#000000'
        follow: -1
        backgrounds: []
        copies:
          - x: 256
            'y': 128
            opacity: 1
            tint: 16777215
            scale:
              x: 0.68817204
              'y': 0.89243028
            rotation: 0
            uid: KPQQ9RdM3P7bRh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 780.43428571
            'y': 140.06857143
            opacity: 1
            tint: 16777215
            scale:
              x: 0.36571429
              'y': 0.36571429
            rotation: 0
            uid: zTf3hWP3nKGMhm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 384
            'y': 256
            opacity: 1
            tint: 16777215
            scale:
              x: 1.19069767
              'y': 1
            rotation: 0
            uid: WCCMcg1MtPjj7b
            exts: {}
            customProperties:
              label: "Music \U0001F3B6"
              key: music
            bindings: {}
          - x: 384
            'y': 320
            opacity: 1
            tint: 16777215
            scale:
              x: 1.19069767
              'y': 1
            rotation: 0
            uid: WCCMcg1MtPjj7b
            exts: {}
            customProperties:
              label: Sound Effects
              key: sound
            bindings: {}
          - x: 384
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.54468085
            rotation: 0
            uid: 5qNm5Jn2njFgMr
            exts: {}
            customProperties:
              label: |-
                Move: arrow keys or AWSD
                Use / talk: space
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1708679983996
        events:
          - eventKey: OnRoomStart
            code: |

              console.log("room", rooms.current?.name);
              rooms.current.alpha = 0.7;
              rooms.current.tint = 0x666666;
              let roomState = roomOptions[this.name];
            arguments: {}
            lib: core
          - eventKey: OnRoomEnd
            code: |-

              rooms.current.alpha = 1.0;
              rooms.current.tint = 0xffffff;
              if (UI.modal === this) {
                  UI.modal = null;
              }
            arguments: {}
            lib: core
        uid: 4mNdh3PmM4gjBC
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 5
        gridY: 5
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Janitor
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: PQPhMF476G12cR
            shiftX: 0
            shiftY: -144
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: -1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 245
            'y': 676.44827586
            opacity: 1
            tint: 16777215
            scale:
              x: 2.5
              'y': 2.5
            rotation: 0
            uid: CfLHnnjb3G8L59
            exts: {}
            customProperties: {}
          - x: 583.06779661
            'y': 666.03930131
            opacity: 1
            tint: 16777215
            scale:
              x: 0.86440678
              'y': 0.99563319
            rotation: 0
            uid: 4hNm69L2mbHtCK
            exts: {}
            customProperties: {}
          - x: 165
            'y': 685
            opacity: 0
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 355
            'y': 685
            opacity: 0
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 545
            'y': 685
            opacity: 0
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 760.93887857
            'y': 673.49205041
            opacity: 0
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: -1.6014884401649152
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 755.93887857
            'y': 478.49205041
            opacity: 0
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: -1.6014884401649152
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
        tiles: []
        extends: {}
        lastmod: 1704219716147
        events:
          - eventKey: OnRoomStart
            code: |-

              let roomUI = rooms.append('Room_UI');

              timer.add(500).then(() => {
                  showMessage("Press <space> to interact with nearby things.");
              });
            arguments: {}
            lib: core
        uid: tRc37K4N3LNGmm
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 136
        gridY: 136
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_p-table
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: -100
            texture: CK4p8WCthKm3Nn
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0.5
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies: []
        tiles:
          - depth: 1
            tiles: []
            extends: {}
            hidden: false
        extends: {}
        lastmod: 1702055891308
        events:
          - eventKey: OnRoomStart
            code: |-

              console.log(random);

              if ( ! this.roomTilemap) {
                  this.roomTilemap = tilemaps.create(-1);

                  for(let rowNum=0; rowNum<periodicTable.length; rowNum++) {
                      let row = periodicTable[rowNum];
                      for(let colNum=0; colNum<row.length; colNum++) {
                          let element = row[colNum];
                          if ( ! element) continue;
                          let n = 1 + Math.floor(Math.random()*7);
                          let tName = "room-128-"+n;
                          let x = (colNum+1) * (128+8);
                          let y = (rowNum+1) * (128+8);
                          console.log("addTile",element,this.roomTilemap, tName, x, y);
                          // tilemaps.addTile(this.roomTilemap, tName, x, y);
                          let tile = this.roomTilemap.addTile(tName, x+1, y+1);
                          console.log(tName, tile);
                          this.roomTilemap.addTile("wall-v", x, y);
                          this.roomTilemap.addTile("wall-h", x, y);
                          if ( ! row[colNum+1]) {
                              this.roomTilemap.addTile("wall-v", x+128+8, y);
                          }
                          if (rowNum === periodicTable.length - 1) {
                              this.roomTilemap.addTile("wall-h", x, y+128+8);
                          }
                          let label = new PIXI.Text(element,{fontFamily : 'Arial', fontSize: 24, fill : 0xffffff, align : 'center'});
                          label.x = x+64; label.y = y+64;
                          this.addChild(label);
                          // let roomCopy = templates.copy(tName, x, y);
                      }
                  }
                  // this.roomTilemap.cache();
              }

              camera.scale.x = 4;
              camera.scale.y = 4;

              ct.tween.add({
                  obj: camera.scale,
                  fields: {
                      x: 1,
                      y: 1
                  },
                  duration: 2000 // 0.65s
              })
              .then(() => {
                  // When the animation is over, change this.moving to tell
                  // that the copy is not moving already.
                  this.moving = false;
              });

              // this.scale.x = 0.25;
              // this.scale.y = 0.25;
            arguments: {}
            lib: core
        uid: j4T47BCdp7pt6C
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 16
        gridY: 16
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Platformer
        backgroundColor: '#000000'
        follow: -1
        backgrounds: []
        copies:
          - x: 768
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CfLHnnjb3G8L59
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1709247950306
        events:
          - eventKey: OnRoomStart
            code: >


              // Make a room

              console.log("options", this.options, roomOptions[this.name]);

              // if ( ! this.options) this.options = {symbol:"He"};

              let options = roomOptions[this.name];

              if ( ! options) {
                  options = {symbol:startSymbol};
                  platform4symbol[startSymbol] = startPlatform;
                  roomOptions[this.name] = options;
                  console.log("START at "+options.symbol);
              }

              check(options.symbol, options);

              this.element = info4symbol[options.symbol];

              check(this.element && this.element.atomic_number, "No element info
              "+this.element);

              check(this.element.symbol, this.element);

              this.atomicNumber = this.element?.atomic_number;


              setRestartPoint();


              // Merge in a room

              {
                  // pick room
                  let roomName = rooms.templates["Platformer"+options.symbol]?.name;
                  if ( ! roomName) {
                      roomName = platform4symbol[options.symbol];                
                  }    
                  if ( ! roomName) {
                      let platformerRooms = Object.keys(rooms.templates).filter(name => name.match(/Platformer[0-9]+/));
                      roomName = getRandomMember(platformerRooms);
                  }         
                  // merge!
                  console.log("rooms.MERGE "+roomName, rooms.current?.name);
                  let room2 = rooms.merge(roomName);
                  console.log("merged", room2, "rooms.current", rooms.current, "parent", rooms.current.parent);
                  // // ct.js bug workaround Dec 2023: patch scale
                  // let t = rooms.templates[roomName];
                  // console.log("TODO fix merge", t);
                  // if (t && room2.copies) {
                  //     let copy4xyt = {};        
                  //     room2.copies.forEach(copy => {
                  //         copy4xyt[copy.x+","+copy.y+copy.template] = copy;
                  //     });
                  //     t.objects.forEach(copy => {
                  //         let k = copy.x+","+copy.y+copy.template;
                  //         let newCopy = copy4xyt[k];
                  //         if ( ! newCopy) return;
                  //         newCopy.scale.x = copy.scale.x;
                  //         newCopy.scale.y = copy.scale.y;
                  //     });
                  // }
                  // // patch backgrounds -- doesn't work
                  // console.log("room.backgrounds", rooms.current.backgrounds, "room2.backgrounds", room2.backgrounds, "t.backgrounds", t.bgs, t.backgrounds);
                  // room2.backgrounds?.forEach((bg,i) => {
                  //     let bgti = t.bgs[i]
                  //     if (bgti?.exts) {
                  //         Object.assign(bg, bgti.exts);
                  //     }
                  //     // bg.repeat = "no-repeat";
                  //     bg.alpha = 0.5;
                  //     bg.parallaxX = 0.1;
                  //     bg.parallaxY = 0.1;  
                  //     // console.log("bg2",bg);  
                  // });
              } 


              // fade the BG

              // if ( ! rooms.current.backgrounds?.length) {

              if ( ! options.bgName) options.bgName = getRandomMember("backdrop
              wall-1 wall-2 wall-3 wall-4".split(" "));    

              const bg = backgrounds.add(options.bgName, 0, -100,
              rooms.current);

              bg.alpha = 0.35;

              bg.parallaxX = 0.1;

              bg.parallaxY = 0.1;  

              // console.log("picked bg",bg);


              // Blank edges

              console.warn("TODO black box for edge of world");



              // add UI

              let roomUI = rooms.append('Room_UI');

              // On-screen joystick?

              if (isMobile()) {
                  vkeys.joystick({
                      key: 'Vjoy1',
                      tex: 'paper', // TODOTrackPad',
                      trackballTex: 'spit', // TODO
                      depth: 1000,
                      x: 600,
                      y: 500,
                      // width:200,
                      // height:200,
                      container: roomUI
                  });
              }


              class Layout {
                  nExit;
                  sExit;
                  eExit;
                  wExit;
                  tank;
                  cat;
              }


              /**
               * You can override this by removing all-but-one tank / manhole / door
               * @returns {Layout}
               */
              function layoutRoom(symbol) {
                  console.log("layoutRoom", symbol);
                  check(symbol, "no symbol");
                  let oldlayout = layout4symbol[symbol];
                  if (oldlayout) {
                      console.log("use oldlayout for "+symbol, oldlayout);
                      return oldlayout;
                  }
                  console.log("make new layout for "+symbol);
                  let layout = new Layout();
                  layout.symbol = symbol;
                  layout4symbol[symbol] = layout;
                  let corners = "NE NW SE SW".split(" "); 
                  // match existing doors
                  let leftSymbol = getNextElementSymbol(symbol, -1, 0);
                  let upSymbol = getNextElementSymbol(symbol, 0, -1);
                  if (leftSymbol) {
                      let leftLayout = layoutRoom(leftSymbol);
                      check(leftLayout.eExit, "no eExit", leftSymbol, leftLayout);
                      layout.wExit = leftLayout.eExit.replace("E","W");
                      remove(corners, layout.wExit);
                      console.log(symbol, "has leftSymbol", leftSymbol, layout.wExit);
                  }
                  if (upSymbol) {
                      let upLayout = layoutRoom(upSymbol);
                      check(upLayout.sExit, "no sExit in upLayout", upSymbol, upLayout);
                      layout.nExit = upLayout.sExit.replace("S","N");
                      remove(corners, layout.nExit);
                  }
                  console.log("back to layout",symbol,"corners left",corners.join(", "));
                  // place the tank   
                  if ( ! layout.tank) { 
                      let corner = getRandomMember(corners);
                      layout.tank = corner;
                  }
                  remove(corners, layout.tank);
                  // place exits
                  // check(corners.length);
                  if ( ! layout.eExit) {
                      let eSymbol = getNextElementSymbol(symbol, 1, 0);
                      if (eSymbol) {
                          let corner = getRandomMember(corners.filter(c => c.includes("E")));
                          if ( ! corner) {
                              console.warn("Must now overlap for E");
                              if (layout.nExit && layout.nExit.endsWith("E")) corner = layout.nExit;
                              else corner = "SE";
                          }
                          layout.eExit = corner;
                      }
                  }
                  if ( ! layout.sExit) {
                      let sSymbol = getNextElementSymbol(symbol, 0, 1);
                      if (sSymbol) {
                          let corner = getRandomMember(corners.filter(c => c.includes("S")));
                          if ( ! corner) {
                              console.warn("Must now overlap for S");
                              if (layout.eExit && layout.eExit.startsWith("S")) corner = layout.eExit;
                              else corner = "SW";
                          }
                          // check(corner, "no S corners", corners, symbol+ " to "+sSymbol,"layout",layout);
                          layout.sExit = corner;
                      } else {
                          console.log("no S symbol", symbol, sSymbol);
                      }
                  }
                  if ( ! layout.cat) {
                      let corner = getRandomMember(corners);
                      layout.cat = corner;
                  }
                  console.log("layout", symbol, layout);
                  return layout;
              }


              /** use a fn to avoid memory leaks */

              function arrangeRoom(room) {
                  let roomState = roomOptions[room.name];
                  if ( ! roomState) roomState = roomOptions[room.name] = {};
                  console.log("arrange", room, "element", room.element, "symbol", room.symbol, "state", roomState);
                  check(room.element.symbol, room);
                  const symbol = room.element.symbol;
                  let doors = getTemplates(room, "door");
                  let manholes = getTemplates(room, "manhole");
                  let tanks = templates.list['tank-2'].filter(tmp => tmp.getRoom() === room);
                  // Layout
                  let layout = layoutRoom(symbol);
                  // ...override to fit room design?
                  // ...only one down manhole?
                  "N S E W".split(" ").forEach(dirn => {
                      let pExits = ("NS".includes(dirn)? manholes : doors).filter(m => getCompassCorner(m).includes(dirn));
                      if (pExits.length === 1) {
                          console.log("fix layout",dirn,getCompassCorner(pExits[0]));
                          layout[dirn.toLowerCase()+"Exit"] = getCompassCorner(pExits[0]);
                      }
                  });
                  console.log(symbol, layout);

                  let n = room.element.atomic_number % 4;
                  console.log("n",n,"element",symbol);
                  // let cats = templates.list['cat-1'].filter(tmp => tmp.getRoom() === room);
                  tanks.forEach(tank => {
                      let corner = getCompassCorner(tank);
                      if (layout.tank !== corner) {
                          console.log("kill tank",corner,"vs layout",layout);
                          tank.kill = true;
                      }
                  });
                  console.log("doors",doors);
                  // exists and locks
                  manholes.forEach(manhole => {
                      let cc = getCompassCorner(manhole);
                      if (layout.nExit === cc || layout.sExit === cc) {
                          let dy = manhole.y > 200? 1 : -1;
                          let nextSymbol = getNextElementSymbol(symbol, 0, dy);
                          if ( ! nextSymbol) manhole.kill = true;
                          manhole.nextSymbol = nextSymbol;
                          if (isUnlocked(symbol, nextSymbol)) {
                              manhole.unlocked = true;
                          }
                      } else {
                          manhole.kill = true;
                      }
                  });
                  doors.forEach(door => {
                      let cc = getCompassCorner(door);
                      if (layout.eExit === cc || layout.wExit === cc) {
                          let dx = door.x > 200? 1 : -1;
                          let nextSymbol = getNextElementSymbol(symbol, dx, 0);
                          door.nextSymbol = nextSymbol;
                          if (isUnlocked(symbol, nextSymbol)) {
                              door.unlocked = true;
                          }
                      } else {
                          door.kill = true;
                      }
                  });

                  // for(let i=1; i<cats.length; i++) {
                  //     cats[i].kill = true;
                  // }

                  // Place the chimp    
                  if (roomState.playerx) {
                      let chimp = getTemplates(room, "chimp")[0];
                      if (chimp) { // paranoia (maybe the chimp got killed)
                          chimp.x = roomState.playerx;
                          if (chimp.x < 160) chimp.x = 160;
                          if (chimp.x > 860) chimp.x = 860;
                          chimp.y = roomState.playery;
                      }
                  }
              };

              arrangeRoom(this);
            arguments: {}
            lib: core
          - eventKey: OnDraw
            code: |-

              if (actions.Esc.released && new Date().getTime() > lastEsc+1000) {
                  let exitButtons = getTemplates(this, "exit-button");
                  if (exitButtons.length) return;
                  // exit to menu
                  moveRoom("Room_Menu");
              }
            arguments: {}
            lib: core
        uid: ftHN9qQ5QQRjfk
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 16
        gridY: 16
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Platformer_backup
        backgroundColor: '#000000'
        follow: -1
        backgrounds: []
        copies:
          - x: 768
            'y': 224
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: CfLHnnjb3G8L59
            exts: {}
            customProperties: {}
          - x: -64
            'y': 688
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 896
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 896
            'y': 688
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 704
            'y': 688
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 128
            'y': 688
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 0
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1104
            'y': 464
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties: {}
          - x: 976
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: 0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: -48
            'y': 464
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: 64
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: -48
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
          - x: 192
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 384
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 576
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 768
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 960
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 0.45714286
            rotation: 0
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1088
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: -0.75
              'y': 0.78666667
            rotation: 0
            uid: T5qkQrDTnNDf3D
            exts: {}
            customProperties:
              newProperty3: ''
          - x: 64
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: -0.71794872
              'y': 0.80733944
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
          - x: 144
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 1088
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: -1.5707963267948966
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1088
            'y': 480
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: -1.5707963267948966
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 1088
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: -1.5707963267948966
            uid: 1cRbbTTRzCHgjn
            exts: {}
            customProperties: {}
          - x: 784
            'y': 656
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': 0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 96
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 816
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 0.67605634
              'y': -0.56140351
            rotation: 0
            uid: dzFzhGJ9PJ9CHk
            exts: {}
            customProperties: {}
          - x: 976
            'y': 208
            opacity: 1
            tint: 16777215
            scale:
              x: 0.7
              'y': 0.8
            rotation: 0
            uid: TQtRCB1Lb457JW
            exts: {}
            customProperties: {}
        tiles: []
        extends: {}
        lastmod: 1702810745853
        events:
          - eventKey: OnRoomStart
            code: >


              // Make a room

              console.log("options", this.options, roomOptions[this.name]);

              // if ( ! this.options) this.options = {symbol:"He"};

              let options = roomOptions[this.name];

              if ( ! options) {
                  options = {symbol:startSymbol};
                  platform4symbol[startSymbol] = startPlatform;
                  roomOptions[this.name] = options;
                  console.log("START at "+options.symbol);
              }

              check(options.symbol, options);

              this.element = info4symbol[options.symbol];

              check(this.element && this.element.atomic_number, "No element info
              "+this.element);

              check(this.element.symbol, this.element);

              this.atomicNumber = this.element?.atomic_number;


              // fade the BG

              if ( ! rooms.current.backgrounds?.length) {
                  if ( ! options.bgName) options.bgName = getRandomMember("backdrop wall-1 wall-2 wall-3 wall-4".split(" "));    
                  const bg = backgrounds.add(options.bgName);
                  bg.alpha = 0.35;
              }

              // Hack Neon

              if (options.symbol === "Ne") {
                  let pEmpty = templates.copy("Empty");
                  pEmpty.tex = "red-neon";
                  pEmpty.x = 350;
                  pEmpty.y = 200;
                  pEmpty.alpha = 0.5;
                 console.log(pEmpty);
              }


              {
                  let p = platform4symbol[options.symbol] || getRandomMember([2,3,4,5]);
                  console.log("platform",p);
                  let room2 = rooms.merge('Platformer'+p);
                  // room2.children.forEach(kid => {
                  //     room2.removeChild(kid)
                  //     rooms.current.addChild(kid);
                  // });
                  console.log("merged", room2, "rooms.current", rooms.current, "parent", rooms.current.parent);
                  // room2.
                  // room2.alpha = 1; // huh?
                  // stage.
              }


              // add UI

              let roomUI = rooms.append('Room_UI');

              // On-screen joystick?

              // if (isMobile() || true) {

              //     vkeys.joystick({

              //         key: 'Vjoy1',

              //         tex: 'paper', // TODOTrackPad',

              //         trackballTex: 'spit', // TODO

              //         depth: 1000,

              //         x: 500,

              //         y: 500,

              //         container: roomUI

              //     });

              // }


              class Layout {
                  nExit;
                  sExit;
                  eExit;
                  wExit;
                  tank;
                  cat;
              }


              /**
               * @returns {Layout}
               */
              function layoutRoom(symbol) {
                  console.log("layoutRoom", symbol);
                  check(symbol, "no symbol");
                  let oldlayout = layout4symbol[symbol];
                  if (oldlayout) {
                      console.log("use oldlayout for "+symbol, oldlayout);
                      return oldlayout;
                  }
                  console.log("make new layout for "+symbol);
                  let layout = new Layout();
                  layout.symbol = symbol;
                  layout4symbol[symbol] = layout;
                  let corners = "NE NW SE SW".split(" "); 
                  // match existing doors
                  let leftSymbol = getNextElementSymbol(symbol, -1, 0);
                  let upSymbol = getNextElementSymbol(symbol, 0, -1);
                  if (leftSymbol) {
                      let leftLayout = layoutRoom(leftSymbol);
                      check(leftLayout.eExit, "no eExit", leftSymbol, leftLayout);
                      layout.wExit = leftLayout.eExit.replace("E","W");
                      remove(corners, layout.wExit);
                      console.log(symbol, "has leftSymbol", leftSymbol, layout.wExit);
                  }
                  if (upSymbol) {
                      let upLayout = layoutRoom(upSymbol);
                      check(upLayout.sExit, "no sExit in upLayout", upSymbol, upLayout);
                      layout.nExit = upLayout.sExit.replace("S","N");
                      remove(corners, layout.nExit);
                  }
                  console.log("back to layout",symbol,"corners left",corners.join(", "));
                  // place the tank
                  let corner = getRandomMember(corners);
                  layout.tank = corner;
                  remove(corners, layout.tank);
                  // place exits
                  check(corners.length);
                  // console.log(symbol,JSON.stringify(corners),JSON.stringify(layout));
                  // if ( ! layout.wExit) {
                  //     let corner = getRandomMember(corners);
                  //     layout.wExit = corner;
                  // }
                  if ( ! layout.eExit) {
                      let eSymbol = getNextElementSymbol(symbol, 1, 0);
                      if (eSymbol) {
                          let corner = getRandomMember(corners.filter(c => c.includes("E")));
                          if ( ! corner) {
                              console.warn("Must now overlap for E");
                              if (layout.nExit && layout.nExit.endsWith("E")) corner = layout.nExit;
                              else corner = "SE";
                          }
                          layout.eExit = corner;
                      }
                  }
                  // if ( ! layout.nExit) {
                  //     let corner = getRandomMember(corners);
                  //     layout.nExit = corner;
                  // }
                  if ( ! layout.sExit) {
                      let sSymbol = getNextElementSymbol(symbol, 0, 1);
                      if (sSymbol) {
                          let corner = getRandomMember(corners.filter(c => c.includes("S")));
                          if ( ! corner) {
                              console.warn("Must now overlap for S");
                              if (layout.eExit && layout.eExit.startsWith("S")) corner = layout.eExit;
                              else corner = "SW";
                          }
                          // check(corner, "no S corners", corners, symbol+ " to "+sSymbol,"layout",layout);
                          layout.sExit = corner;
                      } else {
                          console.log("no S symbol", symbol, sSymbol);
                      }
                  }
                  if ( ! layout.cat) {
                      let corner = getRandomMember(corners);
                      layout.cat = corner;
                  }
                  console.log("layout", symbol, layout);
                  return layout;
              }


              /** use a fn to avoid memory leaks */

              function arrangeRoom(room) {
                  let roomState = roomOptions[room.name];
                  if ( ! roomState) roomState = roomOptions[room.name] = {};
                  console.log("arrange", room, "element", room.element, "symbol", room.symbol, "state", roomState);
                  check(room.element.symbol, room);
                  const symbol = room.element.symbol;
                  let layout = layoutRoom(symbol);
                  console.log(symbol, layout);
                  let n = room.element.atomic_number % 4;
                  console.log("n",n,"element",symbol);
                  let doors = getTemplates(room, "door");
                  let manholes = getTemplates(room, "manhole");
                  let tanks = templates.list['tank-2'].filter(tmp => tmp.getRoom() === room);
                  // let cats = templates.list['cat-1'].filter(tmp => tmp.getRoom() === room);
                  tanks.forEach(tank => {
                      let corner = getCompassCorner(tank);
                      if (layout.tank !== corner) {
                          console.log("kill tank",corner,"vs layout",layout);
                          tank.kill = true;
                      }   
                  });
                  console.log("doors",doors);
                  // exists and locks
                  manholes.forEach(manhole => {
                      let cc = getCompassCorner(manhole);
                      if (layout.nExit === cc || layout.sExit === cc) {
                          let dy = manhole.y > 200? 1 : -1;
                          let nextSymbol = getNextElementSymbol(symbol, 0, dy);
                          if ( ! nextSymbol) manhole.kill = true;
                          manhole.nextSymbol = nextSymbol;
                          if (isUnlocked(symbol, nextSymbol)) {
                              manhole.unlocked = true;
                          }
                      } else {
                          manhole.kill = true;
                      }
                  });
                  doors.forEach(door => {
                      let cc = getCompassCorner(door);
                      if (layout.eExit === cc || layout.wExit === cc) {
                          let dx = door.x > 200? 1 : -1;
                          let nextSymbol = getNextElementSymbol(symbol, dx, 0);
                          door.nextSymbol = nextSymbol;
                          if (isUnlocked(symbol, nextSymbol)) {
                              door.unlocked = true;
                          }
                      } else {
                          door.kill = true;
                      }
                  });

                  // for(let i=1; i<cats.length; i++) {
                  //     cats[i].kill = true;
                  // }

                  // Place the chimp    
                  if (roomState.playerx) {
                      let chimp = getTemplates(room, "chimp")[0];
                      if (chimp) { // paranoia (maybe the chimp got killed)
                          chimp.x = roomState.playerx;
                          chimp.y = roomState.playery;
                      }
                  }
              };

              arrangeRoom(this);
            arguments: {}
            lib: core
        uid: FT4BHQQ5N75Fb8
        behaviors: []
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 5
        gridY: 5
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: Room_Puzzle_Pipes
        backgroundColor: '#000000'
        follow: -1
        backgrounds: []
        copies:
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1.26164875
              'y': 1.43426295
            rotation: 0
            uid: KPQQ9RdM3P7bRh
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 998.79428571
            'y': 19.82285714
            opacity: 1
            tint: 16777215
            scale:
              x: 0.4
              'y': 0.4
            rotation: 0
            uid: zTf3hWP3nKGMhm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 605
            'y': 100.00000000000003
            opacity: 1
            tint: 16777215
            scale:
              x: 1.0113960113960114
              'y': 2.1702127659574466
            rotation: 0
            uid: 5qNm5Jn2njFgMr
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 55
            'y': 95
            opacity: 1
            tint: 16777215
            scale:
              x: 1.1018711
              'y': 1.1
            rotation: 0
            uid: 4zDcPd9cp6LqfL
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 225
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: Cc94g82RLh4cTF
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1709247950178
        events:
          - eventKey: OnRoomStart
            code: "\n\nthis.puzzleType = \"flow\";\nthis.elementSymbol = roomOptions[this.name].symbol;\ncheck(this.elementSymbol);\nthis.element = info4symbol[this.elementSymbol]\n\n// get harder\nthis.puzzleSize = Math.min(Math.max(10, this.element.atomic_number / 5), 5);\n\nconsole.log(\"room\", this, \"roomOptions\", JSON.stringify(roomOptions), \"element\", this.element);\n\nrooms.append('Room_UI');\n\nconst BLANK_TEXTURE = \"pipe-empty\";\nconst EW_TEXTURE = \"pipe-bit-1\";\nconst NW_TEXTURE = \"pipe-corner-NW\";\nconst SW_TEXTURE = \"pipe-corner-SW\";\n\n// container\nthis.sortableChildren = true;\nlet pContainer = getTemplates(this,\"PlumbingContainer\")[0];\npContainer.zIndex = 100;\n// NB: x/y adjustment numbers found by random tweaking :'(\nlet sqWidth = Math.floor((pContainer.width - 150) / this.puzzleSize);\nlet offsetX = (pContainer.width - sqWidth*this.puzzleSize)/2 + 15; \nlet offsetY = 20 + 32; \n\n// Text\nlet textBlock = getTemplates(this, \"TextBlock\")[0];\nlet info = info4symbol[this.elementSymbol];\naddText(textBlock, info.atomic_number+\": \"+info.name+\" (\"+info.symbol+\")\\n\"\n    +\"At room temperature: \"+info.standard_conditions_state+\"\\n\"\n    +\"Normal appearance: \"+info.appearance+\"\\n\"\n    +info.interesting_fact\n    // +JSON.stringify(info)\n    , 10, 10, {wordWrap:true, wordWrapWidth: textBlock.width - 20});\n\n// TODO seeds\n\n/**\n * @returns {Pipe[]}\n */\nfunction makePipes({w=8}) {\n    let pipes = [];\n    for(let i=0; i<w; i++) {\n        let pipe = new Pipe();\n        pipes.push(pipe);\n        pipe.col = Object.keys(colour)[i];\n        for(let j=0; j<w; j++) {\t\t\t\t\n            pipe.xys.push([i, j]);\n        }\n    }\n\n    // mutate - move a pair of pipe ends\n    for(let i=0; i<1000000; i++) {\n        let pipe1 = getRandomMember(pipes);\n        let pipe2 = getRandomMember(pipes);\n        if (pipe1==pipe2) continue;\n        let ai = getRandomChoice(0.5)? 0 : pipe1.xys.length - 1;\n        let bi = getRandomChoice(0.5)? 0 : pipe2.xys.length - 1;\n        let a0 = pipe1.xys[ai];\n        let b0 = pipe2.xys[bi];\n        if (isTouching(a0, b0)) {\n            // move one end\n            if (getRandomChoice(0.5)) {\n                movePipe(pipe1,ai,pipe2,bi);\n            } else {\n                movePipe(pipe2,bi,pipe1,ai);\n            }\n        }\n    }\t\n    return pipes;\t\n} // ./ makePipes\n\nfunction movePipe(pipe1,  ai,  pipe2,  bi) {\n    if (pipe1.xys.length < 4) return;\n    let s = pipe1.xys[ai];\n    // avoid looping back:\n    if (isLoopBack(s, pipe2, pipe2.xys[bi])) {\n        return;\n    } else {\n        pipe1.xys = pipe1.xys.filter(xy => xy !== s);\n        if (bi==0) pipe2.xys.splice(bi, 0, s);\n        else pipe2.xys.push(s);\n    }\n}\n\nfunction isLoopBack(s, pipe2, b0) {\n    for (let i = 0; i < pipe2.xys.length; i++) {\n        let b = pipe2.xys[i];\n        if (b===b0) continue;\n        if (isTouching(s,b)) return true;\n    }\n    return false;\n}\n\nthis.pipes = makePipes({w:this.puzzleSize});\n\nconsole.log(this.pipes);\n\n// render\nthis.grid = [];\nfor(let i=0; i<this.puzzleSize; i++) this.grid.push([]);\nthis.pipes.forEach(pipe => {\n    let start = pipe.xys[0];\n    let end = pipe.xys[pipe.xys.length-1];\n    // pipe.xys.forEach(xy => {\n    [start, end].forEach(xy => {\n        let pb = new PipeBit();\n        pb.col = pipe.col;\n        pb.isEnd = true;\n        this.grid[xy[0]][xy[1]] = pb;\n    });\n});\n// console.log(\"grid\", this.grid);\n\n// draw grid\nlet pGridLines = new PIXI.Graphics();\npGridLines.lineStyle(3, 0xcccccc, 0.5, 0.5, true);\nlet h = 38; // adjust for half-brick centering in tile bits\nlet endX = offsetX + this.puzzleSize * sqWidth - h;\nlet endY = offsetY + this.puzzleSize * sqWidth - h;\nfor(let col=0; col < this.grid.length + 1; col++) {\n    pGridLines.moveTo(offsetX-35, offsetY - 38 + sqWidth*col);\n    pGridLines.lineTo(endX, offsetY - 38 + sqWidth*col);\n}\nfor(let row=0; row < this.grid.length + 1; row++) {\n    pGridLines.moveTo(offsetX-38 +sqWidth*row, offsetY-38);\n    pGridLines.lineTo(offsetX-38 +sqWidth*row, endY);\n}\npContainer.addChild(pGridLines);\n\n// grid to tile-grid\nfor(let i=0; i<this.grid.length; i++) {\n    for(let j=0; j<this.grid.length; j++) { // NB: assume square\n        // console.log(\"grid i j\", i, j, this.grid[i][j], this.grid[i][j]?.col);\n        let copy = templates.copy(\"empty-tile\");\n        copy.zIndex = 100;\n        copy.pipeColor = this.grid[i][j]?.col;\n        // let obj = new PIXI.Graphics();\n        copy.gridx = j;\n        copy.gridy = i;\n        copy.x = offsetX + sqWidth*j;\n        copy.y = offsetY + sqWidth*i;\n\n        if (copy.pipeColor) {\n            copy.isEnd = true;\n            copy.tex = \"pipe-end-block\";\n            const col = colour[copy.pipeColor];\n            copy.tint = col;\n            // obj.beginFill(colour[copy.pipeColor]);\n            // obj.drawRect(1, 1, sqWidth-2, sqWidth-2);            \n        } else {        \n            copy.tex = BLANK_TEXTURE; //\"pipe-bit-1\";\n        }        \n        copy.width  = sqWidth;\n        copy.height = sqWidth;\n        // copy.height = sqWidth;\n\n        // copy.addChild(obj);\n        pContainer.addChild(copy);\n    }\n}\n\nthis.pipeColourMarker = getTemplates(this, \"PipeColorMarker\")[0];\ncheck(this.pipeColourMarker);\n\nfunction setColor(color, room) {\n    check(room, \"no room\",color);\n    // select\n    room.selectedColor = color;\n    room.downColor = color;\n    console.log(\"col\",color);\n    const col = colour[color] || colour.white; // white tint = no tint\n    room.pipeColourMarker.tint = col;\n}\nthis.setPipeColor = setColor;\n\nthis.onTileClick = (This) => {\n    console.log(\"click\",This);\n    let room = This.getRoom();\n    if (This.isEnd) {\n        setColor(This.pipeColor, room);\n    } else {\n        room.doFillTile(This, room.selectedColor);\n    }\n};\n\n\nthis.doFillTile = function(This, color) {\n    console.log(\"bar\");\n    check(This);\n    let room = This.getRoom();\n    check(room, This);\n    if (This.isEnd) {\n        if (color===This.pipeColor) {\n            setColor(null, room);\n        } else {\n            setColor(This.pipeColor, room);\n        }\n        return;\n    }\n    This.tex = EW_TEXTURE;\n    This.pipeColor = color;\n    const col = colour[This.pipeColor];\n    This.tint = col; \n    let pb = new PipeBit();\n    pb.col = This.pipeColor;\n    pb.pTile = This;\n    room.grid[This.gridy][This.gridx] = pb;\n    // adjust graphics\n    setPipeTexture(This, room);\n    let xy = [This.gridx,This.gridy];\n    let gn = getGridNeighbours(xy, room.grid); // TODO\n    gn.forEach(nxy => {\n        let pTile = getGridEntry(room.grid, nxy)?.pTile;\n        if (pTile) setPipeTexture(pTile, room);\n    });\n    // Win?\n    let win = checkWin(room.grid, room.pipes);\n    if (win) {\n        doWin(room);\n    }\n};\n\n\nfunction setPipeTexture(This, room) {\n    console.log(\"setPipeTexture\",This);\n    check( ! This.isEnd);\n    let col = This.pipeColor;\n    if ( ! col) {\n        This.tex = BLANK_TEXTURE;\n        return;\n    }\n    let xy = [This.gridx,This.gridy];\n    let gn = getGridNeighbours(xy, room.grid);\n    console.log(\"setPipeTexture xy\",xy,\"gn\",gn);\n    let sameColor = gn.filter(nxy => {\n        // console.log(\"setPipeTexture xy\",xy,\"gn\",gn,\"grid row\",room.grid[nxy[1]]);\n        let row = room.grid[nxy[1]];\n        if ( ! row) {\n            // console.warn(\"no row in grid\",nxy,room.grid);\n            return false;\n        }\n        let npb = row[nxy[0]];\n        return npb?.col === col;\n    });\n    console.log(\"TODO which pipe texture? sameColor\",sameColor,\"xy\", xy, This, room)\n    let n = contains([xy[0],xy[1]-1], sameColor);\n    let s = contains([xy[0],xy[1]+1], sameColor);\n    let e = contains([xy[0]+1,xy[1]], sameColor);\n    let w = contains([xy[0]-1,xy[1]], sameColor);\n    console.log(\"what corner?\",\"n\",n,\"e\",e,\"s\",s,\"w\",w,\"xy\",xy);\n\n    if (n || s) {\n        if ( ! e && ! w) {\n            This.tex = EW_TEXTURE;\n            This.rotation = Math.PI / 2;\n            return;\n        }\n    } else if (e || w) {\n        This.tex = EW_TEXTURE;\n        This.rotation = 0; // reset\n        return;\n    } else {\n        This.tex = BLANK_TEXTURE;\n    }\n    // corner\n    This.rotation = 0; // reset\n    if (n && w) {\n        This.tex = NW_TEXTURE; \n        This.scale.x = Math.abs(This.scale.x);\n        This.scale.y = Math.abs(This.scale.y);\n        return;\n    }\n    if (s && w) {\n        This.tex = SW_TEXTURE;\n        This.scale.x = Math.abs(This.scale.x);\n        This.scale.y = Math.abs(This.scale.y);\n        return;\n    }\n    if (n && e) {\n        This.tex = NW_TEXTURE;\n        This.scale.x = - Math.abs(This.scale.x);\n        This.scale.y = Math.abs(This.scale.y);\n        This.width = sqWidth;\n        This.height = sqWidth;\n        return;\n    }\n    if (s && e) {\n        This.tex = SW_TEXTURE;\n        This.scale.x = - Math.abs(This.scale.x);\n        This.scale.y = Math.abs(This.scale.y);\n        This.width = sqWidth;\n        This.height = sqWidth;\n        return;\n    }\n    // error\n    This.tex = EW_TEXTURE;\n    console.error(\"what corner?\",n,e,s,w,xy);\n}\n\nfunction doWin(room) {\n    sounds.play(\"Success\");\n    room.win = true;\n    let x = room.pipeColourMarker.x;\n    let y = room.pipeColourMarker.y;\n    emitters.append(room.pipeColourMarker, \"SparksFX\");\n    doUnlock(room.elementSymbol);\n    addCanister(room.elementSymbol);\n    // close\n    sounds.play(\"Sound_Squeaky_Open\", {volume:0.5, complete: () => {\n        moveRoom(\"Room_Platformer\");\n    }});\n}\n\nfunction checkWin(grid, pipes) {\n    console.log(\"TODO checkWin\", grid, pipes);\n    for(let i=0; i<pipes.length; i++) {\n        if ( ! checkWin2_onePipe(grid, pipes[i])) return false;\n    }\n    return true;\n}\n\n/**\n * @param {PipeBit[][]} grid\n */\nfunction checkWin2_onePipe(grid, pipe) {\n    console.log(\"pipe\", pipe.col, pipe,\"grid\",grid);\n    let startXY = pipe.xys[0];\n    let endXY = pipe.xys[pipe.xys.length-1];\n    let path = [startXY];\n    let steps = 0;\n    while(steps < 20) {\n        steps++;\n        let tip = path[path.length-1];\n        let gn = getGridNeighbours(tip, grid);\n        console.log(\"path\", path, \"gn\",gn,\"tip\",tip);\n        let nextBits = gn.filter(xy => {\n            let g0 = grid[xy[0]];\n            if ( ! g0) return false;\n            let pb = g0[xy[1]];\n            console.log(\"nextBits check xy\", xy, \"pb\", pb, path);\n            return pb && pb.col === pipe.col && ! contains(xy, path);\n        }) ;  \n        console.log(path, \"nextBits\",nextBits, grid, pipe);\n        if ( ! nextBits.length) {\n            console.log(\"FAIL for \", pipe.col, path);\n            return false;\n        }\n        let nextBit = nextBits[0];\n        if (eq(nextBit, endXY)) {\n            console.log(\"WIN for \", pipe.col, path);\n            return true;\n        }\n        console.log(\"LOOP \", pipe.col, nextBit, \"path\",path,\"endXY\", endXY);\n        path.push(nextBit);\n    }\n    // let next = grid.\n    console.log(\"max steps for \", pipe.col, path);\n    return false; // TODO\n}\n\n/**\n * @returns {Array[]} [[x,y], ...]\n */\nfunction getGridNeighbours(xy, grid) {\n    let neighbours = [[1,0],[-1,0],[0,1],[0,-1]].map(dxdy => [xy[0]+dxdy[0], xy[1]+dxdy[1]]);\n    let filtered = neighbours.filter(cell => cell[0] > 0 && cell[1] > 0 && cell[0] < grid.length && cell[1] < grid[0].length);\n    console.log(\"neighbours\",xy,grid,\"filtered\", filtered);\n    return neighbours;\n}\n\nthis.sortChildren();"
            arguments: {}
            lib: core
          - eventKey: OnStep
            code: |+

            arguments: {}
            lib: core
        uid: pJpHHCcNcbbFP3
        behaviors: []
  - type: folder
    uid: Qcz9q2HKFkbdcH
    colorClass: act
    icon: help-circle
    name: templates
    lastmod: 1708641245311
    entries:
      - type: template
        name: AbstractEnemy
        depth: 0
        texture: -1
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: collisionTemplate
            code: console.log("Common collide - not firing?!");
            arguments:
              template: CfLHnnjb3G8L59
            lib: place
        extends: {}
        lastmod: 1703172110735
        uid: nFqLLKRM5LTfgL
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: asteroid
        depth: 0
        texture: HrW2D3C615fW75
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702069484278
        uid: tr94rJqLLFJcNT
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: atom_score
        depth: 0
        texture: 2z9qPg4G28fPqq
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnCreate
            code: |

              this.total =+Object.keys(info4symbol).length;
              // HACK numbers by tweaking
              setText(this, "0 / "+this.total, 55, -35, {style:'Style_Score'});
            arguments: {}
            lib: core
          - eventKey: OnDraw
            code: |-
              let v = ""+(gameState.counters.elements || 0)+" / "+this.total;
              if (this.pText.text !== v) this.pText.text = v;
            arguments: {}
            lib: core
          - eventKey: OnPointerEnter
            code: >-
              showTooltip(this, "You have unlocked
              "+gameState.counters.elements+" elements of
              "+Object.keys(info4symbol).length);
            arguments: {}
            lib: core
          - eventKey: OnPointerLeave
            code: hideTooltip(this);
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1709117761282
        uid: r5L6tg3f56jgJ4
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: black
        depth: 0
        texture: fpnhg3PLddP6ND
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends: {}
        lastmod: 1704575574174
        uid: 5BPgf2T7gc2956
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: black-hole
        depth: 0
        texture: GHd2Jz4DnJjbqt
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |-

              this.rotation += Math.PI / 60;
            arguments: {}
        extends: {}
        lastmod: 1702239464976
        uid: 593bK8KcjMwQcc
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: bridge
        depth: 0
        texture: cbG3pR17pMHpmp
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702057442313
        uid: bc9twq1FdGDzKN
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: Block
        depth: 0
        texture: WCT2tzLLT3fDkq
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends:
          cgroup: Solid
        lastmod: 1704206202040
        uid: BgCfnp8knKpm9J
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: cat-1
        depth: 0
        texture: 3fQzdrGpckr7Kw
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: collisionTemplate
            code: |

              // if ( ! this.meow) {
              //     this.meow = true;
              //     sounds.spawn("Sound_Cat", {volume:0.5});
              // }

              // if (this.pTalkToMe) this.pTalkToMe.visible = false;

              // doTalk(this, msg);
            arguments:
              template: CfLHnnjb3G8L59
            lib: place
          - eventKey: OnStep
            code: >-

              // if (this.talking || this.pSpeechBubble) { // bug - this.talking
              isnt a reliable marker??

              //     if (this.pTalkToMe) {

              //         this.pTalkToMe.visible = false;

              //         this.pTalkToMe.alpha = 0;

              //     }

              // }


              // if (this.talking) {

              //     let chimp = getPlayer();

              //     if (chimp && ! place.collide(this, chimp)) {

              //         console.log("Stop talking?", this.talking);

              //         if (this.talking.control) {

              //             this.talking.control.stop = true;

              //             this.talking = null;

              //         }

              //     }

              //     return;

              // } else if ( ! this.pSpeechBubble) {

              //     let msg = chat4symbol[rooms.current.element?.symbol];

              //     if (msg && msg.lines.find(line => ! line.done)) {

              //         if ( ! this.pTalkToMe) {

              //             this.pTalkToMe = templates.copy("speech-bubble",
              -5, -this.height -5);

              //             this.addChild(this.pTalkToMe);

              //             this.pTalkToMe.scale.x = 0.2;

              //             this.pTalkToMe.scale.y = 0.2;            

              //         }

              //         this.pTalkToMe.visible = true;

              //         this.pTalkToMe.alpha = 0.75;

              //     }

              // }
            arguments: {}
            lib: core
          - eventKey: OnCreate
            code: |

              let msg = chat4symbol[rooms.current.element?.symbol];
              if ( ! msg) {
                  msg = new Chat("Meow. You're in the "+rooms.current.element?.name+" room.");
              }
              this.chat = msg;
              this.chat.sound = "Sound_Cat";
            arguments: {}
            lib: core
        extends:
          cgroup: interact
        lastmod: 1709117249401
        uid: 3BN2zrLb27ftrC
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: captain
        depth: 0
        texture: g1nN3tzJ7BFKBp
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702059233680
        uid: PkJPtbzttW7h7c
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: chimp
        depth: 0
        texture: PDFfhPGNbzdTbw
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: >

              // console.log("chimp");

              let MAX_X = 1240;

              let MIN_X = -100;


              // console.log("camera",camera,camera.x);

              if (rooms.current.name === "Room_Platformer") {
                  let cx = (this.x + 640*2)/3; // weak follow
                  let cy = camera.y;
                  camera.moveTo(cx, cy);
              } else {
                  camera.moveTo(rooms.current.width/2, rooms.current.height/2);
              }


              function occupied(This, x, y) {
                  check(x);
                  return place.occupied(This, x, y, "Solid");
              }


              this.depth = 10;

              this.action = "";



              // Repel out of a jam? 

              let bump = occupied(this, this.x, this.y);

              if (bump) {
                  console.error("start stuck?!");
                  let b1 = {
                      x: this.x - this.shape.left, 
                      y: this.y - this.shape.top + this.height,
                      width: this.width - this.shape.left - this.shape.right, 
                      height: this.height - this.shape.top - this.shape.bottom
                  };
                  let b2 = {
                      x: bump.x - bump.shape.left, 
                      y: bump.y - bump.shape.top,
                      width: bump.width, // - bump.shape.left - bump.shape.right + 5, 
                      height: bump.height// - this.shape.top - this.shape.bottom
                  };
                  // NB: all -ive for max (min abs)
                  // amount to add (ie dxl would be -ive) to b1.x to move left and be clear
                  let dxl = b2.x - b1.x - b1.width;
                  let dxr =-(b2.x + b2.width - b1.x); // subtract to move right and be clear (also -ive)
                  let dyu = b2.y - b1.y - b1.height; // add (-ive) to clear up // TODO
                  let dyd = -(b2.y + b2.height - b1.y);// subtract (-ive) to clear down
                  // avoid bump-off-screen
                  // if (b1.x < 50) dxl = 0;
                  // if (b1.x > MAX_X-50) dxr = 0;
                  // pick the smallest bump
                  let dMin = Math.max(dxl, dxr, dyu, dyd);
                  console.log("BUMP lrud min",dxl,dxr,dyu,dyd,dMin, "xy",this.x, this.y);
                  check(Math.max(dxl,dxr,dyu,dyd) <=0);
                  if (dMin === dxl) {
                      this.x += dxl - 1;
                  } else if (dMin === dxr) {
                      this.x -= dxr + 1;
                  } else if (dMin === dyu) {
                      this.y += dyu - 5;
                  } else {
                      this.y -= dyd + 5;
                  }
                  // ?? drop cached info?? _shape
                  console.log("BUMP new xy",this.x, this.y, place.occupied(this, this.x, this.y, "Solid"),"dx dy",this.dx,this.dy);
              } else {
                  // console.log("No bump xy",this.x, this.y, bump,"dx dy",this.dx,this.dy);
              }


              if (actions.VJoyX && actions.VJoyX.value) {
                  console.log("VJoyX", actions.VJoyX.value, actions.VJoyX.down);
              }


              // Left / Right

              if (actions.MoveLeftRight.down) {
                  // If the A key or left arrow on a keyboard is down, then move to left    
                  let multiplier = actions.MoveLeftRight.value;
                  this.dx = this.SPEED_LR * multiplier;
                  // console.log("MoveLeftRight",this.dx);
                  this.action = "LR";
                  this.scale.x = multiplier * Math.abs(this.scale.x); // mirror left/right
                  if (this.tex !== "chimp-walk") {
                      this.tex = 'chimp-walk';
                      this.play(); 
                  }
              } else {
                  // Don't move horizontally if no input
                  this.dx = 0;
                  if (this.tex !== "chimp-idle") {
                      this.tex = 'chimp-idle';
                  }
                  // console.log("idle",this.dx);
                  this.action = "idle";
              }

              // duck

              if (rooms.current.name === "Room_Platformer") {
                  if (actions.Down.down) {
                      this.scale.y = 0.7; // tween??
                  } else {
                      this.scale.y = 1;
                  }
              }


              if ( ! this.collisionCheck) {
                  this.y = this.y + this.dy;
                  this.x = this.x + this.dx;
                  // console.log("no check");
                  return;
              }


              // always down

              this.dy += this.gravity;


              // for checking the move

              let fullY = this.y + this.dy;


              // Move! maybe

              // ...stick to whole pixels

              let oldX = this.x, oldY = this.y;

              let dx = Math.floor(this.dx * u.delta);

              let dy = Math.floor(this.dy * u.delta);

              let newX;

              let newY = this.y + dy;

              let hit = {};

              // ...x

              // while(Math.abs(dx) >= 1) {

              newX = this.x + dx;

              hit.x = occupied(this, newX, oldY);

              //     if ( ! hit.x) break; // success

              //     console.log("hit x", newX, oldY, "go back to ",oldX,
              oldY,"dx dy", this.dx, this.dy);

              //     if (Math.abs(dx) > 1) { // try again, 1 pixel

              //         dx = Math.sign(dx);

              //     } else {

              //         break;

              //     }

              // }

              if (hit.x) {
                  // console.log("stopx",hit.x);
                  this.dx = 0; // full stop, no half measures
                  newX = oldX;
              }

              // ...y

              hit.y = occupied(this, newX, newY);

              if (hit.y) {
                  // console.log("hit y", this.x, newY, "go back to ",this.x, oldY,"dx dy", this.dx, this.dy);
                  newY = oldY;
                  this.dy = 0;
              }


              // on screen always

              if (newX<MIN_X) newX = MIN_X;

              if (newY<0) newY = 0;

              if (newX>MAX_X) {
                  newX = MAX_X;
                  console.log("clampx", MAX_X);
              }

              if (newY>rooms.current.height) newY = rooms.current.height;


              this.x = newX;

              this.y = newY;


              // let hit = place.moveByAxes(this, Math.round(this.dx),
              Math.round(this.dy), "Solid", 1);


              // console.log("xy", this.x, this.y, "hit",hit);


              if ( ! hit.x && ! hit.y) {
                  return; // done
              }


              // If there is ground underneath the Chimp

              let grounded = !!hit.y;

              if (grounded) {
                  // …and the W key or the spacebar is down…
                  if (actions.Up.down) {
                      // …then jump!
                      this.dy = this.jumpSpeed;
                      this.action += "Jump";
                  } else {
                      // Reset our vspeed. We don't want to be buried underground!
                      this.dy = 0;
                      // console.log("ground vspeed",this.dy,"y",this.y);
                  }
              }


              if ( ! grounded) {
                  if (this.y > camera.height) {
                      console.log("!grounded stop up")
                      this.dy = 0;
                      this.action += "gone";
                  } else {
                      console.log("!grounded fall")
                      this.action += "fall";
                  }
              }



              if (hit.x?.template === "door") {
                  // TODO refactor to share code with manholes
                  const door = hit.x;
                  if (actions.MoveLeftRight.down) {
                      console.log("lr door?", getSymbol(), "nextSymbol",door.nextSymbol, "unlocked",isUnlocked(getSymbol(), door.nextSymbol),actions.MoveLeftRight.value, door);
                      if (door.unlocked || isUnlocked(getSymbol(), door.nextSymbol)) {
                          check(door.nextSymbol, hit);
                          moveRoom("Room_Platformer", {symbol:door.nextSymbol});
                      } else {
                          if (UI.modal) {
                              console.log("modal already", UI.modal);
                              return;
                          }
                          console.log("Make modal!");
                          updateRoomState("Room_CodewordModal", {nextSymbol: door.nextSymbol});
                          let codeRoom = rooms.append('Room_CodewordModal');                    
                          UI.modal = codeRoom;
                      }
                  }
              }
                  
              if (this.dy < 0 && this.y - fullY > 1) { // crash into ceiling?
              then stop going up
                  // console.log(this.dy, fullY, this.y)
                  this.dy = 0;
              }



              // // leads to stuck monkey bugs 'cos movement is blocked by
              collide

              // function isGrounded(This, groundCollide) {

              //         bottom: 1

              // left: 26

              // right: 32

              // top: 115

              //     let feetBounds = {

              //         x: This.x - This.shape.left + 1, 

              //         y: This.y - This.shape.top + This.height - 2,

              //         width: This.width - This.shape.left - This.shape.right
              - 2, 

              //         height: 50 //this.height + 1// - this.shape.top -
              this.shape.bottom

              //     };

              // //     bottom: 1

              // // left: 26

              // // right: 32

              // // top: 115

              //     // let gBounds = groundCollide.getBounds(true);

              //     let gb2 = {

              //         x: groundCollide.x - groundCollide.shape.left, 

              //         y: groundCollide.y - groundCollide.shape.top,

              //         width: groundCollide.width, // -
              groundCollide.shape.left - groundCollide.shape.right + 5, 

              //         height: groundCollide.height// - this.shape.top -
              this.shape.bottom

              //     };

              //     return testBoxCollision(feetBounds, gb2);

              // }
            arguments: {}
          - eventKey: OnCreate
            code: |-
              window.chimp = this; // debug

              this.animationSpeed = 0.15;

              this.dx = 0; // Horizontal speed
              this.dy = 0; // Vertical speed

              this.SPEED_LR = 6;
              this.jumpSpeed = -14;
              this.gravity = 0.5;

              this.getRoom().player = this;
              this.collisionCheck = true;

              // paranoia - clamp
              this.x = Math.round(this.x);
              this.y = Math.round(this.y);

              // camera.follow = this;
              // camera.borderX = 
            arguments: {}
            lib: core
          - eventKey: collisionCGroup
            code: |-

              // console.log("collide?");

              pulse(other, 0x9999ff, this);

              if (actions.Space.down) {
                  // avoid tripping this lots
                  if (other.colliding) return;
                  other.colliding = true;
                  timer.add(1000).then(() => {
                      other.colliding = false;
                  });
                  console.log("collide!");

                  if (other.chat) {
                      console.log("chat?");
                      doTalk(other, other.chat);
                  }
                  if (other.doUse) {
                      console.log("use?");
                      other.doUse(other, this);
                  }
              }
            arguments:
              group: interact
            lib: place
        extends:
          cgroup: ''
        lastmod: 1709247950320
        uid: CfLHnnjb3G8L59
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: coin
        depth: 0
        texture: MJ27DzqhQGj3kq
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: collisionTemplate
            code: |

              if ( ! this.kill) {
                  gameState.counters.coins++;
                  this.kill = true;
                  sounds.play("ChaChing", {volume:0.1});
              }
            arguments:
              template: CfLHnnjb3G8L59
            lib: place
        extends: {}
        lastmod: 1709117373821
        uid: CzPkkntW1Thjwh
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: code-blank
        depth: 0
        texture: 9qh5cchR7269T1
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1701817692408
        uid: jDj4719rL4Jcjd
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: coin_score
        depth: 0
        texture: MJ27DzqhQGj3kq
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnCreate
            code: |

              setText(this, "0", 24, -20, {style:'Style_Score'});
            arguments: {}
            lib: core
          - eventKey: OnDraw
            code: this.pText.text = gameState.counters.coins;
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1705522800625
        uid: qT1MKmqKz71qDq
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: door
        depth: 0
        texture: 8Wrd6WDMwgKct7
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnCreate
            code: |-
              this.zIndex = -10;
              this.depth = 0;

              this.doUse = function(pThis,pChimp) {
                  let open = isUnlocked(getSymbol(), pThis.nextSymbol);
                  // if ( ! actions.MoveLeftRight.down) return;
                  // is it the right way??
                  // console.log("lr door?",open,actions.MoveLeftRight.value, pThis.x);
                  if (open) {
                      check(pThis.nextSymbol, pThis);
                      let playerx = 0; //enter left
                      if (pThis.x < rooms.current.width / 2) {
                          playerx = rooms.current.width - 100; // enter right
                      }
                      moveRoom("Room_Platformer", {symbol:pThis.nextSymbol, playerx});
                      //         let h;
                      // if (dy===-1) {
                      //     h = rooms.current.height - 75; // floor
                      // } else {
                      //     h = pChimp.height*2; // ceiling
                      // }
                      // console.log("playery",h);
                      // updateRoomState(rooms.current.name, {playery:h});
                      return;
                  } else {
                      // console.log("locked to ",pThis.nextSymbol);
                      // open as a modal
                      if (UI.modal && UI.modal.name === "Room_CodewordModal") {
                          console.log("modal already", UI.modal);
                          return;
                      }
                      updateRoomState("Room_CodewordModal", {nextSymbol: pThis.nextSymbol});
                      let codeRoom = rooms.append('Room_CodewordModal');
                      UI.modal = codeRoom;
                  }
              };
            arguments: {}
            lib: core
          - eventKey: OnStep
            code: |
              if (this.unlocked || isUnlocked(getSymbol(), this.nextSymbol)) {
                  this.tex = "door-open";
              }
            arguments: {}
            lib: core
        extends:
          cgroup: interact
        lastmod: 1709248171950
        uid: T5qkQrDTnNDf3D
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: element-button
        depth: 0
        texture: NmHrzMbhcF3b4j
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: |-

              // console.log("click",this.canister, UI.puzzle);
              UI.puzzle.useCanister(this.canister);
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1702240313945
        uid: n7f9k3GBb6Ft9c
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: Empty
        depth: 0
        texture: JMnkc8FGk3gC8q
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends: {}
        lastmod: 1702748210812
        uid: D6BG4PQDD2b8Qm
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: empty-button
        depth: 0
        texture: HqQ2DrKCWqRjWC
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: ''
            arguments: {}
          - eventKey: OnPointerClick
            code: |-
              console.log("click empty", this.i);
              let canister = canisters[this.i];
              if (canister) canister.symbol = null;
              else {
                  console.log("no canister?!", canisters, this.i);
              }
            arguments: {}
            lib: core
          - eventKey: OnPointerEnter
            code: 'showTooltip(this, "Empty this canister");'
            arguments: {}
            lib: core
          - eventKey: OnPointerLeave
            code: hideTooltip(this);
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704041706187
        uid: PLPH5btfWJw2DL
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: empty-tile
        depth: 0
        texture: -1
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: |

              this.getRoom().onTileClick(this);
            arguments: {}
            lib: core
          - eventKey: OnPointerDown
            code: |

              log1("p down",this.pipeColor,this.gridx,this.gridy);

              let room = this.getRoom();
              if (this.isEnd) {
                  // select
                  room.setPipeColor(this.pipeColor, room);
              } else {
                  room.doFillTile(this, room.downColor);
              }
            arguments: {}
            lib: core
          - eventKey: OnPointerEnter
            code: |-

              let color = this.getRoom().downColor;
              log1("p enter",this.pipeColor,this.gridx,this.gridy, color);
              if (color) {
                  if (pointer.down.length) {
                      this.getRoom().doFillTile(this, color);
                  }
              }
            arguments: {}
            lib: core
          - eventKey: OnPointerUp
            code: |

              log1("p up",this.pipeColor,this.gridx,this.gridy);
              this.getRoom().downColor = null;
            arguments: {}
            lib: core
          - eventKey: OnPointerUpOutside
            code: |

              log1("p up outside",this.pipeColor,this.gridx,this.gridy);
              let color = this.getRoom().downColor;
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1702729866380
        uid: 8Lp4pDM4h73gdK
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: checkbox
        depth: 0
        texture: B9TgCt5Cr3n8W9
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |-
              if ( ! this.pLight) {
                  console.warn("no pLight?!");
                  return; // paranoia
              }
              if (getOption(this.key)) {
                  if (this.pLight.tex != "green-button") this.pLight.tex = "green-button";
              } else {
                  if (this.pLight.tex != "grey-button") this.pLight.tex = "grey-button";
              }
            arguments: {}
          - eventKey: OnCreate
            code: |-

              if (this.label) {
                  setText(this, this.label, 0,0,{center:true,verticalCenter:true, style:"Style_BodyText"});
              }
              let pLight = templates.copy("light");
              this.pLight = pLight;
              this.addChild(pLight);
              pLight.height = this.height * 0.6;
              pLight.y = this.height*0.15;
              pLight.scale.x = pLight.scale.y;
              pLight.x = 10;
            arguments: {}
            lib: core
          - eventKey: OnPointerClick
            code: |-

              setOption(this.key, ! getOption(this.key));
              sounds.play("Wood_End");
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1708679955771
        uid: WCCMcg1MtPjj7b
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: exit-button
        depth: 0
        texture: HqQ2DrKCWqRjWC
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: |

              this.exitPuzzle();
            arguments: {}
            lib: core
          - eventKey: OnStep
            code: |

              if (actions.Esc.released) {
                  this.exitPuzzle();
                  lastEsc = new Date().getTime();
              }
            arguments: {}
            lib: core
          - eventKey: OnCreate
            code: |

              this.exitPuzzle = () => { 
                  console.log("exitPuzzle", UI.modal, rooms.current.name, rooms.current, this);
                  if (UI.modal) {
                      try {
                          rooms.remove(UI.modal);
                      } catch(err) {
                          console.error("exit-button modal exit", err);
                      }
                      UI.modal = null;
                  }
                  if (rooms.current.name.startsWith("Room_Puzzle")) {
                      let roomName = "Room_Platformer";
                      console.log("exitPuzzle switch", roomName);
                      moveRoom(roomName, null, {transition:"none"});
                      return;
                  }
              }
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704402893717
        uid: zTf3hWP3nKGMhm
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: explosion
        depth: 0
        texture: fjGj8fq4cGP2BQ
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702138120635
        uid: mwB3HtwTFPpB1h
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: info-bar
        depth: 0
        texture: CNfG6DphJnTnM7
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnCreate
            code: >
              console.log("Make info-bar", rooms.current.element,
              roomOptions[rooms.current.name], this.x,this.y, this);

              this.alpha = 1;
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1705522864205
        uid: LHKPQrBhH2DnNt
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: light
        depth: 0
        texture: pfkw6CjfMQ2zFD
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends: {}
        lastmod: 1704134455105
        uid: 1NhMw8QtT7DBd4
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: snake-spit
        depth: 0
        texture: hrRDJbtgGhqP6F
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |
              let chimp = getPlayer();
              if ( ! chimp || chimp.dying) return;
              if (this.dying) return;

              let leftRight = this.scale.x > 0? 1 : -1;

              // // turn left / right?
              // if (chimp.x < this.x) {
              //     this.scale.x = - 1;
              // } else {
              //     this.scale.x = 1;
              // }

              // spit?
              if (this.lastSpit < new Date().getTime() - 2500) {
                  if (Math.abs(chimp.y - this.y) < 50) { // same level
                      if ((this.scale.x < 0 && this.x > chimp.x) || (this.scale.x > 0 && this.x < chimp.x)) {
                          console.log("SPIT!");
                          this.lastSpit = new Date().getTime();
                          this.tex = 'snake-spitting';
                          this.loop = false;
                          this.onComplete = () => {
                              if (this.dying) return;
                              let pSpit = templates.copy("spit-bullet");
                              pSpit.y = this.y - this.height + pSpit.height;
                              pSpit.x = this.x + this.width * 0.2;
                              pSpit.dx = 8*leftRight;      
                              this.tex = 'snake-spit';
                              this.onComplete = null;          
                          };
                          this.play(); 
                      }
                  }
              }
            arguments: {}
          - eventKey: OnCreate
            code: this.lastSpit = new Date().getTime();
            arguments: {}
            lib: core
          - eventKey: collisionTemplate
            code: |-
              if (this.dying) return;

              // jumped on??
              let chimp = getPlayer();
              if (chimp?.dy > 0 && chimp.y < this.y - 5 && ! chimp.dying) {
                  console.warn("possible jumping event", chimp.dy, chimp.y, "snake", this.y - this.height);
                  doKillMonster(this);
                  return;
              }

              // console.log("Argh!");
              doLoseLife();
            arguments:
              template: CfLHnnjb3G8L59
            lib: place
        extends:
          inheritedTemplate@@template: nFqLLKRM5LTfgL
        lastmod: 1705523534919
        uid: fhddgJcNKrhtmk
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: magnifier
        depth: 0
        texture: 5RhKC6Njn6DdPJ
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |-
              let symbol = getSymbol();
              if ( ! symbol) return;
              // if (this.symbol = symbol) return;
              this.symbol = symbol;

              if ( ! isUnlocked(symbol)) {
                  return;
              }

              if ( ! this.theta) this.theta = 0;
              this.theta += 0.01*u.delta;


              const pg = new PIXI.Graphics();

              // TODO sit pg behind this
              // pg.x = this.x;
              // pg.y = this.y;
              // this.parent.addChild(pg);

              this.addChild(pg);
              const RADIUS = (this.height*0.35)

              // black backdrop
              pg.clear();
              pg.beginFill(0x000000, 0.5);
              // pg.drawRect(0,0,5,5);
              pg.drawCircle(0, 0, RADIUS);

              // draw the atom
              let info = info4symbol[symbol];
              let orbitals = info.electron_configuration.split(" ");
              let lasto = orbitals[orbitals.length-1];
              let maxn = new Number(lasto[0]);

              const R = RADIUS / (1+maxn);
              // console.log(R, RADIUS, maxn);
              // console.log(info);
              let n = info.atomic_number;
              // spiral nucleus
              for(let i=0; i<2*n; i++) {
                  let nmi = 2*n - i;
                  let a = 0.5 + (i/(4*n));
                  pg.beginFill(i%2===0? 0xcccccc : 0xff3333, a);
                  let x = 0.1*R * Math.sqrt(nmi)*Math.cos(1*i);
                  let y = 0.1*R * Math.sqrt(nmi)*Math.sin(1*i);
                  pg.drawCircle(x, y, 2);
              }
              // electron_configuration 1s^2
              let now = new Date().getTime();
              let blink = 0x6666cc;
              let blinkAlpha = Math.cos(now/500);

              for(let i=0; i<orbitals.length; i++) {
                  let orbital = orbitals[i];
                  if (orbital[0] === "[") continue; // TODO draw e.g. Silver = "[Kr] 4d^10 5s^1"
                  let r = R * new Number(orbital[0]);
                  let n = new Number(orbital.substr(orbital.indexOf("^")+1));
                  let shell = orbital.substr(0, orbital.indexOf("^"));
                  let shellSize = size4shell[shell];
                  check(shellSize, orbital);
                  let spread = 2*Math.PI/shellSize;
                  for(let e=0; e<shellSize; e++) {
                      let x = r*Math.cos(spread*(e+i*0.5) +this.theta/(i+1));
                      let y = r*Math.sin(spread*(e+i*0.5) +this.theta/(i+1));
                      if (e<n) {
                          pg.beginFill(0x0000ff);
                      } else {
                          // missing electrons in the valence shell
                          if (blinkAlpha <= 0) continue;
                          pg.beginFill(blink, blinkAlpha); 
                      }
                      pg.drawCircle(x, y, 2);
                  }
              }
            arguments: {}
          - eventKey: OnCreate
            code: |+

            arguments: {}
            lib: core
        extends: {}
        lastmod: 1703260395717
        uid: PQcq8dPnncpj4H
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: pipe-bit
        depth: 0
        texture: cdc9RNdmNnDjLG
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702672785975
        uid: QzL19Cw9Bp2Mtp
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: Platform
        depth: 0
        texture: 6bD9dFcKKkddGT
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends:
          cgroup: Solid
        lastmod: 1704228896930
        uid: 1cRbbTTRzCHgjn
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: PlumbingContainer
        depth: 0
        texture: zzQnFNK47PRKLQ
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends: {}
        lastmod: 1702729498409
        uid: 4zDcPd9cp6LqfL
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: modal
        depth: 0
        texture: RrJhwK1DwHcbgP
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends: {}
        lastmod: 1701199591353
        uid: KPQQ9RdM3P7bRh
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: PipeColorMarker
        depth: 0
        texture: CMGjWg1kb1MQnQ
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends: {}
        lastmod: 1704134844779
        uid: Cc94g82RLh4cTF
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: red-neon
        depth: 0
        texture: KFTHQwQ1L7TqdD
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |
              // TODO parallax
              let dcx = this.startCX - camera.x;
              this.x = this.startX - dcx*0.25;
            arguments: {}
          - eventKey: OnCreate
            code: |-
              this.alpha = 0.5;
              this.zIndex = -10;
              this.startX = this.x;
              this.startCX = camera.x;
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704228537262
        uid: BBmcG1pcrBDgKb
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: sailor
        depth: 0
        texture: 65FWb6rWPQtPmH
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702069478646
        uid: hM3tKC8mzqcdTB
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: manhole
        depth: 0
        texture: LQTM63LWhb6D2d
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |-

              let symbol = getSymbol();

              if (isUnlocked(symbol, this.nextSymbol)) {
                  this.tex = "manhole-open";
              }
            arguments: {}
          - eventKey: OnPointerEnter
            code: >-

              // console.log("on hover?", this, rooms.current.element,
              this.nextSymbol);


              let label = getLabel(rooms.current.element?.symbol,
              this.nextSymbol);

              if (label) {
                  showTooltip(this, label);
              }
            arguments: {}
            lib: core
          - eventKey: OnPointerLeave
            code: hideTooltip(this);
            arguments: {}
            lib: core
          - eventKey: OnCreate
            code: |
              this.depth = 0;

              this.doUse = function(pThis, pChimp) {
                  let dy = pThis.y > 200? 1 : -1;
                  // // Must press the right key
                  // if (dy===1 && ! actions.Down.down) return;
                  // if (dy===-1 && ! actions.Up.down) return;
                  // console.log("Down?");
                  // is it open
                  let symbol = getSymbol();
                  let nextSymbol = getNextElementSymbol(symbol, 0, dy);
                  if ( ! symbol || ! nextSymbol) return;

                  let open = isUnlocked(symbol, nextSymbol);
                  if (open) {
                      console.log("Yes go down", symbol, nextSymbol, open);
                      pChimp.dy = - pChimp.jumpSpeed;
                      pChimp.collisionCheck = false;
                      moveRoom("Room_Platformer", {symbol:nextSymbol});
                      let h;
                      if (dy===-1) {
                          h = rooms.current.height - 75; // floor
                      } else {
                          h = pChimp.height*2; // ceiling
                      }
                      console.log("playery",h);
                      updateRoomState(rooms.current.name, {playery:h});
                  } else {
                      // // jump up to locked? do nothing
                      // if (dy===-1) {
                      //     console.log("jump up to locked manhole = no-op");
                      //     return;
                      // }
                      console.log("collide symbols", getSymbol(), nextSymbol);
                      // open as a modal
                      if (UI.modal) {
                          console.log("modal already", UI.modal);
                          return;
                      }
                      console.log("Make modal!");
                      updateRoomState("Room_CodewordModal", {nextSymbol: nextSymbol});
                      let codeRoom = rooms.append('Room_CodewordModal');
                      UI.modal = codeRoom;
                  }
              };
            arguments: {}
            lib: core
        extends:
          cgroup: interact
        lastmod: 1709248189518
        uid: dzFzhGJ9PJ9CHk
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: wall-v
        depth: 0
        texture: zhN6m9zwjLHdKb
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends:
          cgroup: Solid
        lastmod: 1704228902841
        uid: W135h7PGBzcWLB
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: skip-button
        depth: 0
        texture: nNqdhPMb1N5tQ1
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: |-
              rooms.current.skipped = true;

              moveRoom("Room_Platformer");
            arguments: {}
            lib: core
          - eventKey: OnCreate
            code: >

              setText(this, "skip", 0, 0,
              {style:"Style_BodyText",center:true,verticalCenter:true});
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704740782742
        uid: MMp43Fr6BgcjrG
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: start-button
        depth: 0
        texture: NmHrzMbhcF3b4j
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: >-

              let text = this.label || "Start Game";


              switch(text) {
                  case "Options":
                      openOptions();
                      return;
                  case "Start New Game":
                  case "Start Game":
                  default:
                      moveRoom("Room_Space");
                      return;
              }

              // if (this.lastClick && this.lastClick > new Date().getTime() -
              1000) {

              //     return;

              // }

              // this.tex = "element-b";

              // timer.add(500).then(() => {

              //     this.tex = "element";

              // });


              function openOptions() {
                  if (UI.modal) {
                      console.warn("modal already", UI.modal);
                      return;
                  }
                  console.log("Make modal!");    
                  let modal = rooms.append('Room_OptionsModal');
                  UI.modal = modal;
              }
            arguments: {}
            lib: core
          - eventKey: OnCreate
            code: >-
              let text = this.label || "Start Game";

              setText(this, text, 0,0,{center:true,verticalCenter:true,
              style:"Style_BodyText"});
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704139609651
        uid: QQcGJDzRwCJz5d
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: spit-bullet
        depth: 0
        texture: GB9qhpD6MmDGb3
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |
              // console.log(u.delta);
              if (this.dx || this.dy) {
                  let hit = place.moveByAxes(this, this.dx*u.delta, this.dy*u.delta, "Solid", 1);
                  if (hit) {
                      this.kill = true;
                      this.visible = false;
                  }
              }
            arguments: {}
          - eventKey: collisionTemplate
            code: |-

              // double check (seeing false height hit)
              // console.log("hit?");

              // workaround for scale bug
              let isHit = testBoxCollision(getBounds(other), getBounds(this));
              console.log("hit", isHit, this);
              if (isHit) {
                  doLoseLife();
              }
            arguments:
              template: CfLHnnjb3G8L59
            lib: place
          - eventKey: collisionCGroup
            code: |
              console.log("collide Solid");
              this.kill = true; // collision
              this.visible = false;
            arguments:
              group: Solid
            lib: place
        extends: {}
        lastmod: 1704041366534
        uid: 2rwq7jrWm7w8P8
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: speech-bubble
        depth: 0
        texture: 9gjkRp5NzjJRJP
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: ''
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704215976996
        uid: 2BKK3wjnrQHh9P
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: table-ship
        depth: 0
        texture: nj9pBWbLTfrnGz
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1702056011176
        uid: gc76jrHjcwbGgr
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: snake-3
        depth: 0
        texture: CBP6t5gDJHHK7N
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: >
              if (this.dying) return;


              if (this.tex !== "snake-slither") {
                  this.tex = 'snake-slither';
                  this.animationSpeed = 0.05;
                  this.play(); 
              }


              // If there is not ground underneath - turn

              if ( ! place.occupied(this, this.x + this.dx, this.y + 1,
              'Solid')) {
                  this.turn();
              }


              this.x += this.dx * u.delta;
            arguments: {}
          - eventKey: OnCreate
            code: |-
              this.dx = 1.5;
              // go the right way
              if (this.scale.x > 0) this.dx = - this.dx;

              this.dieTex = "snake-slither-die";   

              /**
               * pause then turn
               */
              this.turn = () => {
                  if (this.turning) return;
                  this.turning = true;
                  const dx2 = - this.dx;
                  this.dx = 0;
                  timer.add(500).then(() => {
                      this.dx = dx2;
                      this.scale.x = -this.scale.x;
                      this.turning = false;
                  });

                  // shrink to the head then turn that then extend??
              //     const mask = new PIXI.Graphics()
              // mask.beginFill(0x000000)
              // mask.drawEllipse(75, 30, 60, 40)
              // sprite.mask = mask
              };
            arguments: {}
            lib: core
          - eventKey: collisionCGroup
            code: |

              this.turn();
            arguments:
              group: Solid
            lib: place
          - eventKey: collisionTemplate
            code: >-
              if (this.dying) return;



              // jumped on??

              let chimp = getPlayer();

              if (chimp?.dy > 0 && chimp.y < this.y - 5 && ! chimp.dying) { //}
              && chimp.y > this.y) { // chimp coming down, generous 'cos
              sideways collisions favour chimp
                  console.warn("possible jumping event", chimp.dy, chimp.y, "snake", this.y, this.y - this.height);
                  doKillMonster(this);
                  return;
              }


              // console.log("Argh!");

              doLoseLife();
            arguments:
              template: CfLHnnjb3G8L59
            lib: place
        extends:
          inheritedTemplate@@template: nFqLLKRM5LTfgL
        lastmod: 1705523619547
        uid: hz2P8B2MQzdknz
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: tank-1
        depth: 0
        texture: n55kzPBmz7mjWC
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends: {}
        lastmod: 1701021068536
        uid: TJwLqMz4GGn6LB
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: tank-2
        depth: 0
        texture: N6pGH1JjFCLCLD
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |-
              if (this.unlocked) {
                  this.tex = "tank-2";
              } else {
                  this.tex = "tank-2-red";
                  if ( ! this.smoke) {
                      this.smoke = emitters.fire("SmokeFX", this.x, this.y, {depth:-1});
                      // this.smoke.x = this.width / 2;
                      // this.smoke.y = this.height / 2;
                      // this.smoke.zIndex = -10; //this.zIndex - 1;
                  }
              }
            arguments: {}
          - eventKey: OnCreate
            code: |
              let symbol = getSymbol();
              this.unlocked = unlocked[symbol];

              // add as layer??
              function switchToPuzzle() {
                  console.log("switchToPuzzle");
                  let puzzleRoomName = "Room_Puzzle_Pipes";
                  moveRoom(puzzleRoomName, {symbol}, {});    
              }

              let pThis = this;

              this.doUse = function() {
                  let symbol = getSymbol();
                  console.log("doUse",symbol);
                  check(symbol, "no symbol");
                  if (unlocked[symbol]) {
                      // unlocked!
                      pThis.unlocked = true;
                      addCanister(symbol);   
                      sounds.play("Wood_End", {volume:0.5});
                  } else {        
                      sounds.play("Sound_Squeaky_Open", {volume:0.5}, switchToPuzzle);
                  }
              };
            arguments: {}
            lib: core
          - eventKey: OnDestroy
            code: |-
              if (this.smoke) {
                  this.smoke.kill = true; //destroy();
                  this.smoke = null;
              }
            arguments: {}
            lib: core
          - eventKey: OnPointerEnter
            code: >-
              let symbol = getSymbol();

              showTooltip(this, "Dispenser for "+symbol+(this.unlocked?"":"
              (broken)"));
            arguments: {}
            lib: core
          - eventKey: OnPointerLeave
            code: hideTooltip(this);
            arguments: {}
            lib: core
        extends:
          cgroup: interact
        lastmod: 1709117223590
        uid: TQtRCB1Lb457JW
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: telephone
        depth: 0
        texture: GbQGn6BgC6nJnw
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |

              offerTalk(this);
            arguments: {}
          - eventKey: OnCreate
            code: |
              this.chat = new Chat(this.chatText || `Hello Janitor?

                  This is your Captain - with an important mission for you!

                  Fetch me a cup of hot chocolate!`);
              this.chat.then = async () => {
                  pause(250);
                  moveRoom("Room_Platformer");    
              }
            arguments: {}
            lib: core
        extends:
          cgroup: interact
        lastmod: 1704216992483
        uid: 4hNm69L2mbHtCK
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: TextBlock
        depth: 0
        texture: jGgCRLbqmTHDqm
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnCreate
            code: |-
              console.log("TextBlock", this);
              if (this.label) {
                  addText(this, this.label, 0,0,{center:true, verticalCenter:true});
              }
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1704237914928
        uid: 5qNm5Jn2njFgMr
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: wall
        depth: 0
        texture: QjqTqjwLKh13wL
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events: []
        extends:
          cgroup: Solid
        lastmod: 1704315781951
        uid: cqqdNgkBk88ckw
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: button
        depth: 0
        texture: nNqdhPMb1N5tQ1
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnPointerClick
            code: if (this.doClick) this.doClick();
            arguments: {}
            lib: core
          - eventKey: OnStep
            code: >-
              setText(this, this.text, 0, 0, {center:true,
              verticalCenter:true});
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1705522882579
        uid: 1pBF4L6tGkhfB5
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
      - type: template
        name: canister
        depth: 0
        texture: PLctmpdkJmmfkQ
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |-

              // UI room!
              let i = this.i;
              let canister = canisters[i];
              if ( ! canister) {
                  // this.alpha = 0.5;
              } else {
                  let label = canister.symbol;
              // if (label) {
                  // console.log("canister", this, i, label, canisters[i], canisters);
                  setText(this, label, 145, 20);
              }
            arguments: {}
          - eventKey: OnCreate
            code: |-

              // setText(this, "FOO", 145, 20);
            arguments: {}
            lib: core
          - eventKey: OnPointerEnter
            code: |-
              let canister = canisters[this.i];
              if (canister) {
                  let e = info4symbol[canister.symbol];
                  if ( ! e) return;
                  let gasSolid = e.standard_conditions_state || "";
                  let appearance = e.appearance || gasSolid;
                  if ( ! appearance.includes(gasSolid) && ! appearance.includes("metal")) appearance += " "+gasSolid;
                  showTooltip(this, e.name+"; "+appearance);
              }
            arguments: {}
            lib: core
          - eventKey: OnPointerLeave
            code: hideTooltip(this);
            arguments: {}
            lib: core
        extends: {}
        lastmod: 1702031510646
        uid: 1JBc4p548H4DHQ
        behaviors: []
        baseClass: AnimatedSprite
        nineSliceSettings:
          left: 16
          top: 16
          right: 16
          bottom: 16
        style: -1
  - type: folder
    uid: T457bcLng1mNfk
    colorClass: act
    icon: help-circle
    name: styles
    lastmod: 1708641564780
    entries:
      - name: Style_5Rk63W
        uid: Whhw1qJT5Rk63W
        origname: s5Rk63W
        font:
          family: sans-serif
          size: 12
          weight: 400
          italic: false
        lastmod: 1701886743860
        type: style
      - name: Style_BodyText
        uid: jtB8zh3C47n5qR
        origname: s47n5qR
        font:
          family: serif
          size: 24
          weight: 400
          italic: false
          wrap: true
          wrapPosition: 300
        lastmod: 1702658770059
        type: style
      - name: Style_CodeOn
        uid: cQkP5qHz28hCgH
        origname: s28hCgH
        font:
          family: serif
          size: 32
          weight: 400
          italic: false
        lastmod: 1702236206539
        fill:
          type: '0'
          color: '#00CC00'
        type: style
      - name: Style_CodeOff
        uid: N1TGgrDgwN4515
        origname: swN4515
        font:
          family: sans-serif
          size: 24
          weight: 400
          italic: false
        lastmod: 1702132302211
        type: style
      - name: Style_Score
        uid: 8BbjGqjKRBjMww
        origname: sRBjMww
        font:
          family: serif
          size: 32
          weight: 400
          italic: false
        fill:
          type: '0'
          color: '#F6C453'
        stroke:
          color: '#000000'
          weight: 2
        lastmod: 1701614607735
        type: style
      - name: Style_InfoBar
        uid: mM6p53Mk6FF9GC
        origname: s6FF9GC
        font:
          family: serif
          size: 32
          weight: 400
          italic: false
        lastmod: 1702236199273
        fill:
          type: '0'
          color: '#FFFFFF'
        type: style
      - name: Style_Tooltip
        uid: cDrzkmjgBCpTLC
        origname: sBCpTLC
        font:
          family: sans-serif
          size: 16
          weight: 400
          italic: false
          wrap: true
          wrapPosition: 250
        stroke:
          color: '#FFFFFF'
          weight: 1
        fill:
          type: '0'
          color: '#000000'
        shadow:
          color: '#CCCCCC'
          x: 0
          'y': 0
          blur: 5
        lastmod: 1701721763618
        type: style
  - type: folder
    uid: BpwRrn75pDwBPC
    colorClass: act
    icon: help-circle
    name: textures
    lastmod: 1708641614877
    entries:
      - lastmod: 1702069473769
        type: texture
        name: asteroid
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 156
        imgHeight: 153
        width: 156
        height: 153
        offx: 0
        offy: 0
        origname: iHrW2D3C615fW75.png
        shape: rect
        left: 0
        right: 156
        top: 0
        bottom: 153
        uid: HrW2D3C615fW75
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/asteroid.png
      - lastmod: 1700935305485
        type: texture
        name: room-128-3
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: i1hPzbtgrcpTLTB.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: 1hPzbtgrcpTLTB
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room--128-c.png
      - lastmod: 1700936915231
        type: texture
        name: room-128-4
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: iTw8mr8jmMqMRqj.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: Tw8mr8jmMqMRqj
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-window-128.png
      - lastmod: 1700935341009
        type: texture
        name: room-128-blue
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: iFmrQCpKQ3zrpLT.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: FmrQCpKQ3zrpLT
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-blue-porthole-128.png
        tiled: false
      - lastmod: 1702724068733
        type: texture
        name: atom.64
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: i2z9qPg4G28fPqq.png
        shape: rect
        left: 32
        right: 32
        top: 32
        bottom: 32
        uid: 2z9qPg4G28fPqq
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/atom.64.png
      - lastmod: 1701006716761
        type: texture
        name: backdrop
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1792
        imgHeight: 1024
        width: 1792
        height: 1024
        offx: 0
        offy: 0
        origname: izrtRFQtQWRwF5N.png
        shape: rect
        left: 0
        right: 1792
        top: 0
        bottom: 1024
        uid: zrtRFQtQWRwF5N
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: >-
          /home/daniel/ct.js/img/DALL·E 2023-11-25 20.35.10 - A backdrop wall
          for a 2D steampunk game, featuring a plain yet thematic design. The
          wall is adorned with typical steampunk elements like exposed coppe.png
        tiled: true
      - lastmod: 1703172308011
        type: texture
        name: snake-3
        untill: 0
        grid:
          - 3
          - 1
        axis:
          - 63
          - 76
        marginx: 0
        marginy: 0
        imgWidth: 383
        imgHeight: 79
        width: 127
        height: 79
        offx: 0
        offy: 0
        origname: iCBP6t5gDJHHK7N.png
        shape: rect
        left: 49
        right: 29
        top: 72
        bottom: 0
        uid: CBP6t5gDJHHK7N
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/snake-3.0.3.png
      - lastmod: 1703461962352
        type: texture
        name: snake-spit
        untill: 0
        grid:
          - 3
          - 1
        axis:
          - 39
          - 79
        marginx: 0
        marginy: 0
        imgWidth: 239
        imgHeight: 81
        width: 79
        height: 81
        offx: 0
        offy: 0
        origname: ihrRDJbtgGhqP6F.png
        shape: rect
        left: 34
        right: 31
        top: 79
        bottom: 2
        uid: hrRDJbtgGhqP6F
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/snake-spit.0.36.png
      - lastmod: 1701431006662
        type: texture
        name: spark-1
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 18
        imgHeight: 26
        width: 18
        height: 26
        offx: 0
        offy: 0
        origname: imcBfQbq3Wn517h.png
        shape: rect
        left: 0
        right: 18
        top: 0
        bottom: 26
        uid: mcBfQbq3Wn517h
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/spark-1.png
      - lastmod: 1701530313432
        type: texture
        name: speech-bubble
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 148
          - 114
        marginx: 0
        marginy: 0
        imgWidth: 181
        imgHeight: 115
        width: 181
        height: 115
        offx: 0
        offy: 0
        origname: i9gjkRp5NzjJRJP.png
        shape: rect
        left: 148
        right: 33
        top: 121
        bottom: -25
        uid: 9gjkRp5NzjJRJP
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/speech-bubble.png
      - lastmod: 1703262430585
        type: texture
        name: spit
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 12
          - 13
        marginx: 0
        marginy: 0
        imgWidth: 25
        imgHeight: 26
        width: 25
        height: 26
        offx: 0
        offy: 0
        origname: iGB9qhpD6MmDGb3.png
        shape: circle
        left: 12
        right: 13
        top: 13
        bottom: 13
        uid: GB9qhpD6MmDGb3
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/spit.png
        r: 11
      - lastmod: 1701537082122
        type: texture
        name: stairs
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 125
        imgHeight: 141
        width: 125
        height: 141
        offx: 0
        offy: 0
        origname: i9kcKWPdn6bL3Rb.png
        shape: rect
        left: 0
        right: 125
        top: 0
        bottom: 141
        uid: 9kcKWPdn6bL3Rb
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/stairs.png
      - lastmod: 1700934699611
        type: texture
        name: starry-sky-2675322_1920
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1920
        imgHeight: 1080
        width: 1920
        height: 1080
        offx: 0
        offy: 0
        origname: iCK4p8WCthKm3Nn.jpg
        shape: rect
        left: 0
        right: 1920
        top: 0
        bottom: 1080
        uid: CK4p8WCthKm3Nn
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/starry-sky-2675322_1920.jpg
        tiled: true
      - lastmod: 1701900058575
        type: texture
        name: table-ship
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 993
        imgHeight: 686
        width: 993
        height: 686
        offx: 0
        offy: 0
        origname: inj9pBWbLTfrnGz.png
        shape: rect
        left: 0
        right: 993
        top: 0
        bottom: 686
        uid: nj9pBWbLTfrnGz
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/table-ship.png
      - lastmod: 1701020789112
        type: texture
        name: tank-1
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 134
        imgHeight: 242
        width: 134
        height: 242
        offx: 0
        offy: 0
        origname: in55kzPBmz7mjWC.png
        shape: rect
        left: 0
        right: 134
        top: 0
        bottom: 242
        uid: n55kzPBmz7mjWC
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/tank-1.png
      - lastmod: 1702238624604
        type: texture
        name: tank-2
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 78
          - 109
        marginx: 0
        marginy: 0
        imgWidth: 156
        imgHeight: 218
        width: 156
        height: 218
        offx: 0
        offy: 0
        origname: icQhzhMBnB6J1dP.png
        shape: rect
        left: 78
        right: 78
        top: 109
        bottom: 109
        uid: cQhzhMBnB6J1dP
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/tank-2.png
      - lastmod: 1704575564918
        type: texture
        name: black
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 2
        imgHeight: 2
        width: 2
        height: 2
        offx: 0
        offy: 0
        origname: ifpnhg3PLddP6ND.png
        shape: rect
        left: 0
        right: 2
        top: 0
        bottom: 2
        uid: fpnhg3PLddP6ND
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/black.png
      - lastmod: 1702132193087
        type: texture
        name: black-hole
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 76
          - 81
        marginx: 0
        marginy: 0
        imgWidth: 153
        imgHeight: 163
        width: 153
        height: 163
        offx: 0
        offy: 0
        origname: iGHd2Jz4DnJjbqt.png
        shape: rect
        left: 76
        right: 77
        top: 81
        bottom: 82
        uid: GHd2Jz4DnJjbqt
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/black-hole.png
      - lastmod: 1704133206138
        type: texture
        name: text-bubble
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 312
        imgHeight: 91
        width: 312
        height: 91
        offx: 0
        offy: 0
        origname: iCg8qf9JRGCC6rd.png
        shape: rect
        left: 0
        right: 312
        top: 0
        bottom: 91
        uid: Cg8qf9JRGCC6rd
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/text-bubble.png
      - lastmod: 1701020789108
        type: texture
        name: thought-bubble
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 152
        imgHeight: 109
        width: 152
        height: 109
        offx: 0
        offy: 0
        origname: iM6g81Fbcj3PKN4.png
        shape: rect
        left: 0
        right: 152
        top: 0
        bottom: 109
        uid: M6g81Fbcj3PKN4
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/thought-bubble.png
      - lastmod: 1703199695786
        type: texture
        name: tube
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 200
        imgHeight: 494
        width: 200
        height: 494
        offx: 0
        offy: 0
        origname: iD1w3c852MNzPjd.png
        shape: rect
        left: 0
        right: 200
        top: 0
        bottom: 494
        uid: D1w3c852MNzPjd
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/tube.png
      - lastmod: 1704315773854
        type: texture
        name: wall
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 33
        imgHeight: 377
        width: 33
        height: 377
        offx: 0
        offy: 0
        origname: iQjqTqjwLKh13wL.png
        shape: rect
        left: 0
        right: 33
        top: 0
        bottom: 377
        uid: QjqTqjwLKh13wL
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/winterwell/ctjs/img/wall.png
        tiled: true
      - lastmod: 1702231105141
        type: texture
        name: wall-1
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1792
        imgHeight: 1024
        width: 1792
        height: 1024
        offx: 0
        offy: 0
        origname: i8Fr8pkbKmpqhdg.png
        shape: rect
        left: 0
        right: 1792
        top: 0
        bottom: 1024
        uid: 8Fr8pkbKmpqhdg
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/wall-1.png
        tiled: true
      - lastmod: 1702231104886
        type: texture
        name: wall-2
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1024
        imgHeight: 1024
        width: 1024
        height: 1024
        offx: 0
        offy: 0
        origname: izkP4PWrWd982rw.jpeg
        shape: rect
        left: 0
        right: 1024
        top: 0
        bottom: 1024
        uid: zkP4PWrWd982rw
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/wall-2.jpeg
      - lastmod: 1702231104883
        type: texture
        name: wall-3
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1024
        imgHeight: 1024
        width: 1024
        height: 1024
        offx: 0
        offy: 0
        origname: iLNrBGgBRjk6H1T.jpeg
        shape: rect
        left: 0
        right: 1024
        top: 0
        bottom: 1024
        uid: LNrBGgBRjk6H1T
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/wall-3.jpeg
        tiled: true
      - lastmod: 1702231104887
        type: texture
        name: wall-4
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1344
        imgHeight: 768
        width: 1344
        height: 768
        offx: 0
        offy: 0
        origname: i5WcRWPnqcq6Nkh.jpg
        shape: rect
        left: 0
        right: 1344
        top: 0
        bottom: 768
        uid: 5WcRWPnqcq6Nkh
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/wall-4.jpg
      - lastmod: 1700942881493
        type: texture
        name: wall-h
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 136
        imgHeight: 14
        width: 136
        height: 14
        offx: 0
        offy: 0
        origname: irRLnRt1rfk59LK.png
        shape: rect
        left: 0
        right: 136
        top: 0
        bottom: 14
        uid: rRLnRt1rfk59LK
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/wall-h.png
      - lastmod: 1704220816037
        type: texture
        name: wall-v
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 17
        imgHeight: 136
        width: 17
        height: 136
        offx: 0
        offy: 0
        origname: izhN6m9zwjLHdKb.png
        shape: rect
        left: 0
        right: 17
        top: 0
        bottom: 136
        uid: zhN6m9zwjLHdKb
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/wall-v.png
        tiled: true
      - lastmod: 1700934289756
        type: texture
        name: walls-128+8
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 136
        imgHeight: 136
        width: 136
        height: 136
        offx: 0
        offy: 0
        origname: inzkGKGRBK54z2r.png
        shape: rect
        left: 0
        right: 136
        top: 0
        bottom: 136
        uid: nzkGKGRBK54z2r
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/walls-128+8.png
      - lastmod: 1700932036228
        type: texture
        name: walls-2x128+8
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 272
        imgHeight: 272
        width: 272
        height: 272
        offx: 0
        offy: 0
        origname: iDFntdPR5fk8371.png
        shape: rect
        left: 0
        right: 272
        top: 0
        bottom: 272
        uid: DFntdPR5fk8371
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/walls-2x128+8.png
      - lastmod: 1702230276342
        type: texture
        name: blackSmoke00
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 362
        imgHeight: 336
        width: 362
        height: 336
        offx: 0
        offy: 0
        origname: iRt6126Rch5W1RK.png
        shape: rect
        left: 0
        right: 362
        top: 0
        bottom: 336
        uid: Rt6126Rch5W1RK
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/blackSmoke00.png
      - lastmod: 1704206189965
        type: texture
        name: block
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 87
        imgHeight: 91
        width: 87
        height: 91
        offx: 0
        offy: 0
        origname: iWCT2tzLLT3fDkq.png
        shape: rect
        left: 0
        right: 87
        top: 0
        bottom: 91
        uid: WCT2tzLLT3fDkq
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/block.png
      - lastmod: 1704740153221
        type: texture
        name: button.scaled
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 214
        imgHeight: 58
        width: 214
        height: 58
        offx: 0
        offy: 0
        origname: inNqdhPMb1N5tQ1.png
        shape: rect
        left: 0
        right: 214
        top: 0
        bottom: 58
        uid: nNqdhPMb1N5tQ1
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/button.scaled.png
      - lastmod: 1700935331159
        type: texture
        name: room-128-5
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: i1rWK8MnM4dHNK2.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: 1rWK8MnM4dHNK2
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-chart-128.png
      - lastmod: 1700935429660
        type: texture
        name: room-128-6
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: ir3D8HbMLQdj2KG.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: r3D8HbMLQdj2KG
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-cog-128.png
      - lastmod: 1700949484900
        type: texture
        name: room-128-7
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: iQWh62JdNPhQN7N.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: QWh62JdNPhQN7N
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-128-8.png
      - lastmod: 1702059358908
        type: texture
        name: sailor
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 70
          - 290
        marginx: 0
        marginy: 0
        imgWidth: 141
        imgHeight: 293
        width: 141
        height: 293
        offx: 0
        offy: 0
        origname: i65FWb6rWPQtPmH.png
        shape: rect
        left: 59
        right: 71
        top: 290
        bottom: 3
        uid: 65FWb6rWPQtPmH
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/sailor.png
      - lastmod: 1704206308201
        type: texture
        name: side-panel
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 288
        imgHeight: 939
        width: 288
        height: 939
        offx: 0
        offy: 0
        origname: iCNfG6DphJnTnM7.png
        shape: rect
        left: 0
        right: 288
        top: 0
        bottom: 939
        uid: CNfG6DphJnTnM7
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/side-panel.png
      - lastmod: 1702238626865
        type: texture
        name: tank-2-red
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 78
          - 109
        marginx: 0
        marginy: 0
        imgWidth: 156
        imgHeight: 218
        width: 156
        height: 218
        offx: 0
        offy: 0
        origname: iN6pGH1JjFCLCLD.png
        shape: rect
        left: 78
        right: 78
        top: 109
        bottom: 109
        uid: N6pGH1JjFCLCLD
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/tank-2-red.png
      - lastmod: 1702502397987
        type: texture
        name: telephone
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 88
          - 220
        marginx: 0
        marginy: 0
        imgWidth: 177
        imgHeight: 229
        width: 177
        height: 229
        offx: 0
        offy: 0
        origname: iGbQGn6BgC6nJnw.png
        shape: rect
        left: 85
        right: 77
        top: 220
        bottom: 4
        uid: GbQGn6BgC6nJnw
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/telephone.png
      - lastmod: 1701009927202
        type: texture
        name: coin
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 159
        imgHeight: 160
        width: 159
        height: 160
        offx: 0
        offy: 0
        origname: iFzbkPDhpQ9h8qz.png
        shape: rect
        left: 0
        right: 159
        top: 0
        bottom: 160
        uid: FzbkPDhpQ9h8qz
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/coin.png
      - lastmod: 1702724052005
        type: texture
        name: coin-32
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 16
          - 16
        marginx: 0
        marginy: 0
        imgWidth: 32
        imgHeight: 32
        width: 32
        height: 32
        offx: 0
        offy: 0
        origname: iMJ27DzqhQGj3kq.png
        shape: rect
        left: 16
        right: 16
        top: 16
        bottom: 16
        uid: MJ27DzqhQGj3kq
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/coin-32.png
      - lastmod: 1702747156091
        type: texture
        name: pipe-corner-NW
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: ikCFJD8MJq7gq3R.png
        shape: rect
        left: 39
        right: 39
        top: 40
        bottom: 40
        uid: kCFJD8MJq7gq3R
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-corner-NW.png
      - lastmod: 1704133699163
        type: texture
        name: green-button
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: i13P1Q5R8w1PjPR.png
        shape: rect
        left: 0
        right: 64
        top: 0
        bottom: 64
        uid: 13P1Q5R8w1PjPR
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/green-button.png
      - lastmod: 1701817668382
        type: texture
        name: code-blank
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 216
        imgHeight: 121
        width: 216
        height: 121
        offx: 0
        offy: 0
        origname: i9qh5cchR7269T1.png
        shape: rect
        left: 0
        right: 216
        top: 0
        bottom: 121
        uid: 9qh5cchR7269T1
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/code-blank.png
      - lastmod: 1701008736045
        type: texture
        name: >-
          DALL·E_2023-11-26_14.05.24_-_An_updated_version_of_the_backdrop_for_a_2D_game,_depicting_the_bridge_of_a_steampunk_spaceship,_now_with_more_space_for_people._Retain_the_original_r
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1024
        imgHeight: 1024
        width: 1024
        height: 1024
        offx: 0
        offy: 0
        origname: icbG3pR17pMHpmp.png
        shape: rect
        left: 0
        right: 1024
        top: 0
        bottom: 1024
        uid: cbG3pR17pMHpmp
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: >-
          /home/daniel/ct.js/img/DALL·E 2023-11-26 14.05.24 - An updated version
          of the backdrop for a 2D game, depicting the bridge of a steampunk
          spaceship, now with more space for people. Retain the original r.png
        tiled: true
      - lastmod: 1702724808211
        type: texture
        name: pipe-end-block
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: iCMGjWg1kb1MQnQ.png
        shape: rect
        left: 32
        right: 32
        top: 32
        bottom: 32
        uid: CMGjWg1kb1MQnQ
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-end-block.png
      - lastmod: 1704133699162
        type: texture
        name: label
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 215
        imgHeight: 52
        width: 215
        height: 52
        offx: 0
        offy: 0
        origname: iB9TgCt5Cr3n8W9.png
        shape: rect
        left: 0
        right: 215
        top: 0
        bottom: 52
        uid: B9TgCt5Cr3n8W9
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/label.png
      - lastmod: 1703529921688
        type: texture
        name: door-locked
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 256
        imgHeight: 300
        width: 256
        height: 300
        offx: 0
        offy: 0
        origname: i8Wrd6WDMwgKct7.png
        shape: rect
        left: -106
        right: 192
        top: -48
        bottom: 281
        uid: 8Wrd6WDMwgKct7
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/door-locked.png
      - lastmod: 1701019806564
        type: texture
        name: door-open
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 256
        imgHeight: 300
        width: 256
        height: 300
        offx: 0
        offy: 0
        origname: iJtRLb3R5rNqjGL.png
        shape: rect
        left: 0
        right: 256
        top: 0
        bottom: 300
        uid: JtRLb3R5rNqjGL
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/door-open.png
      - lastmod: 1700935297278
        type: texture
        name: room-128-2
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: ijh5QNq6r39fTRR.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: jh5QNq6r39fTRR
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-128-b.png
        tiled: true
      - lastmod: 1701610242786
        type: texture
        name: manhole-open
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 207
        imgHeight: 173
        width: 207
        height: 173
        offx: 0
        offy: 0
        origname: iPNwHnjdnH8j58w.png
        shape: rect
        left: 0
        right: 207
        top: 0
        bottom: 173
        uid: PNwHnjdnH8j58w
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/manhole-open.png
      - lastmod: 1701199557701
        type: texture
        name: modal
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 837
        imgHeight: 502
        width: 837
        height: 502
        offx: 0
        offy: 0
        origname: iRrJhwK1DwHcbgP.png
        shape: rect
        left: 0
        right: 837
        top: 0
        bottom: 502
        uid: RrJhwK1DwHcbgP
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/modal.png
        ignoreTiledUse: true
      - lastmod: 1703199695785
        type: texture
        name: msg-canister
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 91
        imgHeight: 228
        width: 91
        height: 228
        offx: 0
        offy: 0
        origname: ikq57G5kqTTfW8F.png
        shape: rect
        left: 0
        right: 91
        top: 0
        bottom: 228
        uid: kq57G5kqTTfW8F
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/msg-canister.png
      - lastmod: 1701019806565
        type: texture
        name: door-unlocked
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 256
        imgHeight: 300
        width: 256
        height: 300
        offx: 0
        offy: 0
        origname: inn43PtPkG9Gq8R.png
        shape: rect
        left: 0
        right: 256
        top: 0
        bottom: 300
        uid: nn43PtPkG9Gq8R
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/door-unlocked.png
      - lastmod: 1702411598130
        type: texture
        name: element
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 536
        imgHeight: 153
        width: 536
        height: 153
        offx: 0
        offy: 0
        origname: iNmHrzMbhcF3b4j.png
        shape: rect
        left: 0
        right: 536
        top: 0
        bottom: 153
        uid: NmHrzMbhcF3b4j
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/element.png
      - lastmod: 1702411593742
        type: texture
        name: element-b
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 536
        imgHeight: 153
        width: 536
        height: 153
        offx: 0
        offy: 0
        origname: i1RCrjW7DW1Jfmw.png
        shape: rect
        left: 0
        right: 536
        top: 0
        bottom: 153
        uid: 1RCrjW7DW1Jfmw
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/element-b.png
      - lastmod: 1701204340210
        type: texture
        name: empty-tile
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 40
        imgHeight: 40
        width: 40
        height: 40
        offx: 0
        offy: 0
        origname: ikLKdpm14HcQN57.png
        shape: rect
        left: 0
        right: 40
        top: 0
        bottom: 40
        uid: kLKdpm14HcQN57
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/empty-tile.png
      - lastmod: 1702069473768
        type: texture
        name: engine-fire
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 102
        imgHeight: 286
        width: 102
        height: 286
        offx: 0
        offy: 0
        origname: ifrjrPfJFbpRPhN.png
        shape: rect
        left: 0
        right: 102
        top: 0
        bottom: 286
        uid: frjrPfJFbpRPhN
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/engine-fire.png
      - lastmod: 1701628110132
        type: texture
        name: exit-button
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 34
          - 33
        marginx: 0
        marginy: 0
        imgWidth: 175
        imgHeight: 175
        width: 175
        height: 175
        offx: 0
        offy: 0
        origname: iHqQ2DrKCWqRjWC.png
        shape: rect
        left: 0
        right: 115
        top: 0
        bottom: 117
        uid: HqQ2DrKCWqRjWC
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/exit-button.png
      - lastmod: 1702138104605
        type: texture
        name: explosion
        untill: 0
        grid:
          - 5
          - 1
        axis:
          - 28
          - 52
        marginx: 3
        marginy: 0
        imgWidth: 300
        imgHeight: 53
        width: 56
        height: 53
        offx: 0
        offy: 0
        origname: ifjGj8fq4cGP2BQ.png
        shape: rect
        left: 28
        right: 28
        top: 26
        bottom: 27
        uid: fjGj8fq4cGP2BQ
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/explosion.png
      - lastmod: 1704133699159
        type: texture
        name: grey-button
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: ipfkw6CjfMQ2zFD.png
        shape: rect
        left: 0
        right: 64
        top: 0
        bottom: 64
        uid: pfkw6CjfMQ2zFD
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/grey-button.png
      - lastmod: 1702137866584
        type: texture
        name: janitors-room
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1024
        imgHeight: 1024
        width: 1024
        height: 1024
        offx: 0
        offy: 0
        origname: iPQPhMF476G12cR.jpeg
        shape: rect
        left: 0
        right: 1024
        top: 0
        bottom: 1024
        uid: PQPhMF476G12cR
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/janitors-room.jpeg
        tiled: true
      - lastmod: 1703200529938
        type: texture
        name: magnifier
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 54
          - 53
        marginx: 0
        marginy: 0
        imgWidth: 108
        imgHeight: 107
        width: 108
        height: 107
        offx: 0
        offy: 0
        origname: i5RhKC6Njn6DdPJ.png
        shape: rect
        left: 54
        right: 54
        top: 53
        bottom: 54
        uid: 5RhKC6Njn6DdPJ
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/magnifier-opacity.png
      - lastmod: 1701610219177
        type: texture
        name: manhole-closed
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 213
        imgHeight: 171
        width: 213
        height: 171
        offx: 0
        offy: 0
        origname: iLQTM63LWhb6D2d.png
        shape: rect
        left: 0
        right: 213
        top: 0
        bottom: 171
        uid: LQTM63LWhb6D2d
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/manhole-closed.png
      - lastmod: 1702499049981
        type: texture
        name: paper
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 351
        imgHeight: 235
        width: 351
        height: 235
        offx: 0
        offy: 0
        origname: ijGgCRLbqmTHDqm.png
        shape: rect
        left: 0
        right: 351
        top: 0
        bottom: 235
        uid: jGgCRLbqmTHDqm
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/paper.png
      - lastmod: 1700932036230
        type: texture
        name: periodic-table
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 1176
        imgHeight: 776
        width: 1176
        height: 776
        offx: 0
        offy: 0
        origname: iw58k2JQfdRGMWL.png
        shape: rect
        left: 0
        right: 1176
        top: 0
        bottom: 776
        uid: w58k2JQfdRGMWL
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/periodic-table.png
      - lastmod: 1702724800759
        type: texture
        name: pipe-bit-1
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: icdc9RNdmNnDjLG.png
        shape: rect
        left: 32
        right: 32
        top: 32
        bottom: 32
        uid: cdc9RNdmNnDjLG
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-bit-1.png
      - lastmod: 1702746684697
        type: texture
        name: pipe-corner-SW
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: iLdH8WKctQtDjnB.png
        shape: rect
        left: 39
        right: 40
        top: 43
        bottom: 43
        uid: LdH8WKctQtDjnB
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-corner-SW.png
      - lastmod: 1702724987591
        type: texture
        name: pipe-empty
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: iJMnkc8FGk3gC8q.png
        shape: rect
        left: 32
        right: 32
        top: 32
        bottom: 32
        uid: JMnkc8FGk3gC8q
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-empty.png
      - lastmod: 1700937802866
        type: texture
        name: pipe-steel-ew
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: iJdDqNr3DzkcL2M.png
        shape: rect
        left: 0
        right: 64
        top: 0
        bottom: 64
        uid: JdDqNr3DzkcL2M
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-steel--.64.png
      - lastmod: 1700937812634
        type: texture
        name: pipe-steel-ns
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: i7D9cGR91h77n8L.png
        shape: rect
        left: 0
        right: 64
        top: 0
        bottom: 64
        uid: 7D9cGR91h77n8L
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pipe-steel-d.64.png
      - lastmod: 1704206908917
        type: texture
        name: platform
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 191
        imgHeight: 35
        width: 191
        height: 35
        offx: 0
        offy: 0
        origname: i6bD9dFcKKkddGT.png
        shape: rect
        left: 0
        right: 191
        top: 0
        bottom: 35
        uid: 6bD9dFcKKkddGT
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/platform.png
        tiled: true
      - lastmod: 1702744160816
        type: texture
        name: pluming-container
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 481
        imgHeight: 407
        width: 481
        height: 407
        offx: 0
        offy: 0
        origname: izzQnFNK47PRKLQ.png
        shape: rect
        left: -49
        right: 428
        top: -12
        bottom: 393
        uid: zzQnFNK47PRKLQ
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/pluming-container.png
      - lastmod: 1704228209693
        type: texture
        name: red-neon
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 444
        imgHeight: 408
        width: 444
        height: 408
        offx: 0
        offy: 0
        origname: iKFTHQwQ1L7TqdD.png
        shape: rect
        left: 0
        right: 444
        top: 0
        bottom: 408
        uid: KFTHQwQ1L7TqdD
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/red-neon.png
        tiled: true
      - lastmod: 1700935290150
        type: texture
        name: room-128-1
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - -8
          - -8
        marginx: 0
        marginy: 0
        imgWidth: 128
        imgHeight: 128
        width: 128
        height: 128
        offx: 0
        offy: 0
        origname: i7n3JDcnjmntNht.png
        shape: rect
        left: 0
        right: 128
        top: 0
        bottom: 128
        uid: 7n3JDcnjmntNht
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/room-128-a.png
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 1
        gridY: 1
        diagonalGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: true
        name: Room_UI
        backgroundColor: '#000000'
        follow: -1
        backgrounds: []
        copies:
          - x: 1060
            'y': 0
            opacity: 0.75
            tint: 16777215
            scale:
              x: 0.77
              'y': 0.76677316
            rotation: 0
            uid: LHKPQrBhH2DnNt
            exts: {}
            customProperties: {}
          - x: 1122
            'y': 292
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: qT1MKmqKz71qDq
            exts: {}
            customProperties: {}
          - x: 1090
            'y': 318
            opacity: 1
            tint: 16777215
            scale:
              x: 0.48275862
              'y': 0.27007299
            rotation: 0
            uid: 1JBc4p548H4DHQ
            exts: {}
            customProperties:
              newProperty1: ''
              newProperty2: ''
              newProperty3: ''
              newProperty4: ''
              newProperty5: ''
          - x: 1090
            'y': 360
            opacity: 1
            tint: 16777215
            scale:
              x: 0.48275862
              'y': 0.28467153
            rotation: 0
            uid: 1JBc4p548H4DHQ
            exts: &ref_8 {}
            customProperties: &ref_9 {}
          - x: 1090
            'y': 402
            opacity: 1
            tint: 16777215
            scale:
              x: 0.4862069
              'y': 0.28467153
            rotation: 0
            uid: 1JBc4p548H4DHQ
            exts: *ref_8
            customProperties: *ref_9
          - x: 1090
            'y': 445
            opacity: 0
            tint: 16777215
            scale:
              x: 0.48965517
              'y': 0.28
            rotation: 0
            uid: 1JBc4p548H4DHQ
            exts: *ref_8
            customProperties: *ref_9
          - x: 1090
            'y': 488
            opacity: 0
            tint: 16777215
            scale:
              x: 0.4862069
              'y': 0.28
            rotation: 0
            uid: 1JBc4p548H4DHQ
            exts: *ref_8
            customProperties: *ref_9
          - x: 1233.49714286
            'y': 329.39428575
            opacity: 1
            tint: 16777215
            scale:
              x: 0.10285714
              'y': 0.10285714
            rotation: 0
            uid: PLPH5btfWJw2DL
            exts: {}
            customProperties: {}
          - x: 1233.49714286
            'y': 373.39428575
            opacity: 1
            tint: 16777215
            scale:
              x: 0.10285714
              'y': 0.10285714
            rotation: 0
            uid: PLPH5btfWJw2DL
            exts: {}
            customProperties: {}
          - x: 1233.49714286
            'y': 415.39428575
            opacity: 1
            tint: 16777215
            scale:
              x: 0.10285714
              'y': 0.10285714
            rotation: 0
            uid: PLPH5btfWJw2DL
            exts: {}
            customProperties: {}
          - x: 1234.49714286
            'y': 459.39428575
            opacity: 0
            tint: 16777215
            scale:
              x: 0.10285714
              'y': 0.10285714
            rotation: 0
            uid: PLPH5btfWJw2DL
            exts: &ref_10 {}
            customProperties: &ref_11 {}
          - x: 1234.49714286
            'y': 500.39428575
            opacity: 0
            tint: 16777215
            scale:
              x: 0.10285714
              'y': 0.10285714
            rotation: 0
            uid: PLPH5btfWJw2DL
            exts: *ref_10
            customProperties: *ref_11
          - x: 1099
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 0.41310541
              'y': 0.13617021
            rotation: 0
            uid: 5qNm5Jn2njFgMr
            exts: {}
            customProperties: {}
          - x: 1121.5
            'y': 251.5
            opacity: 1
            tint: 16777215
            scale:
              x: 0.5
              'y': 0.5
            rotation: 0
            uid: r5L6tg3f56jgJ4
            exts: {}
            customProperties: {}
          - x: 1174.49999996
            'y': 94.88785043
            opacity: 1
            tint: 16777215
            scale:
              x: 1.23
              'y': 1.23
            rotation: 0
            uid: PQcq8dPnncpj4H
            exts: {}
            customProperties: {}
        tiles: []
        extends: {}
        lastmod: 1704220552145
        events:
          - eventKey: OnRoomStart
            code: |-

              // Note the index so the canisters know
              let pCanisters = getTemplates(this, "canister");
              for(let i=0; i<pCanisters.length; i++) {
                  pCanisters[i].i = i;
                  // pCanisters[i].canister = canisters[i]; unstable?
              }
              let buttons = getTemplates(this, "empty-button");
              for(let i=0; i<buttons.length; i++) {
                  buttons[i].i = i;
              }

              let pTextBlock = getTemplates(this, "TextBlock")[0];
              pTextBlock.tint = 0x333333;
              let eInfo = rooms.current.element;
              if ( ! eInfo) {
                  let symbol = roomOptions[rooms.current.name]?.symbol;
                  eInfo = info4symbol[symbol];
              }
              // console.log(rooms.current, "eInfo", eInfo);
              if (eInfo?.symbol) {
                  setText(pTextBlock, eInfo.name+" "+eInfo.atomic_number, 0, 0, {center:true, verticalCenter:true, style:"Style_InfoBar"});
              } else {
                  setText(pTextBlock, "huh?", 0, 0, {center:true, verticalCenter:true, style:"Style_InfoBar"});
                  console.warn("No symbol??",rooms.current);
              }

              let pInfoBar = getTemplates(this, "info-bar")[0];
              let pg = new PIXI.Graphics();
              this.addChildAt(pg, 0);
              pg.beginFill(0x000000);
              pg.drawRect(pInfoBar.x, 0, 300, this.height);
            arguments: {}
            lib: core
        uid: 4r5LJRwRcjzkf6
        behaviors: []
      - lastmod: 1701627877470
        type: texture
        name: canister-label
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 290
        imgHeight: 137
        width: 290
        height: 137
        offx: 0
        offy: 0
        origname: iPLctmpdkJmmfkQ.png
        shape: rect
        left: 0
        right: 290
        top: 0
        bottom: 137
        uid: PLctmpdkJmmfkQ
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/canister-label.png
      - lastmod: 1702230638260
        type: texture
        name: captain
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 120
          - 490
        marginx: 0
        marginy: 0
        imgWidth: 240
        imgHeight: 503
        width: 240
        height: 503
        offx: 0
        offy: 0
        origname: ig1nN3tzJ7BFKBp.png
        shape: rect
        left: 120
        right: 120
        top: 490
        bottom: 13
        uid: g1nN3tzJ7BFKBp
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/captain.png
      - lastmod: 1704206641304
        type: texture
        name: captain-2
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 120
          - 490
        marginx: 0
        marginy: 0
        imgWidth: 222
        imgHeight: 508
        width: 222
        height: 508
        offx: 0
        offy: 0
        origname: iDk7WgQrbPcRd6B.png
        shape: rect
        left: 120
        right: 102
        top: 490
        bottom: 18
        uid: Dk7WgQrbPcRd6B
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/captain-2.png
      - lastmod: 1702509711374
        type: texture
        name: cat-1
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 34
          - 64
        marginx: 0
        marginy: 0
        imgWidth: 69
        imgHeight: 65
        width: 69
        height: 65
        offx: 0
        offy: 0
        origname: i3fQzdrGpckr7Kw.png
        shape: rect
        left: 32
        right: 35
        top: 64
        bottom: 1
        uid: 3fQzdrGpckr7Kw
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/cat-1.0.2.png
      - lastmod: 1703262370121
        type: texture
        name: chimp-idle
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 48
          - 110
        marginx: 0
        marginy: 0
        imgWidth: 96
        imgHeight: 116
        width: 96
        height: 116
        offx: 0
        offy: 0
        origname: iPDFfhPGNbzdTbw.png
        shape: rect
        left: 26
        right: 32
        top: 115
        bottom: 1
        uid: PDFfhPGNbzdTbw
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/chimp1-98x116.png
      - lastmod: 1702247733724
        type: texture
        name: chimp-walk
        untill: 0
        grid:
          - 3
          - 1
        axis:
          - 44
          - 110
        marginx: 0
        marginy: 0
        imgWidth: 266
        imgHeight: 116
        width: 88
        height: 116
        offx: 0
        offy: 0
        origname: iCmJtLRgNRJqGpT.png
        shape: rect
        left: 30
        right: 30
        top: 115
        bottom: 1
        uid: CmJtLRgNRJqGpT
        padding: 1
        isBlank: false
        group: !<tag:yaml.org,2002:js/undefined> ''
        source: /home/daniel/ct.js/img/chimp-96x3.png
  - type: folder
    uid: rCW5ThhMWqR6gM
    colorClass: act
    icon: help-circle
    name: sounds
    lastmod: 1708679108280
    entries:
      - name: Music-Brass
        uid: P9q6Btj7GwM2jn
        type: sound
        lastmod: 1708679408108
        preload: true
        variants:
          - uid: zck7CTGqFBzfzH
            source: >-
              /home/daniel/winterwell/ctjs/snd-backup/merry-go-round-of-life-broughton-brass.mp3
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 1
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
      - name: ChaChing
        uid: ct1Qkm4rJw38bp
        type: sound
        lastmod: 1708679589265
        preload: true
        variants:
          - uid: jkLRgDwkhf87zg
            source: /home/daniel/winterwell/ctjs/snd-backup/cha-ching.ogg
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 0.5
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
      - name: Wood_End
        uid: 3W2dr2J8JkKLmd
        type: sound
        lastmod: 1708680101408
        preload: true
        variants:
          - uid: 9qdJ1Fnh3bR3BQ
            source: /home/daniel/winterwell/ctjs/snd-backup/Wood_End.ogg
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 1
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
      - name: MonkeyDies
        uid: RQ394fJmpPkHfk
        type: sound
        lastmod: 1709119073205
        preload: false
        variants:
          - uid: DKNTB9PPGQJ2rp
            source: /home/daniel/winterwell/ctjs/snd-backup/argh.mp3
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 1
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
      - name: Meow
        uid: LtG62KgQgpLt35
        type: sound
        lastmod: 1709119102742
        preload: true
        variants:
          - uid: Fk8L4Dr3K34qfW
            source: /home/daniel/winterwell/ctjs/snd-backup/meow.mp3
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 1
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
      - name: Sound_Squeaky_Open
        uid: tGdH7N7cjPkCzn
        type: sound
        lastmod: 1709246621299
        preload: true
        variants:
          - uid: 3Pkh75CbLN5f6r
            source: >-
              /home/daniel/winterwell/ctjs/snd-backup/turn-crank_squeak_old_metal_machine
              .ogg
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 1
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
      - name: Sound_Steam
        uid: jcWDJh2zGPDr61
        type: sound
        lastmod: 1709247180808
        preload: true
        variants:
          - uid: BBWkJFKWKQzQ53
            source: /home/daniel/winterwell/ctjs/snd-backup/steam-101163.mp3
        distortion:
          enabled: false
          min: 0
          max: 1
        pitch:
          enabled: false
          min: 0
          max: 1
        reverb:
          enabled: false
          decayMin: 2
          decayMax: 2
          secondsMin: 2
          secondsMax: 3
          reverse: false
        volume:
          enabled: false
          min: 0
          max: 1
        eq:
          enabled: false
          bands:
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
            - min: -1
              max: 1
        panning:
          refDistance: 0.5
          rolloffFactor: 1
  - type: folder
    uid: pJDz3rQ3qjkmr4
    colorClass: act
    icon: help-circle
    name: emitters
    lastmod: 1709115431412
    entries:
      - name: SmokeFX
        uid: LQPG2J26nMpqbt
        emitters:
          - uid: pPCjK7HJwgtDQ4
            texture: Rt6126Rch5W1RK
            openedTabs:
              - texture
              - colors
              - scaling
              - velocity
              - rotation
              - spawning
            textureBehavior: textureRandom
            animatedSingleFramerate: 30
            settings:
              delay: 0
              lifetime:
                min: 0.5
                max: 0.5
              frequency: 0.008
              spawnChance: 0.92
              particlesPerWave: 1
              emitterLifetime: 0
              maxParticles: 20
              maxSpeed: 0
              pos:
                x: 0
                'y': 0
              addAtBack: false
              behaviors:
                - type: alpha
                  config:
                    alpha:
                      list:
                        - value: 0
                          time: 0
                        - value: 0.505
                          time: 0.49603174603174605
                        - value: 0
                          time: 1
                - type: color
                  config:
                    color:
                      list:
                        - value: ffffff
                          time: 0
                        - value: ffffff
                          time: 0.49603174603174605
                        - value: ffffff
                          time: 1
                - type: blendMode
                  config:
                    blendMode: normal
                - type: scale
                  config:
                    scale:
                      list:
                        - value: 0.27
                          time: 0
                        - value: 0.15
                          time: 1
                    minMult: 1
                - type: moveSpeed
                  config:
                    speed:
                      list:
                        - value: 300
                          time: 0
                        - value: 100
                          time: 1
                    minMult: 1
                - type: spawnShape
                  config:
                    type: torus
                    data:
                      innerRadius: 0
                      radius: 64
                      x: 0
                      'y': 0
                      rotation: true
                - type: rotation
                  config:
                    minStart: 0
                    maxStart: 0
                    minSpeed: 0
                    maxSpeed: 0
                    accel: 0
        lastmod: 1709115902466
        type: tandem
      - name: SparksFX
        uid: D55GMzH8g1k4zc
        emitters:
          - uid: gqbcL3dCrNC4gg
            texture: mcBfQbq3Wn517h
            openedTabs:
              - texture
              - colors
              - scaling
              - velocity
              - rotation
              - spawning
              - shape
            textureBehavior: textureRandom
            animatedSingleFramerate: 30
            settings:
              delay: 0
              lifetime:
                min: 0.5
                max: 0.5
              frequency: 0.008
              spawnChance: 1
              particlesPerWave: 1
              emitterLifetime: 0
              maxParticles: 50
              maxSpeed: 0
              pos:
                x: 0
                'y': 0
              addAtBack: false
              behaviors:
                - type: alpha
                  config:
                    alpha:
                      list:
                        - value: 0
                          time: 0
                        - value: 1
                          time: 0.5
                        - value: 0
                          time: 1
                - type: color
                  config:
                    color:
                      list:
                        - value: ffffff
                          time: 0
                        - value: ffffff
                          time: 0.5
                        - value: ffffff
                          time: 1
                - type: blendMode
                  config:
                    blendMode: normal
                - type: scale
                  config:
                    scale:
                      list:
                        - value: 1
                          time: 0
                        - value: 0.3
                          time: 1
                    minMult: 1
                - type: moveSpeed
                  config:
                    speed:
                      list:
                        - value: 500
                          time: 0
                        - value: 100
                          time: 1
                    minMult: 1
                - type: spawnShape
                  config:
                    type: torus
                    data:
                      innerRadius: 0
                      radius: 64
                      x: 0
                      'y': 0
                      rotation: true
                      affectRotation: true
                - type: rotation
                  config:
                    minStart: 270
                    maxStart: 0
                    minSpeed: 0
                    maxSpeed: 90
                    accel: 0
            showShapeVisualizer: true
        lastmod: 1709116117176
        type: tandem
